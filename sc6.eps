%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Rongzhen Chen,,,,
%%Title: Window .c
%%CreationDate: Wed Feb  6 12:59:51 2013
%%BoundingBox: 37 173 576 619
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font NimbusSansL
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: mkpsenc.tcl,v 1.3 2002/07/19 14:37:21 drh Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font NimbusSansL
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.5978 0.5978 scale
-540 -372 translate
90 745 moveto 991 745 lineto 991 0 lineto 90 0 lineto closepath clip newpath
gsave
matrix currentmatrix
388 689 translate 31 31 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
432 675 moveto
434 674 lineto
434 673 lineto
435 672 lineto
436 671 lineto
436 670 lineto
437 669 lineto
437 668 lineto
437 667 lineto
438 666 lineto
438 665 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
422 656 moveto
422 655 lineto
422 653 lineto
422 652 lineto
422 651 lineto
422 650 lineto
422 649 lineto
422 648 lineto
422 647 lineto
423 647 lineto
423 646 lineto
423 645 lineto
423 644 lineto
423 643 lineto
423 642 lineto
423 641 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
394 644 moveto
393 644 lineto
392 643 lineto
391 643 lineto
390 642 lineto
388 642 lineto
387 641 lineto
386 641 lineto
386 640 lineto
385 640 lineto
385 639 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
369 652 moveto
368 652 lineto
367 652 lineto
365 652 lineto
363 652 lineto
362 652 lineto
360 651 lineto
359 651 lineto
358 651 lineto
357 652 lineto
356 652 lineto
355 652 lineto
354 652 lineto
353 652 lineto
352 652 lineto
351 652 lineto
350 652 lineto
351 652 lineto
351 653 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
345 680 moveto
344 680 lineto
343 680 lineto
343 681 lineto
342 681 lineto
342 682 lineto
341 682 lineto
340 682 lineto
340 683 lineto
339 683 lineto
339 684 lineto
338 683 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
347 707 moveto
347 709 lineto
346 710 lineto
346 712 lineto
346 713 lineto
346 714 lineto
346 715 lineto
346 716 lineto
346 717 lineto
345 717 lineto
345 718 lineto
344 718 lineto
344 719 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
360 723 moveto
360 724 lineto
361 724 lineto
361 725 lineto
361 726 lineto
362 727 lineto
362 728 lineto
363 729 lineto
363 730 lineto
363 731 lineto
363 732 lineto
364 733 lineto
364 734 lineto
365 734 lineto
365 735 lineto
366 735 lineto
366 736 lineto
366 737 lineto
367 737 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
395 730 moveto
396 731 lineto
396 732 lineto
396 733 lineto
397 734 lineto
398 735 lineto
400 736 lineto
400 737 lineto
400 738 lineto
401 738 lineto
401 739 lineto
402 739 lineto
403 739 lineto
403 740 lineto
404 740 lineto
405 740 lineto
406 740 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
421 720 moveto
422 720 lineto
423 720 lineto
424 720 lineto
425 720 lineto
426 720 lineto
428 720 lineto
429 720 lineto
431 720 lineto
433 720 lineto
434 720 lineto
435 720 lineto
437 720 lineto
438 720 lineto
439 720 lineto
440 720 lineto
441 719 lineto
442 719 lineto
442 718 lineto
443 718 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
437 697 moveto
438 697 lineto
439 697 lineto
440 696 lineto
442 695 lineto
443 695 lineto
444 695 lineto
444 694 lineto
445 694 lineto
446 694 lineto
447 693 lineto
448 693 lineto
449 693 lineto
449 692 lineto
450 692 lineto
450 691 lineto
451 691 lineto
452 690 lineto
453 690 lineto
453 689 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
422 632 moveto
423 631 lineto
424 630 lineto
425 630 lineto
426 630 lineto
426 629 lineto
426 628 lineto
427 628 lineto
427 627 lineto
428 627 lineto
428 626 lineto
429 626 lineto
429 625 lineto
430 625 lineto
430 624 lineto
431 623 lineto
431 622 lineto
432 621 lineto
433 621 lineto
433 620 lineto
433 619 lineto
434 619 lineto
434 618 lineto
435 618 lineto
435 617 lineto
435 616 lineto
436 616 lineto
436 615 lineto
436 614 lineto
437 614 lineto
437 613 lineto
437 612 lineto
436 612 lineto
435 611 lineto
434 610 lineto
434 609 lineto
433 609 lineto
433 608 lineto
432 607 lineto
431 607 lineto
431 606 lineto
430 606 lineto
429 606 lineto
429 605 lineto
428 604 lineto
428 603 lineto
428 602 lineto
427 602 lineto
426 601 lineto
425 600 lineto
424 599 lineto
423 598 lineto
422 597 lineto
423 597 lineto
424 598 lineto
425 598 lineto
427 598 lineto
429 598 lineto
431 599 lineto
434 599 lineto
438 600 lineto
441 600 lineto
444 600 lineto
447 602 lineto
449 602 lineto
451 602 lineto
453 603 lineto
454 603 lineto
455 603 lineto
456 603 lineto
457 603 lineto
458 603 lineto
459 603 lineto
460 603 lineto
461 603 lineto
462 603 lineto
462 602 lineto
462 601 lineto
462 600 lineto
461 600 lineto
460 600 lineto
459 599 lineto
458 598 lineto
457 598 lineto
456 597 lineto
455 596 lineto
454 595 lineto
453 594 lineto
452 594 lineto
451 593 lineto
450 592 lineto
448 592 lineto
447 590 lineto
446 588 lineto
445 587 lineto
444 586 lineto
442 585 lineto
441 585 lineto
440 584 lineto
439 583 lineto
438 582 lineto
437 581 lineto
436 580 lineto
435 580 lineto
435 579 lineto
436 579 lineto
436 578 lineto
436 579 lineto
437 580 lineto
438 580 lineto
439 580 lineto
441 581 lineto
443 581 lineto
445 582 lineto
447 582 lineto
450 583 lineto
453 583 lineto
455 583 lineto
458 584 lineto
460 584 lineto
462 584 lineto
464 585 lineto
466 585 lineto
467 585 lineto
468 585 lineto
469 585 lineto
470 585 lineto
471 585 lineto
472 585 lineto
474 585 lineto
475 585 lineto
476 585 lineto
477 585 lineto
476 584 lineto
474 583 lineto
473 581 lineto
471 580 lineto
469 579 lineto
466 578 lineto
464 577 lineto
461 575 lineto
459 575 lineto
457 574 lineto
456 573 lineto
455 573 lineto
454 572 lineto
453 572 lineto
452 571 lineto
451 571 lineto
449 570 lineto
449 569 lineto
448 569 lineto
447 568 lineto
446 568 lineto
445 567 lineto
447 567 lineto
448 568 lineto
451 568 lineto
454 568 lineto
457 568 lineto
460 568 lineto
464 568 lineto
469 568 lineto
476 568 lineto
483 568 lineto
489 568 lineto
496 568 lineto
501 568 lineto
505 568 lineto
508 568 lineto
509 568 lineto
510 568 lineto
511 568 lineto
510 567 lineto
509 567 lineto
508 566 lineto
506 565 lineto
504 564 lineto
503 564 lineto
501 564 lineto
499 563 lineto
497 563 lineto
495 563 lineto
493 562 lineto
491 561 lineto
489 559 lineto
486 560 lineto
485 560 lineto
483 560 lineto
481 560 lineto
480 560 lineto
478 559 lineto
476 558 lineto
474 558 lineto
473 558 lineto
471 557 lineto
469 556 lineto
467 556 lineto
465 555 lineto
464 555 lineto
463 554 lineto
462 554 lineto
461 554 lineto
460 554 lineto
459 553 lineto
458 553 lineto
459 553 lineto
460 553 lineto
461 553 lineto
462 553 lineto
463 553 lineto
464 553 lineto
466 553 lineto
467 553 lineto
469 552 lineto
471 552 lineto
473 552 lineto
476 552 lineto
479 552 lineto
482 552 lineto
485 552 lineto
487 552 lineto
488 552 lineto
489 552 lineto
490 552 lineto
491 552 lineto
492 554 lineto
493 554 lineto
494 554 lineto
495 554 lineto
496 554 lineto
497 554 lineto
498 554 lineto
499 554 lineto
500 554 lineto
501 554 lineto
502 555 lineto
503 555 lineto
504 555 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
498 552 moveto
499 552 lineto
500 551 lineto
501 550 lineto
501 549 lineto
502 548 lineto
503 548 lineto
504 546 lineto
504 545 lineto
505 544 lineto
506 543 lineto
507 541 lineto
508 540 lineto
509 539 lineto
509 538 lineto
509 537 lineto
509 536 lineto
510 535 lineto
510 534 lineto
510 533 lineto
510 532 lineto
511 532 lineto
511 531 lineto
511 530 lineto
511 529 lineto
512 528 lineto
512 527 lineto
513 527 lineto
513 526 lineto
513 525 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
494 529 moveto
495 529 lineto
496 529 lineto
497 529 lineto
498 528 lineto
498 527 lineto
499 527 lineto
499 526 lineto
500 526 lineto
501 526 lineto
501 525 lineto
502 525 lineto
503 525 lineto
504 525 lineto
504 524 lineto
505 524 lineto
506 524 lineto
507 524 lineto
508 524 lineto
509 524 lineto
510 524 lineto
510 523 lineto
511 523 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
513 525 moveto
513 526 lineto
513 527 lineto
513 528 lineto
514 528 lineto
515 529 lineto
516 529 lineto
516 530 lineto
516 531 lineto
517 532 lineto
517 533 lineto
518 533 lineto
518 534 lineto
519 534 lineto
519 535 lineto
519 536 lineto
520 536 lineto
520 537 lineto
520 538 lineto
521 539 lineto
521 540 lineto
522 540 lineto
523 541 lineto
523 542 lineto
0 setlinecap
0 setlinejoin
4 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
275 449 moveto 715 0 rlineto 0 -370 rlineto -715 0 rlineto closepath
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
617 449 moveto
617 82 lineto
0 setlinecap
0 setlinejoin
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/NimbusSansL findfont 27 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
761 421 [
[(p-type)]
] 43 -0 0.5 0 false DrawText
grestore
gsave
/NimbusSansL findfont 27 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
379 424 [
[(n-type)]
] 43 -0 0.5 0 false DrawText
grestore
gsave
matrix currentmatrix
711 264 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
486 485 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
486 485 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
562 200 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
562 200 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
667 51 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
667 51 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
200 146 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0.000 0.000 0.000 setrgbcolor AdjustColor
fill
matrix currentmatrix
200 146 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
686 367 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
703 195 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
matrix currentmatrix
669 147 translate 9 9 scale 1 0 moveto 0 0 1 0 360 arc
setmatrix
0 setlinejoin 2 setlinecap
2 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
581 452 moveto
581 499 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
550 474 moveto
550 453 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
549 474 moveto
215 473 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
581 497 moveto
178 497 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
178 495 moveto
179 317 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
214 473 moveto
215 43 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
178 317 moveto
129 315 lineto
147 296 lineto
114 268 lineto
129 250 lineto
158 277 lineto
174 258 lineto
179 279 lineto
180 2 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
215 43 moveto
643 43 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
180 2 moveto
703 2 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
643 44 moveto
643 76 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
701 3 moveto
701 77 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
120 287 moveto
119 287 lineto
118 287 lineto
117 288 lineto
116 289 lineto
115 289 lineto
114 289 lineto
113 289 lineto
112 289 lineto
112 290 lineto
111 290 lineto
110 290 lineto
109 290 lineto
108 290 lineto
107 290 lineto
106 290 lineto
105 290 lineto
104 290 lineto
103 290 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
103 277 moveto
102 277 lineto
101 277 lineto
100 277 lineto
99 277 lineto
98 277 lineto
97 277 lineto
96 277 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
105 261 moveto
104 261 lineto
104 260 lineto
103 260 lineto
102 260 lineto
101 259 lineto
100 259 lineto
99 258 lineto
98 258 lineto
97 258 lineto
97 257 lineto
96 257 lineto
96 256 lineto
95 256 lineto
94 256 lineto
93 256 lineto
92 256 lineto
92 255 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
113 248 moveto
113 247 lineto
113 246 lineto
113 245 lineto
113 244 lineto
112 243 lineto
112 240 lineto
112 239 lineto
111 238 lineto
111 237 lineto
111 236 lineto
111 235 lineto
110 235 lineto
110 234 lineto
110 233 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
132 240 moveto
132 239 lineto
133 239 lineto
133 238 lineto
134 237 lineto
135 235 lineto
136 234 lineto
137 233 lineto
138 232 lineto
138 231 lineto
139 230 lineto
139 229 lineto
140 228 lineto
141 227 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
150 255 moveto
150 254 lineto
151 254 lineto
151 253 lineto
152 251 lineto
152 250 lineto
153 249 lineto
153 248 lineto
154 247 lineto
154 246 lineto
154 245 lineto
155 244 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
557 238 moveto
557 287.639537593986 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
557 294 moveto
550.749000000001 278.999 lineto
556.750000000001 281.879019196929 lineto
557.249999999999 281.879019196929 lineto
563.250999999999 278.999 lineto
557 294 lineto
fill
grestore
gsave
443 487 moveto
399.360462406014 487 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
393 487 moveto
408.001 480.749000000001 lineto
405.120980803071 486.750000000001 lineto
405.120980803071 487.249999999999 lineto
408.001 493.250999999999 lineto
393 487 lineto
fill
grestore
gsave
200 125 moveto
200 85.3604624060137 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
200 79 moveto
206.250999999999 94.001 lineto
200.249999999999 91.1209808030711 lineto
199.750000000001 91.1209808030711 lineto
193.749000000001 94.001 lineto
200 79 lineto
fill
grestore
gsave
688 48 moveto
688 114.639537593986 lineto
1 setlinecap
2 setlinejoin
0.499999999998 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
688 121 moveto
681.749000000001 105.999 lineto
687.750000000001 108.879019196929 lineto
688.249999999999 108.879019196929 lineto
694.250999999999 105.999 lineto
688 121 lineto
fill
grestore
restore showpage

%%Trailer
end
%%EOF
