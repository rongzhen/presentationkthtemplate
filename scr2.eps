%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: semiconductor principle.pdf
%%Creator: Adobe Acrobat 9.5.3
%%For: rongzhen chen
%%CreationDate: 2013-4-12, 13:25:54
%%BoundingBox: 0 0 675 342
%%HiResBoundingBox: 0 0 675 342
%%CropBox: 0 0 675 342
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 844 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   dc:format="application/pdf"
   xmp:CreateDate="2013-04-12T13:21:17+02:00"
   xmp:CreatorTool="Microsoft® PowerPoint® 2010"
   xmp:ModifyDate="2013-04-12T13:21:17+02:00"
   pdf:Producer="Microsoft® PowerPoint® 2010">
   <dc:creator>
    <rdf:Seq>
     <rdf:li/>
    </rdf:Seq>
   </dc:creator>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">PowerPoint Presentation</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 8 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -342 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 342 li
675 342 li
675 0 li
cp
clp
[1 0 0 1 -9 0 ]ct
0 387 mo
720 387 li
720 -153 li
0 -153 li
cp
false sop
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
0 sep
ef
49.125 172.87 mo
670.875 172.87 li
670.875 61.12 li
49.125 61.12 li
cp
gsave
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 9 342 ]ct
[621.75 0 0 111.75 40.125 169.13 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 829 
/H 149 
/M[829 0 0 -149 0 149 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Jc^N*a9(c0c2rS!n,i=aSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0G'pAh!5Jg.ZJbQ*4p
JcLB&JcLB&JcPBBJc^N*a9(c0c2rS!n,i=aSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0G'
pAh!5Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!n,i=aSH=BE^&l7RJcLB&JcLB&JcLB&q>c?r
Jg/#TmJtc]Jg0G'pAh!5Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&
JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/Ca
SH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*
a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&
JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4
Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#T
mJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&
JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE
^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0
c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&
JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJ
bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH?h5qZ+J7^&l7RJcLB&JcLB&JcLB&q>c?rJg/#T
mJtc]Jg0J(p&Lm4^`rXUaWe2<bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/FbS-$_4qZ+J7^&l7R
JcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(pAgs4^`rXUaWe2<bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0
c2rS!Jc`soqZ+J7^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg,dj^`rXUaWe2<bQ*4pJcLB&JcLB&
JcPBBJc^N*a9(c0c2rS!Jc`soqZ+J7^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg,dj^`rXUaWe2<
bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!pAt[+$kaF",qLo96V<\=`_6HB^T,(Ca%QLs"Sr2=!.k3&
!.k3X!"&c1#n.F_*$Zjc2;1!A2ZTcWXdFi%!@e0I!/VnO,/GJk!7`9F,4Hc`-S7/74[MY5;HR4r@)$(N
XfJVF@)-.N;^V>bbQ*4pJcLB&JcLB&qZ$]?k)tW&o)O@DJca!pmJtN6M#mk`&LK_BCjcSKR\[$k[^j#^
MnakY`kMM>q?"V9JcLB&JcNai%flqQ/4!6HFb>jIUo:8nX3Ri!Xb3_UIej&$,(_#T,45H],(_!L,;MSc
ApK/rT;SipXfJJ%P,j28^T.@)qBF,`JcLB&JcN@^$NUGH/PL2V^rasUg=>>;k(;amjo@[C!.k9(!ltH2
!6tY/!XTQ'A:p#8VQ[GAqnI`tK"o=?!4M_*`;kJiJcLB&c2\.W-r"H%LQnF0XM:lhXb3_UW;6LN,(_#T
,45H],)[WN2,\IPQ_LL_X8o5PX+ICeWrT6t,0U%=!.k3&!6"pC!uj."J>g]L`o_m8K')sm!6k9>Jc^N*
a9(c0c2sC8"qNY#JXW[Nn\9[jK"o@@!P*+E!lY.k!.k3&!7_&R#:2rUK:8gJXb*[.XT>D&q>c?rJg/#T
mJtc]Os1&`:iD5`XS8cIX+ICeWrRMC,0U%=!.k3&!6bEG!?+Xrd_+^ok(;anjoNg8q>c*KJca!pmJtN6
TE5<*10]0oWO_B1!PGcRXJ;/AI<KRE@p;o+6p3CY,omg6$'tn<#65>4!5\u]#64o&!lY.k!.k3&!8IPY
"<^0GJXEG'XVRt6S</AFAR/D:9L_3)0e+Cf((gr\!nma1!s/`.!;unR!s&H'q>c?rJg/#TmJtc]R3Dee
95KHUXRN:gWtq_=XehVPLOjerEbo>q=Aqpa69@.]/=n?-.KD4#!6H_+.KCdj,0U%=!.k3&!7LoN!>\._
cKs[$fts1q8LkMc#m:>2ec::%JcPBBJc^N*a9(c0c2sgD":.8<TXOC*%D9!HTpCLZAPY6,$3C9\!m1T>
!5\fO!lY.k!.k3&!9!n\!\Ii?W:?ttX/)/CIrJdj3@,:>_Z58gJcPWIM'@Nq_'8:IeKUS/"=mK*UTO'e
#-+i.Un*U!"E\$J4Y;F5_]njUaWe2<bQ*4pJcLB&fDksb@E7p##McqPAO7[S"3(=m!.k4B!.k9(!ltH2
!6tYF!X'NJNN9_a^B_HXU5j4e,6[W?mK3+_T*!.:p&N#4^&l7RJcLB&JcOm4";"%GR]H(_#HXY\G?Qp>
!k85^!.k4I!/VnO,/GJk!7`9f+p9uDQ)q"XWs>W,Vj;a=5plIQk9BX#VBWo%p&N8[[j'#rJcLB&JcOU,
!s('@h"9_3gph2T$bQIk!.k4B!.k9(!ltH2!6tYK!X&ZdFIfl6^B_HXUQ9Ch,R!K9mK3+_T*!.:o`2r4
^&l7RJcLB&JcP'9"9KoTLSsjJ#HX\^G?R!A!jM`W!.k4I!/VnO,/GJk!7`9k+p95hJYK=@Ws>W,V3ZO:
5pl4Jk9BX#VBWo%o`32[[j'#rJcLB&JcOa0!Y&5Lp>uM5\o'82[/bdYJcPBBJc^N*a9(c0c2t9Q";b$n
W4Vf="hCFZ:F-/+!q-3a!1s>8!qcQ4!kn`T!.k3&!.k4=!!EZoE0mX"XTb\eBK6h0WW7VNJcPWIM'@Nq
_'8:IeKV%<"?'nSWiGfo"g"VY?pZ4-,3U6E!2^sX,4tr[,.Ac?!.k3&!.k45!!<6KLY;Fa!n20-XoO%R
JcPBBJc^N*a9(c0c2tBT!]Gk?p:ga9QY\2Ui<&HLp&L]db6%;9`<*aT`;kJiJcLB&nGiV9E2*'."J^KH
*!)l9JcLB&q>c?rJg/#TmJtc]Xs*pCOKS;X"Kn8?7jI4AkT]^#VBWr&oDm)Z[j'#rJcLB&JcP$8!@>2J
joVkY#-%ZT!.k4B!.k9(!ltH2!6tYV!WrNbMR3)m"MCXe;A@mfmfN1_T*!1;oDli3^&l7RJcLB&JcPHD
!s'ciV"h%pXHm]d$(q9M!.k4I!/VnO,/GJk!7`:!+p0&eP-4S\"KJG^@l<9jkT]^#VBWr&oDm)Z[j'#r
JcLB&JcP-;!@YbYjoX7f,,G9k!.k4B!.k9(!ltH2!6tYY!WrNfN4/Ps"LFV<2$DP5mfN1_T*!1;oDli3
^&l7RJcLB&JcPQG!s'loVYR=sV2&5!!h97B!.k4I!/VnO,/GJk!7`:$+p0&gPHFY]"KnDG9d\aAkT]^#
VBWr&oDm)Z[j'#rJcLB&JcP6>!A)+`joW=q$_[QP!.k4B!.k9(!ltH2!6tY\!WrQjNjef!"1t(-)UecV
!qlVd!m:Z;!6##R!lY.k!.k3&!;c`u!A/MnqQ0k#LIM`>!.k3&!;Z\P,(_#T,45H],.Jg!,?:&4qPs^u
TPQXB,3U6E!2^sY,4klZ,.Ac?!.k3&!.k4A!!+dmqW7k3;$!3fJcLB&o)O@DJca!pmJtN6_?'fB6]ebQ
^B;'9<!UbOmfN1_T*!1;oDli3^&l7RJcLB&JcPcM!s(*#W;<UuWe3J;PQ6:8JcPWIM'@Nq_'8:IeKVUL
"!^p8Xnf"!T4TS),3U6E!2^sY,4klZ,.Ac?!.k3&!.k4D!!+t!qW7h.9UPm4!.k4B!.k9(!ltH2!6tYa
!WkEG[ed`@\X64ubl[>8p&L]dbQ@A9`<*aT`;kJiJcLB&!rscsW;<UuWe*>8OT9t5JcPWIM'@Nq_'8:I
eKV[N!`GDeq5XRg@OT_MkT]^#VBWu'o)QuY[j'#rJcLB&JcPQG!BA="joNn$Q2lL:JcPBBJc^N*a9(c0
c2u#f!X<)6qS*-CQV@Y+!q-3a!1s>:!qQE2!n[RT!.k3&!/(=Q!_WN^qQ0k!JN3dl!.k3&!;Z\P,(_#T
,45H],/>B(-ZH0_Wreeu-IF%$,5)#6,/kbt!6cY7,-h3#!.k3&!;c`s!g`]F!RO5u!.k3&!:p2B!eLKp
!q$'6!m(KF)2#Bp^B;$39*E9:mfN4`Sc[1=nGqJKk5YJ`nH+jRJcLB&L&_;aC8e94XTPPN2Zem;JcLB&
q>c?rJg/#TmJtc]_BK%@MlccU!h<UEc6DHrpAh$6a!1$Ri$.OgqZ-+0R/hg=JcLB&r;Zj<bkpN'c9IBj
JcLB&o)O@DJca!pmJtN6b5q`+R_8R5"1aUc"N1B1!qu\d!mUl8!:9jD!!!)n!fd84!.k3,!!4U'X8]4)
Xf\RM1]iI5JcLB&q>c?rJg/#TmJtc]`$,7\TrS!j!h!:>b9H-opAh$6a!0pOm3:QjqZ-74PlQC9JcLB&
!rr<rh#-:8cT7$cJcLB&o)O@DJca!pmJtN6blRo2W;F=2X_7sU!q-3b!1j8;!q$'U!o3hV!eLE(!.k3.
!!+[;qlKpj;$2LPJcLB&q>c?rJg/#TmJtc]`ZbF`Wr&guYB;>9,3U6F!2Um[,45Hu,3&\#!!"4"!.k3&
!.k1NL&:!5UBHJTJcLB&o)O@DJca!pmJtN6cN4,)V#7t/]q.R)!q-3b!1j8>!pTdR!o3hV!eLE(!.k30
!!+=,r2g%%MD'P]JcLB&q>c?rJg/#TmJtc]a<CXZVu3RsWM<V8,3U6F!2Um^,3f0r,3&\#!!"4"!.k3&
!/(=QE9@,]!T..<!.k3&!:p2B!eLKp!q$'6!mq&M.A$IP!kF+.]E7O'pAgcdd/r;-p&a%M!!7`PJcLB&
NW9(uMYsRZWGiFL!.k3&!.k4I!/VnO,/GJk!7`:9+ot--ql9aZ4i8K-,52)6,0D+h!;7Vs!;c`r,)H;O
!.k3*!!$:'joac.cmFJIJcLB&o)O@DJca!pmJtN6dfKRpR(iO6!kEgi\cV=%pAgcddK82(r;t[QJcLB&
JcLl4!Y^3frN-.#BE\86JcLB&JcPWIM'@Nq_'8:IeKW3]!^<3UrMp"$M(QOfkT]a$V'=),g]79si;eH0
JcLB&L]@HIiVhm>di!f=JcLB&o)O@DJca!pmJtN6eH,dXLV3T#!ka7!\,u+#pAgcddfS8(r;t[QJcLB&
JcLr6!Wm;@rN-.%D$^"=JcLB&JcPWIM'@Nq_'8:IeKW9_!\9>3rMp""O"nBnkT]a$V'=,-gAq0ri;eH0
JcLB&M?!Z%h#6@9g*2+KJcLB&o)O@DJca!pmJtN6ecGkGZi.W?]8RN6!q-3b!1j8@!jDZV!.k3&!0[B`
2l-DS!ipGNq#H!HJcLB&q>c?rJg/#TmJtc]cQWBtXo5:%Wfo<R,3U6F!2Um`,.@Q(!.k3&!/ggW^A[0r
fdm+'JcLB&JcPBBJc^N*a9(c0c2uW"!>q@*^B2$0)RKS7!qu\d!n7:T!.k3&!.k39!!*L_rN-.%Gn'KJ
JcLB&JcPWIM'@Nq_'8:IeKWBb!B?eOWrf;f3P-L!,52)6,0_=?!.k3&!.k31!!#srjoO0or;_ELJcLB&
o)SakaT0!UJca!pmJtN6g&_<YDRo_\!N.<N!q-3b!1j8B!j2NT!.k3&!1*Ze!EZ9!XT=_)o`0RDJcLB&
q>gL=aT07'Jg/#TmJtc]dini<H`[1H!NJPu,3U6F!2Umb,..E&!.k3&!07*\$.Jk8!.t(JJcLB&JcPBB
rW:%=_#f2ia9(c0c2u`%!@"QB^B1u\"0hpr!qu\d!n@@T!.k3&!.k3<!!*b$rN-.#;$$:hJcLB&JcPWI
rZ];]a<H3[_'8:IeKWKe!C!XaWrfAG,Ier],52)6,0hC?!.k3&!.k34!!&)YjoNg3q>c*IJcLB&o)Sak
_#OKX"Q]^X!:Ku@!ltH2!6tZ$!WcB5rP&B%(9[f.!qu\d!n@@T!.k4I!!*]5MZA>/R/d7RWVrq"KaRAN
JcLB&JcPWIrZ]/Y!Bh[h,4ts0,(_#T,45H],1Rk<B<;'4!MMBZ,3U6F!2Umb,..E&!.k3&!0R<_!Rq#0
!)E:hJcLB&JcPBBrW8DdmfJ(Ba9(c0c2ui(!<nJ]^B(W4XTIqmpAgcdeH2lRJcLB&JcM8?!<RHCXT>4T
n,S%?JcLB&q>gL=QN6_'Jg/#TmJtc]f-15BQ2R`aY$JCYkT]a$V'=2/[/bdYJcLB&P5kS9rT4*lp&K[E
JcLB&o)SakNWAhUJca!pmJtN6hZ<g"X8Td6PR+>ln,i:`Sc[FDXoO%RJcLB&S,`R%RJj5gI0/j;JcLB&
JcPWIrZ[@&s!!%=_'8:IeKWWi!BmO_Wr\Y>ZQeWXp&Lp5c6BXrJcLB&JcM#8!0R6B!'TuTJcLB&JcPBB
rW7cRjoCqRa9(c0c2uo*!E$E,^B(uUWWMYkp&LZceH5%:rW:+?JcLB&JcM>A!Bd@\XT>Iqm/V_<JcLB&
q>gL=Mu_`8Ua!W!mJtc]fcgE*rMot!E3UVO,5)#5,0hCu!<+1f!.k3&!.k39!!(CFjoO0;oDjICJcLB&
o)SakK`L37ScZt7mJtN6i;s"0rP&B:.&d:;!qlVc!n@A<!;Q]?!.k3&!.k3B!!$^2XT>%4li;V;JcLB&
q>gL=Mu_]7V'<`"mJtc]g*-NRrMot%7'Im",5)#5,0hCu!;Rhf!.k3&!.k3;!!*ttroO3\nc47AJcLB&
o)SakK`L37ScZt7mJtN6irT5`O8ZfoQjK\mn,i:`Sc[FDlN$_^bQ*4pJcLB&TE"unGQ"WEJcb6<JcLB&
JcPWIrZ[:$h>jAr_'8:IeKWcm!@*p/Wr\eCY9N3Tp&Lp5c6DQSq'+8fJcLB&JcM/<!&FN8!(cV[JcLB&
JcPBB!!7cQjT(kRa9(c0c3!&.!<eeh^B(u\V?65gp&LZceH5%:mK1u?JcLB&JcMJE!<RoQXT>J"kl?;8
JcLB&q>^L>M?)K5V'<`"mJtc]h')kHT)PbkWcbEfkp#g$V'=2/lN$>sh>i--JcLB&R/d4YroO77"RlDC
!.k3&!:p0j!eUL7!1j85!q$'6!p'Ia#GM.3!P1=g!q69b!1j8B!p]jS!nRF(!.k3&!29Go"-*;^!N@O3
!.k3&!.k4I!!"4#!8[^P,/GJk!7`:M+os0hri6($;QM),,5)#5,0hCu!:D&f!.k3&!.k3>!!$U0joEcr
!.k3&!.k4B!!!(Q!9F3P!ltH2!6tZ.!W`_-rkAKB/u/R<!qlVc!n@A<!:Bp?!.k3&!.k3G!!*4griH4"
*TmES!.k3&!;ZZq,)QBW!2UmU,45H],2XRF/ZJ`M!Nenn,3^<F!2Umb,3o6s,2N<O!.k3&!1NrgJc=d3
amB([!.k3&!:p0j!eUL7!1j85!q$'6!p9Uc'!2)I!OF#G!q69b!1j8B!pTdb!lt@n!.k3&!2KSq$(V!s
!MgFl!.k3&!.k4I!!"4#!8[^P,/GJk!7`:O+osO&ri6(%6)l-n,5)#5,0hCt!<+1g!.k3&!.k3@!!&Je
joE-^!.k3&!.k4B!!!(Q!9F3P!ltH2!6tZ0!W`M)rkAK;)PR<&!qlVc!n@A:!<3,A!.k3&!.k3I!!*1h
riH3n%HRSA!.k3&!;ZZq,)QBW!2UmU,45H],2j^H.'3EK!NnG^,3^<F!2Umb,3]+-,0p7@!.k3&!1a)i
MuMi=Wp9Y:!.k3&!:p0j!eUL7!1j85!q$'6!pB[cRf:&&X:_--n,i:`Sc[FDkPtSaa8gelJcLB&V#ULJ
riH3i#iku;!.k3&!;ZZq,)QBW!2UmU,45H],2j^GTDkklX>6^ukp#g$V'=2/kPtT,cN&OsJcLB&ScAaa
roO3Fl2ZD9JcLB&o)JalK)k!5ScZt7mJtN6klLj8rkAK8$_RRj!qu\c!n7:T!.k3&!.k3J!!$^3XT=pp
irFZ2JcLB&q>^L>M?)K5V'<`"mJtc]iZ\AZri6(%/uKoX,52)5,0_=?!.k3&!.k3C!!!o9joCt:!.k3&
!.k4B!!!(Q!9F3P!lkB2!6tZ2!WZO*^B(b]T*"K`pAg`ce,lfRJcLB&JcM\K!(d*k!N-Fe!.k3&!.k4I
!!"4#!8[^P,/>Dk!7`:R+olN[Wr]@aVBY7KpAh!5bp'RrJcLB&JcMGD!!3)]!6+.%JcLB&JcPBB!!7cQ
fDqrR`rb]0c3!;5"['E3^Uu@o!q69c!1a2@!j;TU!.k3&!2ol$.''JPX<QU'JcLB&JcPWI!$[:#d/^Hr
^`r4IeKX&u"]DA$X/\ji,3^<G!2Lg`,.7K'!.k3&!2';og#hGNk5^)6JcLB&o)JalK)jO(Wrg<Cmf:W7
liI>4\%f\l<1O*[!qu\c!n7:T!.k3&!.k3M!!O"7Xf\ZhhuJ?/JcLB&q>^L>M?)$(Z6I(.mf:l^jWXjk
XK/D%B;?a9,52)5,0_=?!.k3&!.k3E!!LR/k2?@(!.k3&!.k4B!!!(Q!8%:P!lkB2!6tZ5!W`G*rkAGY
S-&0]pAg`ce,lfRJcLB&JcMeN!<SbiXT2ee!.k3&!.k4I!!"4#!7:eP,/>Dk!7`:U+os$mri6$PUE\qH
pAh!5bp'RrJcLB&JcMMF!1<cJ!"n>nJcLB&JcPBBo`C-RfDqrR`rb]0c3!A7!.k-a!1')Un,i=aSH@7A
YQ07TJcLB&WW3$5riH0Mh>i--JcLB&q>g14PlT23Z6I(.mf:l^jrse_ri6$iU*AhGpAh!5bTaLrJcLB&
JcMPG!#kk!!(,cIJcLB&JcPBBiW>eRfDqrR`rb]0c3!D8"ZF'/^T@^0!q69c!1a2?!jDZV!.k3&!36)'
,cn,MSH@XJJcLB&JcPWIiZb<$d/^Hr^`r4IeKX0#"])+uX0*hE,3^<G!2Lg_,.@Q(!.k3&!2BMrgudal
j8ac3JcLB&o)RbOT`E^FWrg<Cmf:W7mfEXuZ+n&c/=HY0!qu\c!n.58!;uuC!.k3&!.k3P!!NFsXf\WD
h#N$,JcLB&q>fM!VuY3FZ6I(.mf:l^kTU0\YH+_(8"h-k,52)5,0V7q!<"+j!.k3&!.k3H!!BIfk1\hq
JcLB&JcPBBaTB$RfDqrR`rb]0c3!G9!07&n!-jn5n,i=aSH@4@l2^Y^cN&OsJcLB&X8i6EriH0.g]2p+
JcLB&q>eV]_#Vj_Z6I(.mf:l^kTU"mri6$OTH`VEpAh!5b9H3OqBFJjJcLB&JcMVI!&4E7!"n5kJcLB&
JcPBBaTB$RfDqrR`rb]0c3!J:!(Hn%!N6-h!q69c!1a2=!p]jE!pK]:!.k3&!3H5$1B+BVQ3#b@JcLB&
JcPWIaWeP$d/^Hr^`r4IeKX6%!*T<%!NIB;,3^<G!2Lg],3o6e,4GSa!.k3&!2TYtj6#KXiW+Q1JcLB&
o)Qi5])^I`Wrg<Cmf:W7nH&k)[_KSh+d`?#!qu\c!mq)8!8@SC!.k3&!.k3R!!NS(Xf\W:gAlg*JcLB&
q>eS\_>qs`Z6I(.mf:l^l66BcXfJM&5+a%`,52)5,0D+q!8A^j!.k3&!.k3J!!C+#k1JVmJcLB&JcPBB
ao]*RfDqrR`rb]0c3!M;!1<c#!,@i%n,i=aSH@.>li>W=nc47AJcLB&XoJHSriH0!g&Q^)JcLB&q>eY^
^];a^Z6I(.mf:l^l665"ri6$CSg*DCpAh!5aWg'Of-:"jJcLB&JcM\K!(m1P!!M6\JcLB&JcPBBbQ>6R
li<@R`rb]0c3!P<!*B07!25\[n,i=aSH@.>li>K9p&K[EJcLB&Y5ePgriH0\f`6U(JcLB&q>e_`^&[6p
Sg(romf:l^lQQ=Ari6$rSKd;BpAh!5aWg'Odj"_jJcLB&JcM_L!!3)]!,:?kJcLB&JcPBBc2tBRkQ%(R
`rb]0c3!S="W+_a^UY2I!q69c!1a2;!pp!6!r;nK!.k3&!3cG,$`U81W=7G[JcLB&JcPWIc6Bn$i;fSr
^`r4IeKX?(!&jeV!'$Mnkp#j%Ua!l(m/YHVJcLB&JcM_L"4$&kcee_S!.k3&!:p3;!j_mi!1X,2!q--7
!qQHnU&Me,=d9'X!qu\c!m^r8!6PBC!.k3&!.k3T!!&#XXT1]?!.k3&!.k4I!72q$!8mjP,/>Dk!7`:[
+onG<WrQn),3^<G!2Lg[,4,BV,5`X?!.k3&!3#quAcCfl!T*m/!.k3&!:p3=!jMaf!1a23!q--7!qZNo
C&YjIRZmmC!qu\c!mUl8!6G9B!.k3&!.k3U!!#mqXT4"*!.k3&!.k4I!7E($!8ddP,/>Dk!7`:\+olfc
WrSc],3^<G!2LgZ,45HW,5WR?!.k3&!3-#!"TIN`9ATZ#!.k3&!:p3?!j;UY!2ot>!q--7!qcTu+hGG'
[L\T(n,i=aSH@%;mf:H2!!%TNJcLB&Z2b%@WNE;##M/s-!.k3&!;Z]F,.7L$!3[T^,4>N^,46WT55qS`
XtZ=hkp#j%Ua!f&mf:ZXq]^grJcLB&WW3.Qk2sV<!.k3&!.k4B!7h4R!8@LP!lkB2!6tZ=!W]+s^Apcf
!q??c!1a28!q633!WW4P!.k3&!3uS)PQ%Za1tDYY!.k3&!;Z]H,.%@"!3[T^,4>N^,46WTWrB%!>acl%
,5)#4,/kbq!7)kd,)?5N!.k3O!!@Q0k2Y4sJcLB&JcPBBf`J/RgAn/R`rb]0c3!\@!+Z#C!0E?FnH/Ca
SH@":n,UQ3!!%TNJcLB&ZN'u!riH0FeGt1$JcLB&q>f1mYlN8RY9Lb+mf:l^mihaPri6$cR3Lo?p&Lm4
`?OdOcQ`61L]E#,JcMkP!!E5_!&WI2JcLB&JcPBBg]FARgAn/R`rb]0c3!_A"VJ8Z^U+?2!q??c!1a28
!q632!eLE(!.k3X!!NY-Xf\E$eGt1$JcLB&q>f:pXoQrOY9Lb+mf:l^n0.ifri6('/X[gJ,5)#4,/kbq
!7)kc,)H;O!.k3P!!CO/k/,jQJcLB&JcPBBi<#_RgAn/R`rb]0c3!_A!1!Pu!)ep\nH/CaSH@":n,UN2
rrRiRJcLB&ZiC)SriH/`e,Y(#JcLB&q>fIuW;tEJY9Lb+mf:l^n0.k&ri6$/Qm1f>p&Lm4`?OdOcQ`-.
MZA>/JcMnQ!'gJFg&Q^)JcLB&o)RnSSH.CEVuk!@mf:W7p]:F[rkAH*O94tSo`1Nab6%26a9);AL&cf*
JcN1Y!%e,O!/o;+JcLB&JcPWIjs$T$e,ZZr^`r4IeKXN-!*0$!!2Pr*lQZ!%Ua!`$nGplZp*,IrJcLB&
XT/I`k2p"(!.k3&!.k4B!9sWR!8@LP!lkB2!6tZA!X/b3^V@?!O94tSo`1Nab6%26a9)5?L]E#,JcN4Z
"Tk@!Xf2i[!.k3&!.k4I!9tc$!7V"P,/>Dk!7`:a+os$nri6#\QQk`>o`1d3`$4^OcQ`!*NrXb3JcMqR
"0CYIf@^.U!.k3&!:p3Z!gE].!4W*N!q--7!r2ltI/^k\F,pCn!qcPa!m:Z8!6>6<!f6o/!.k3Z!!$R/
XT2VS!.k3&!.k4I!:M,$!5nlP,/>Dk!7`:a+omAsWrRX8,3pHG!2LgW,4PZZ,4d"?!.k3&!3ZA&(&m=q
%+tW4!.k3&!:p3]!g*K+!4W*N!q--7!r;s%,.t\*X9=RcncJIaSH?t9nGpW3pB$9RJcLB&[f?RFX0&Lo
!n%(#!.k3&!;Z]d,+&AK!5B_n,4>N^,4cu^5,tZaXX08WlQZ!%Ua!`$nGplZn04%rJcLB&Y5e[Xk2r5e
!.k3&!.k4B!;6JR!6YAP!lkB2!6tZB!X,=6^V2Ud!qQKc!1a27!q?93!qHDT!.k3&!4Mq2Ofbae,gcUD
!.k3&!;Z]h,*W)G!5B_n,4>N^,4cu]VlQku:R*-j,4kl2,/b\q!7)kT,+&@^!.k3T!!@3&k2FnlJcLB&
JcPBBq#ZERb5f$R`rb]0c3!kE!+#T=!0<*@o)eOaSH?t9nGpW3mfJ^RJcLB&\,ZM"riH0EciAXtJcLB&
q>g=8OT<<"^EUH;mf:l^oHF9Qri6$bPToH<oDk[2`$4^OcQ_QsRfJ$?JcN%U!!3)]!&E.+JcLB&JcPBB
q#ZERb5f$R`rb]0c3!nF"V8&V^U=T2!qQKd!1X,6!q?93!pp&T!.k3&!4`(5#,nZ+W!1NJJcLB&JcPWI
q'(q$_uROr^`r4IeKXZ1"Yd'ZX0""=,4$NH!2CaV,4PZZ,3C)?!.k3&!3lM+b3%j,ec::%JcLB&o)SXh
eGoRN[/eAM\,s\Pmf:W7quQk]rkAG9MurSPo`1K`b6%26a9(N+S,e-@JcN=]!.+XH!(,!3JcLB&JcPWI
q]aPj!$]&U_uROr^`r4IeKXZ1!13\c!,@]Allu*&UE[W#nGplZi$+orJcLB&Z2ak`roO1]ec::%JcLB&
o)SakeH#OL[/eAM\,s\Pmf:W7r;m*_^;%FVMZWJOo`1K`b6%26a9'Qe[fD![JcN@^"=^FSXcC[,JcLB&
JcPWIrZ]kmr?AlS_uROr^`r4IeKX]2"B)8#X/;%(llu*&UE[W#nGplZ`?N"rJcLB&Z2b!ck2pC.!.k3&
!.k4B!!!)Q!;HW'!6YAP!lkB2!6tZF!X/_1^V@E'MZWJOo`1K`b6%26a9'Nd\,_*\JcNC_"Tk9tXfN/\
!.k3&!.k4I!!"4q!;IbN!5nlP,/>Dk!7`:f+pB<qX/i6`Os96:o`1a2`$4^OcQ^:O^AricJcN+W"/P)A
g=-+S!.k3&!:p3G!:p9"!6YAP!lkB2!6tZF!W[KE^ArP:!qQKe!1O&5!q?93!m(MT!.k3&!4r42@/d8.
@Eee(!.k3&!7_)@,.moo!5B_n,4>N^,538]K)VeNKTRJF,5)#2,/b\q!7)k+,/F82!.k3X!!!T0jo?"C
!.k3&!.k4B!8mkG!jr$O!4W*N!q--7!XAc.*k]8&Y69^ao)eUcRf^b7nGpW3`WEgRJcLB&]Dr*IX0&Lr
!mL^s!.k3&!8.A@,.moo!5B_n,4>N^,5<>c4fYQ`XX9/Sllu-'U*@N"nGplZ^EUSrJcLB&ZiC3^k2rPi
!.k3&!.k4B!9F4L!kn[+!eLKo!q--7!WiE)UAhn-4c'73!qlV`!m:Z8!6>5X!l=qh!.k3`!!&&YXT0ip
!.k3&!.k4-!:M,G!;[mk,/>Dk!7`:g+onM>WrQ([,4$NI!2:[U,4PZZ,.\u?!.k3&!4;e/BBJ@:dK"k!
JcLB&o)RtSrW:IIc2rS!`rb]0c2n"J=8or7PDB;3!qlV`!m:Z8!6>5V!lP(j!.k3a!!#=aXT3al!.k3&
!.k40!<+1i!7`9F,/>Dk!7`:h+ol9TWrSQK,4$NI!2:[U,4PZZ,.Ji?!.k3&!4Dk-!WM3]3mn"[!.k3&
!:p2B!8%:P!lkB2!6tWL%(<pc[L\/qo)eXdRKCY6nGpW3^&l7RJcLB&^&S<>Vld)"#Km+!!.k3&!.k3u
!4!fa,4>N^,5NJe/Zu.TX>#\Zllu0(Td%E!nGplZ[j'#rJcLB&[K$EKk2sn8!.k3&!.k4B!.k3]!6PA`
!q--7!W\5Z^AqYs!qQKe!1O&5!q?93!kn`T!.k3&!58F5G5eTD8]h$b!.k3&!.k3V!7<"+,4>N^,5NJ`
Q2[faDiQ%.,5)#2,/b\q!7)ju,0U%=!.k3[!!"\Ojo>G0!.k3&!.k4B!.k3N!8.Fo!q--`!oO(T!WY"Y
]t_=YL'$rJp&LQ`b6%26a9''W`;kJiJcNOc"<sqLXcgd+JcLB&JcLB&UB'3r^`r4IpEJMq!$_:a"AGeq
X/M"%llu-'U*@N"nGplZ[j'#rJcLB&[f?Nfk2pg5!.k3&!.k4B!.k35!:g33!q--c!o3kR!W`G*"2DU_
,_cBl!qlV`!m:Z8!6>5U!lY.k!.k3d!!NCmXf\W=aT-nmJcLB&JcLZ.q'*Tumf<2.h#IF!r#u:hXfJM&
6&d)T,5)#2,/b\q!7)ju,0U%=!.k3\!!AVNk1S&\JcLB&JcPBBJcLB&M?*MT!HGjU^V>8P!qQKd!1X,6
!q?93!kn`T!.k3&!5JR7>5kW(B?1()!.k3&!.k3&!.t7O,5`VbIK$8ILl<PE,4tr2,/b\q!7)ju,0U%=
!.k3]!!!E+jo?1C!.k3&!.k4B!.k3&!/^dS!Wj:O^B20S#2oW[!<)ul!qcP`!m:Z8!6>5U!lY.k!.k3e
!!Nh2Xf\5ta8gelJcLB&JcLB&K)blqr?;5%ri6('-fH8N!;?Ke,4tr2,/b\q!7)ju,0U%=!.k3]!!Cj8
k,uu0JcLB&JcPBBJcLB&M?*PU!hR0A!P^qs!fI&V!8IY!!q?93!kn`T!.k3&!5SX8M>jUW0#msD!.k3&
!.k3&!.t7O,5i\cU].:o=8F,(!2'>P,/b\q!7)ju,0U%=!.k3^!!?Hfk2X\dJcLB&JcPBBJcLB&M?*SV
!)W[0!13K_MZA>/JcLB&JcLB&_>jQtriH0O`W1SjJcLB&JcLB&K)blqrZV>Ori6$hq'(t%JcLB&JcLB&
JcN@^roO2KblE=qJcLB&o)O@BJcLT,"Tf":^V@;Z');Te!.k3&!.k3&!.k3g!!NG"Xf\Q/`W1SjJcLB&
JcLB&JcGlQ+tTnrWrP!P,*DqX!.k3&!.k3&!4r45^uje)bQ*4pJcLB&o)O@BJcLT,!<S)V^Aqj?!fI&1
!.k3&!.k3&!5ed:E;ls>:;m3b!.k3&!.k3&!.k1P!$[O(WrR8:,*DqX!.k3&!.k3&!5&:3-N<--"3^as
!.k3&!:p2B!.k3,!!'Y1^B)%KJcLB&JcLB&JcLB&_uKe<riH1%_uPAhJcLB&JcLB&JcGfOWrB%!We^Y,
!.k3&!.k3&!5/@4gA^47iQD4Q!.k3&!:p2B!.k3,!;sS3!.k3&!.k3&!.k3&!5nm8Xi(3k!.k3&!.k3&
!.k1N!;rmR!.k3&!.k3&!.k3a!;u!&!.k3&!.k4B!.k3&!/U^R^]+:c!.k3&!.k3&!.k3i!;rt:!.k3&
!.k3&!.k3&!;rmQ!.k3&!.k3&!.k3b!;u!%!.k3&!.k4B!.k3&!/U^T^B:cL!!%TNJcLB&JcLB&JcNai
riH3q8](O[!.k3&!.k3&!.k4MWr]ABLB)o+JcLB&JcLB&^&S;rk2s)QaoI"nJcLB&o)O@BR/lLR`rbH)
rW;-\rW3?6ZbO8f,Q[rGr;c`sMZA>/JcLB&JcLB&`rH8GUogc"'uBs&!.k3&!.k36!:_8K,3T%+,3/b'
+os9u"KST'5pH1+r$%:(JcLB&JcLB&JcNOc"2O']g;j8G!.k3&!:p2b!;-E\!;?K?!n758!lkB,!;uu\
!;us!QN"W%D?9k>!<)uq!o3jb!r;nK!.k3&!.k3&!65'>If?GL=2=lg!.k3&!1Nu],4km)!72q>!:_8K
,3]++,38h'+p"47"KSSM+sQpbq]ahr[N^;'JcLB&JcLB&^]4@"roO1ea8gelJcLB&o)PKbi<$CgjT+QI
`rbQ,g]@IQrkAH/rW<*"rW%WRn,i:`blZ;nJcLB&JcLB&a8c3&riH0_^]8rdJcLB&RfMXrXs2s-nKPam
lN#]a!b/42!NW-t,5_G",3^<F!6l_@!.k3&!.k3&!5JU6joBA@!.k3&!.k4B!29JP!jDak!9sX+!pfpB
!X0:H^V@>urW<*"rW%WRmfN4`Sc[(:nGpW3^&l7RJcLB&aT)JNW3*2$%DVsq!.k3&!1NuP,,ldO!:_8K
,4#<b+p0^(X/c9&3W:6#!/r,c,52)6,/b\q!7)ju,0U%=!.k3e!!CI-k0V*JJcLB&JcPBBU&a-RJc`so
li>fB!1s2)!+#I'JcbBBpAgcdb6%26a9''W`;kJiJcNmm!/^]W!(aj)JcLB&JcM8?kTYU&^`r+Fg`c`n
ri6$:K-KM'pAh$6`$4^OcQ]hBbQ*4pJcNXf!*fHb!!1(>JcLB&JcPBBiW@7&fE-X+`rbT-h#[RbrkAH'
q>u6MmfN4`Sc[(:nGpW3^&l7RJcLB&aoDE7riH0U^&W`bJcLB&q>fM!aoL<CJg.uSli>ic!-%q<!2+of
kT]a$V'<i%nGplZ[j'#rJcLB&_Z0Z<roO2X`;kJiJcLB&o)O@DJc`soli>lD"WP"e^U=aN!eLLB!qu\d
!mC`8!6>5U!lY.k!.k3o!!Nn5Xf\N-^&W`bJcLB&q>c?rJg.uSli>ld!'C1\!Ne,/,3U6F!2UmY,4GTY
,.Ac?!.k3&!5ed=dcT]4_uPAhJcLB&o)O@DJc`pnm/Z#F!<]1t^Apt'!eLLB!qu\d!mC`8!6>5U!lY.k
!.k3p!!*+`riH/Z]`<WaJcLB&q>c?rJg.rRm/Z#f!@+QBWrZTPJg0D&pAh$6`?OdOcQ]hBbQ*4pJcN^h
!-\A(_Z58gJcLB&o)O@DJc`pnm/Z#F!-/"Q!0[*YJcbBBpAgcdbQ@86a9''W`;kJiJcO!p!*T<'!.)9X
JcLB&JcPWIM'@Nq^EW%Fh]`&Jri6*e+sMU_kT]a$V'<l&n,UcY[j'#rJcLB&`;flEroO2>_Z58gJcLB&
o)O@DJc`mmmJu/H"YRI&^Tn4A!eLLB!qu\d!mC`8!6>5U!lY.k!.k3q!!OCEXf\<!]E!N`JcLB&q>c?r
Jg.oQmJu/h#=tkqX0+#u,(_$&,52)6,/kbq!7)ju,0U%=!.k3i!!Cs;k.&8.JcLB&JcPBBJc^N*`<,E,
iW98pZG4/f4SJo/!q-3b!1j89!q632!kn`T!.k3&!6tQJ#c+T)X=1[\JcLB&JcPWIM'@Nq^*;qEiZ\O\
Y,eV&;Z7kl,3U6F!2UmY,4GTY,.Ac?!.k3&!6,!@]B885_#T&eJcLB&o)O@DJc`mmm/Z/J!<f4t^ArfX
!eLLB!qu\d!mC`8!6>5U!lY.k!.k3s!!*+_riH06\c@<^JcLB&q>c?rJg.oQm/Z/j!@+NAWrS"T,(_$&
,52)6,/kbq!7)ju,0U%=!.k3k!!%!;jo?:8!.k3&!.k4B!.k9(!lY6.!94+\LAnpgT`auiJcbBBpAgcd
bQ@86a9''W`;kJiJcO*s!,__;!K@,k!.k3&!.k4I!/VnO,/,8g!957'O8c0\Ua,g^Jg0D&pAh$6`?OdO
cQ]hBbQ*4pJcNjl!$_F)!+iqGJcLB&JcPBBJc^N*_uf<+jT5EarkAK>&+p!U!q-3b!1j89!q632!kn`T
!.k3&!71]G6iO1gUB\7/JcLB&JcPWIM'@Nq]cuhDjWX\=ri6(&0`3,H,3U6F!2UmY,4GTY,.Ac?!.k3&
!6G3@!WM3]ZbHKl!.k3&!:p2B!eLKl!pp!M!X1*d^V@B0oE'UGmfN4`Sc[+;n,UN2^&l7RJcLB&d/X=i
X0&M))Rod!!.k3&!;Z\P,(_#P,4,Bm+pCH9X/i6hq]^V9kT]a$V'<l&n,UcY[j'#rJcLB&aT)Fqk2t=1
!.k3&!.k4B!.k9(!lP0-!9XCa)70=W!*JgoJcbBBpAieHa8kc2gB-jEa9''W`;kJiJcO4!!=Ye'XT1_t
!.k3&!.k4I!/VnO,/#2f!9YO,33E1\!,;9RJg0D&pAiehcN*82gEQ+ecQ]hBbQ*4pJcNpn!5AHp!!0e6
JcLB&JcPBBJc^N*_ZK6+kQ1boXo?'8M"1V!!q-3b!8%@n!9X@F!WX&+!6>5U!lY.k!.k4"!!*7oriH0>
[K(mZM?!Vaq>c*Iq>c?rJg.iOmJuGp!A:STWrS7W,(_$&,52)i,0g2H!9YO+2Xg^m,.Ac?!.k3&!6Y?B
U]0BU-+s;1!.k3&!:p2B!eLKl!pp!P!W`M&rkAK/"S)VG!q-3b!8IXn!9!qF!q--1!kn`T!.k3&!7UuL
"-iee!KR8i!.k3&!.k4I!/VnO,/#2f!9k[..'!9I!N%+;,(_$&,52)m,0Bo>!:;!!!7)ju,0U%=!.k3p
!!%HHjoB20!.k3&!.k4B!.k9(!lY6-!9sUd"J,P,!NHIr!eLLB!qu]M!lG#n!:p9[!6>5U!lY.k!.k4$
!!*+UriH3h!jr#[!.k3&!;Z\P,(_#Q,4#<p+orp_ri6(%/GLE@,3U6F!8Jd@!7_)@,45HW,.Ac?!.k3&
!6kKD=8q=^O1PCD!.k3&!:p2B!eLKm!pfpP!W\;\^B(POn,e1CmfN4`hZCRnfDtXImJt<0^&l7RJcLB&
eGoSnriH3o$+'\a!.k3&!;Z\P,(_#Q,4#<p+omr.Wr]C\pEG25kT]a$h]g)@d/`nbmJtQW[j'#rJcLB&
c2[i"roO3`\c@<^JcLB&o)O@DJc`pnlN$5P!.Y!_!Oa$;!eLLB!qu]Q!l"`b!;cid!65/T!lY.k!.k4%
!!$[2XT>=2ZN,RWJcLB&q>c?rJg.rRlN$5p!/^]U!NnNX,(_$&,52)q,/sW-!;du/!6udt,0U%=!.k3s
!!!o9joE?1!.k3&!.k4B!.k9(!lb<-!:0aeM#P-i\LHqJJcbBBpAj4T]E$:YrrVWh`r`sV`;kJiJcOC&
!-%q>!N@!C!.k3&!.k4I!/VnO,/5>f!:1m0OSu3[7J.jV,3U6F!959@!6G6@,4>NW,.Ac?!.k3&!71]G
-3!$,d's(-!.k3&!:p2B!eLKn!p]jS!W`FgrkAKH4RE3%!q-3b!9O?n!5&<P!kn`T!.k3&!8.>Q!IasL
!N[]S!.k3&!.k4I!/VnO,/5>f!:D$3,F\V4!NK&i,(_$&,52*",/=2d!6udt,0U%=!.k3u!!#1]joF,E
!.k3&!.k4B!.k9(!lb<-!:Ksi#+kh/!P(J^!eLLB!qlW\!jhs@!6,)S!lY.k!.k4)!!*.WriH4#/[,5,
!.k3&!;Z\P,(_#R,3o6t+os'cri6($<V%Dd,3U6E!:1oA!4DmP,.Ac?!.k3&!7CiI=oRO`e$]7.!.k3&
!:p2B!eLKn!p]jU!W`Y)rkAKC1@#!n!q-3a!;lno!5/BP!kn`T!.k3&!8@JS!g<Pb!N@3F!.k3&!.k4I
!/VnO,/5>f!:V05/ZAZL!N\rb,(_$&,5)$7,-(^P!6l^s,0U%=!.k4"!!%0@joEZ6!.k3&!.k4B!.k9(
!lb<-!:^*k)Q`qQ!OO0<!eLLB!lG#d!rN,:!6,)S!lY.k!.k4+!!*RuriH3t(Tmai!.k3&!;Z\P,(_#R
,3o7!+osa+ri6('6Lc7O,3U5g!8/Rh,/O?),.Ac?!.k3&!7UuKPlBeF_R';p!.k3&!:p2B!eLKn!p]jW
!Wbs)rkAK=)sIEU!q-3/!7:l<!mL_b!kn`T!.k3&!8RVU2lZeY!MBt*!.k3&!.k4I!/VnO,/5>f!:h<6
?i@#+Y<24tJg0D&_uSF6l6=IQbp'V@bQ*4pJcO=$!7(T+!3id0JcLB&JcPBBJc^N*`WGH+oE#$rL&Jae
X;'k"JcbBBa8jHdlN5N8`WEjU`;kJiJcO[.!<R-:XT=puX8mhPJcLB&q>c?rJg.rRlN$Q$!@<^'Wr]=[
mim?-kT\(Je0<rtdf@W:[j'#rJcLB&f)Pgoj8S0@R^)pF!.k3&!:p2B!eLKn!p]jZ!Wa.8rP&B'$g.SC
!q-33!6kT-!n[Lm!kn`T!.k3&!8mhX%$^^m!JLZW!.k3&!.k4I!/VnO,/5>f!;.N:33)qX!M;"4,(_$&
,00c6,2XTs!6l^s,0U%=!.k4'!!%QJjoA2^!.k3&!.k4B!.k9(!lb<-!;6Hp;7?J=!P<41!eLLB!m:Sd
!oa::!6,)S!lY.k!.k40!!,3\riH4%<N,tM!.k3&!;Z\P,(_#R,3o7&+ou/Sri6("H0c`,,3U5o!7<"F
,2<1C,.Ac?!.k3&!8.>Pbl6`*f`nY\JcLB&JcPBBJc^N*`WGH+p]:IEU]%q.Z8(DAJcbBBbQ,`dh?)U8
`WEjU`;kJiJcOg2!?.'uXT>.=VuVDLJcLB&q>c?rJg.rRlN$](!CWd_Wr]@qlQUp)kT\4Ncm%'chuM"G
[j'#rJcLB&gAh4krT4*gXoO%RJcLB&o)O@DJc_nQ!YCC*rP&B(%-%D@!q-3:!6,)o!os@$!kn`T!.k3&
!9F1^#^<BKXT=1[VZ;;KJcLB&q>c?rJg-p5!\p"?rMosn/a=O3,3U5s!6l_:,3/aK,.Ac?!.k3&!8RVU
0\lWh!*63%JcLB&JcPBBJc^N*Wr`>*E4Pq^!P3++!eLLB!n%(d!nRM:!6,)S!lY.k!.k46!!34(WVrq"
WDo\oJcLB&JcPWIM'@NqU`ogcHi0oFXEj"RJg0D&dK%E6cm%WQbp'V@bQ*4pJcO[.!=@*NjoNg5X8mhP
JcLB&o)O@DJc`%U!YfmbrP&EIOqQ[S_ZIURJcN"TdfR5b`;kJiJcP$8!XW8/rN-.&H3pAIJcLB&JcPWI
M'@NqVBQ(!K<G0R!i_MCk9@P_`rL\kW;tWr[j'#rJcLB&i;`lj\GbOjh`%P8JcLB&JcPBBJc^N*Y6"bk
S@e^6!N%L+!o=!T!.k3=!9sX"!lY.k!.k4:!!4d,X8K(#P9$@tJcLB&JcPWIM'@NqW$2:ET;qgi!NJ]P
,1e$?!.k36!:_8B,0U%=!.k42!!,mLr8n!*VuVDLJcLB&o)O@DJc`7[!sUu<Yku09Z;oZ]JcLB&R/lLR
^&l7RJcLB&mf3Fl/7kLOXT>4`TE'QDJcLB&q>c?rJg.9?""70)YPY@$Y%H]<qBCarJcLr6nKPFdbQ*4p
JcOp5!>Vd7joN'pVZ;;KJcLB&o)O@DJc`C_":n=aW4Vo@!2]8emK34bJcLB&R/lLR^&l7RJcLB&o)Jmu
4)^IdqQ0a\SH+6AJcLB&q>c?rJg.EC">F;GWiGor!3#JhmNR5_JcLr6nKPFdbQ*4pJcP'9![EKSqrRq>
G,,+i!.k3&!:p3P!WX:6<.\)a<!RB(R%C+RYI4/?"1X15!ndR*!.k3=!9sX"!p'C^&`Q$,5Cu,s56k;8
JVoSXT;MCc!i^/SS,e-@JcLB&q>fV$!'R2lJnMT+#CDf.UT1H!YkP1"O[12L!.k3&!0R?P,.AcW!9jN9
!J1@E!=/ug7U1(sWlF)pjoNaUU&]cFJcLB&o)RnS!F<C2^Oj5*^B;*C>mC90f`6U(JcM2=l2n[$jo>EQ
XQ$@6Xb*\BXTPVc8-54[JcLB&JcPWIjrshDWMZ_JX/`3&WhjS\rZ^8#JcLB&OoY"r[j'r7!<M!?k(;`I
k2te-fPU__!.k3&!.k4B!9O=_QCbjC^TtTTZip7-f`6U(JcM2=l2n[$jo>C2iN7^6K!"IC!N#pb!.k3&
!.k4I!9PI*SY`B=X/i9%X<m`fhuJ?/JcLr6nKPFdjo>BJkiRKZK')7Y!5P-*JcLB&JcPBBjoPQ0[\(<d
^U1cQ!;uuP!.k3&!1<iP!kn`u!!*n6iiRg7K!"OEP5p17JcLB&q>fY%!CErdX+ICSX8;nq,2`HQ!.k36
!:_8B,38e)`9HE9k(;afjoFH9k*c:%!.k3&!:p2B!eLK]!r;oq!ndR*!.k3=!9sX"!lY.k!.k3&!.k3&
!.k4I!/VnO,-E-d!<","!.k3&!0R?P,.Ac?!.k3&!.k3&!.k3&!:p2B!eLK]!r;oq!ndR*!.k3=!9sX"
!lY.k!.k3&!.k3&!.k4I!/VnO,-E-d!<","!.k3&!0R?P,.Ac?!.k3&!.k3&!.k3&!:p2B!eLK]!r;oq
!ndRa!6P@p!lkB:!<*&X!9sX"!lY.k!.k3&!.k3&!.k4I!/VnO,-E-d!<","!3uUP,(_#S,52*:,2`Ik
,.Ac?!.k3&!.k3&!.k3&!:p2B!eLK]!rN&q!ndS'!3ZHU!lkB:!6,)S!lY.k!.k3&!.k3&!.k4I!/VnO
,-E-f!;dtu!6kMP,(_#S,52)^,.Ac?!.k3&!.k3&!.k3&!:p2@~>

%%EndBinary
grestore
np
72 156.6 mo
72 154.61 73.612 153 75.6 153 cv
77.588 153 79.2 154.61 79.2 156.6 cv
79.2 158.59 77.588 160.2 75.6 160.2 cv
73.612 160.2 72 158.59 72 156.6 cv
cp
0 .993988 1 0 cmyk
ef
.75 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
72 156.6 mo
72 154.61 73.612 153 75.6 153 cv
77.588 153 79.2 154.61 79.2 156.6 cv
79.2 158.59 77.588 160.2 75.6 160.2 cv
73.612 160.2 72 158.59 72 156.6 cv
cp
@
84 156.6 mo
84 154.61 85.612 153 87.6 153 cv
89.588 153 91.2 154.61 91.2 156.6 cv
91.2 158.59 89.588 160.2 87.6 160.2 cv
85.612 160.2 84 158.59 84 156.6 cv
cp
ef
84 156.6 mo
84 154.61 85.612 153 87.6 153 cv
89.588 153 91.2 154.61 91.2 156.6 cv
91.2 158.59 89.588 160.2 87.6 160.2 cv
85.612 160.2 84 158.59 84 156.6 cv
cp
@
96.565 156.6 mo
96.565 154.61 98.176 153 100.16 153 cv
102.15 153 103.76 154.61 103.76 156.6 cv
103.76 158.59 102.15 160.2 100.16 160.2 cv
98.176 160.2 96.565 158.59 96.565 156.6 cv
cp
ef
96.565 156.6 mo
96.565 154.61 98.176 153 100.16 153 cv
102.15 153 103.76 154.61 103.76 156.6 cv
103.76 158.59 102.15 160.2 100.16 160.2 cv
98.176 160.2 96.565 158.59 96.565 156.6 cv
cp
@
109.27 156.6 mo
109.27 154.61 110.88 153 112.87 153 cv
114.86 153 116.47 154.61 116.47 156.6 cv
116.47 158.59 114.86 160.2 112.87 160.2 cv
110.88 160.2 109.27 158.59 109.27 156.6 cv
cp
ef
109.27 156.6 mo
109.27 154.61 110.88 153 112.87 153 cv
114.86 153 116.47 154.61 116.47 156.6 cv
116.47 158.59 114.86 160.2 112.87 160.2 cv
110.88 160.2 109.27 158.59 109.27 156.6 cv
cp
@
122.59 156.6 mo
122.59 154.61 124.21 153 126.19 153 cv
128.18 153 129.79 154.61 129.79 156.6 cv
129.79 158.59 128.18 160.2 126.19 160.2 cv
124.21 160.2 122.59 158.59 122.59 156.6 cv
cp
ef
122.59 156.6 mo
122.59 154.61 124.21 153 126.19 153 cv
128.18 153 129.79 154.61 129.79 156.6 cv
129.79 158.59 128.18 160.2 126.19 160.2 cv
124.21 160.2 122.59 158.59 122.59 156.6 cv
cp
@
150.65 157.09 mo
150.65 155.1 152.26 153.49 154.25 153.49 cv
156.24 153.49 157.85 155.1 157.85 157.09 cv
157.85 159.07 156.24 160.69 154.25 160.69 cv
152.26 160.69 150.65 159.07 150.65 157.09 cv
cp
ef
150.65 157.09 mo
150.65 155.1 152.26 153.49 154.25 153.49 cv
156.24 153.49 157.85 155.1 157.85 157.09 cv
157.85 159.07 156.24 160.69 154.25 160.69 cv
152.26 160.69 150.65 159.07 150.65 157.09 cv
cp
@
162.97 157.09 mo
162.97 155.1 164.58 153.49 166.57 153.49 cv
168.56 153.49 170.17 155.1 170.17 157.09 cv
170.17 159.07 168.56 160.69 166.57 160.69 cv
164.58 160.69 162.97 159.07 162.97 157.09 cv
cp
ef
162.97 157.09 mo
162.97 155.1 164.58 153.49 166.57 153.49 cv
168.56 153.49 170.17 155.1 170.17 157.09 cv
170.17 159.07 168.56 160.69 166.57 160.69 cv
164.58 160.69 162.97 159.07 162.97 157.09 cv
cp
@
136.8 157.04 mo
136.8 155.05 138.41 153.44 140.4 153.44 cv
142.39 153.44 144 155.05 144 157.04 cv
144 159.03 142.39 160.64 140.4 160.64 cv
138.41 160.64 136.8 159.03 136.8 157.04 cv
cp
ef
136.8 157.04 mo
136.8 155.05 138.41 153.44 140.4 153.44 cv
142.39 153.44 144 155.05 144 157.04 cv
144 159.03 142.39 160.64 140.4 160.64 cv
138.41 160.64 136.8 159.03 136.8 157.04 cv
cp
@
176.85 157.09 mo
176.85 155.1 178.47 153.49 180.45 153.49 cv
182.44 153.49 184.05 155.1 184.05 157.09 cv
184.05 159.07 182.44 160.69 180.45 160.69 cv
178.47 160.69 176.85 159.07 176.85 157.09 cv
cp
ef
176.85 157.09 mo
176.85 155.1 178.47 153.49 180.45 153.49 cv
182.44 153.49 184.05 155.1 184.05 157.09 cv
184.05 159.07 182.44 160.69 180.45 160.69 cv
178.47 160.69 176.85 159.07 176.85 157.09 cv
cp
@
188.85 157.09 mo
188.85 155.1 190.47 153.49 192.45 153.49 cv
194.44 153.49 196.05 155.1 196.05 157.09 cv
196.05 159.07 194.44 160.69 192.45 160.69 cv
190.47 160.69 188.85 159.07 188.85 157.09 cv
cp
ef
188.85 157.09 mo
188.85 155.1 190.47 153.49 192.45 153.49 cv
194.44 153.49 196.05 155.1 196.05 157.09 cv
196.05 159.07 194.44 160.69 192.45 160.69 cv
190.47 160.69 188.85 159.07 188.85 157.09 cv
cp
@
201.42 157.09 mo
201.42 155.1 203.03 153.49 205.02 153.49 cv
207.01 153.49 208.62 155.1 208.62 157.09 cv
208.62 159.07 207.01 160.69 205.02 160.69 cv
203.03 160.69 201.42 159.07 201.42 157.09 cv
cp
ef
201.42 157.09 mo
201.42 155.1 203.03 153.49 205.02 153.49 cv
207.01 153.49 208.62 155.1 208.62 157.09 cv
208.62 159.07 207.01 160.69 205.02 160.69 cv
203.03 160.69 201.42 159.07 201.42 157.09 cv
cp
@
214.12 157.09 mo
214.12 155.1 215.74 153.49 217.72 153.49 cv
219.71 153.49 221.32 155.1 221.32 157.09 cv
221.32 159.07 219.71 160.69 217.72 160.69 cv
215.74 160.69 214.12 159.07 214.12 157.09 cv
cp
ef
214.12 157.09 mo
214.12 155.1 215.74 153.49 217.72 153.49 cv
219.71 153.49 221.32 155.1 221.32 157.09 cv
221.32 159.07 219.71 160.69 217.72 160.69 cv
215.74 160.69 214.12 159.07 214.12 157.09 cv
cp
@
227.45 157.09 mo
227.45 155.1 229.06 153.49 231.05 153.49 cv
233.04 153.49 234.65 155.1 234.65 157.09 cv
234.65 159.07 233.04 160.69 231.05 160.69 cv
229.06 160.69 227.45 159.07 227.45 157.09 cv
cp
ef
227.45 157.09 mo
227.45 155.1 229.06 153.49 231.05 153.49 cv
233.04 153.49 234.65 155.1 234.65 157.09 cv
234.65 159.07 233.04 160.69 231.05 160.69 cv
229.06 160.69 227.45 159.07 227.45 157.09 cv
cp
@
255.5 157.57 mo
255.5 155.58 257.11 153.97 259.1 153.97 cv
261.09 153.97 262.7 155.58 262.7 157.57 cv
262.7 159.56 261.09 161.17 259.1 161.17 cv
257.11 161.17 255.5 159.56 255.5 157.57 cv
cp
ef
255.5 157.57 mo
255.5 155.58 257.11 153.97 259.1 153.97 cv
261.09 153.97 262.7 155.58 262.7 157.57 cv
262.7 159.56 261.09 161.17 259.1 161.17 cv
257.11 161.17 255.5 159.56 255.5 157.57 cv
cp
@
267.83 157.57 mo
267.83 155.58 269.44 153.97 271.43 153.97 cv
273.42 153.97 275.03 155.58 275.03 157.57 cv
275.03 159.56 273.42 161.17 271.43 161.17 cv
269.44 161.17 267.83 159.56 267.83 157.57 cv
cp
ef
267.83 157.57 mo
267.83 155.58 269.44 153.97 271.43 153.97 cv
273.42 153.97 275.03 155.58 275.03 157.57 cv
275.03 159.56 273.42 161.17 271.43 161.17 cv
269.44 161.17 267.83 159.56 267.83 157.57 cv
cp
@
241.65 157.53 mo
241.65 155.54 243.27 153.93 245.25 153.93 cv
247.24 153.93 248.85 155.54 248.85 157.53 cv
248.85 159.51 247.24 161.13 245.25 161.13 cv
243.27 161.13 241.65 159.51 241.65 157.53 cv
cp
ef
241.65 157.53 mo
241.65 155.54 243.27 153.93 245.25 153.93 cv
247.24 153.93 248.85 155.54 248.85 157.53 cv
248.85 159.51 247.24 161.13 245.25 161.13 cv
243.27 161.13 241.65 159.51 241.65 157.53 cv
cp
@
432.97 62.48 mo
432.97 60.49 434.58 58.88 436.57 58.88 cv
438.56 58.88 440.17 60.49 440.17 62.48 cv
440.17 64.47 438.56 66.08 436.57 66.08 cv
434.58 66.08 432.97 64.47 432.97 62.48 cv
cp
ef
432.97 62.48 mo
432.97 60.49 434.58 58.88 436.57 58.88 cv
438.56 58.88 440.17 60.49 440.17 62.48 cv
440.17 64.47 438.56 66.08 436.57 66.08 cv
434.58 66.08 432.97 64.47 432.97 62.48 cv
cp
@
483.57 62.48 mo
483.57 60.49 485.18 58.88 487.17 58.88 cv
489.16 58.88 490.77 60.49 490.77 62.48 cv
490.77 64.47 489.16 66.08 487.17 66.08 cv
485.18 66.08 483.57 64.47 483.57 62.48 cv
cp
ef
483.57 62.48 mo
483.57 60.49 485.18 58.88 487.17 58.88 cv
489.16 58.88 490.77 60.49 490.77 62.48 cv
490.77 64.47 489.16 66.08 487.17 66.08 cv
485.18 66.08 483.57 64.47 483.57 62.48 cv
cp
@
537.83 62.97 mo
537.83 60.98 539.44 59.37 541.43 59.37 cv
543.42 59.37 545.03 60.98 545.03 62.97 cv
545.03 64.96 543.42 66.57 541.43 66.57 cv
539.44 66.57 537.83 64.96 537.83 62.97 cv
cp
ef
537.83 62.97 mo
537.83 60.98 539.44 59.37 541.43 59.37 cv
543.42 59.37 545.03 60.98 545.03 62.97 cv
545.03 64.96 543.42 66.57 541.43 66.57 cv
539.44 66.57 537.83 64.96 537.83 62.97 cv
cp
@
588.42 62.97 mo
588.42 60.98 590.03 59.37 592.02 59.37 cv
594.01 59.37 595.62 60.98 595.62 62.97 cv
595.62 64.96 594.01 66.57 592.02 66.57 cv
590.03 66.57 588.42 64.96 588.42 62.97 cv
cp
ef
588.42 62.97 mo
588.42 60.98 590.03 59.37 592.02 59.37 cv
594.01 59.37 595.62 60.98 595.62 62.97 cv
595.62 64.96 594.01 66.57 592.02 66.57 cv
590.03 66.57 588.42 64.96 588.42 62.97 cv
cp
@
2.25 lw
313.85 133.3 mo
335.04 95.89 364.14 68.7 384.5 67.3 cv
.861112 .641474 .193973 .0337224 cmyk
@
2 lw
313.78 132.57 mo
312.57 135.53 311.35 138.49 306 139.86 cv
300.65 141.24 285.81 140.68 281.68 140.84 cv
277.54 141 279.36 140.92 281.19 140.84 cv
.858823 .646754 .238682 .0613413 cmyk
@
281.67 140.34 mo
276.01 140.42 li
276.02 141.42 li
281.68 141.34 li
cp
281.71 136.91 mo
275.02 140.93 li
281.82 144.77 li
282.06 144.9 282.37 144.82 282.5 144.58 cv
282.64 144.34 282.55 144.03 282.31 143.9 cv
276.26 140.48 li
276.27 141.35 li
282.23 137.76 li
282.46 137.62 282.54 137.31 282.4 137.08 cv
282.25 136.84 281.95 136.76 281.71 136.91 cv
cp
.968536 .778958 .248753 .0961929 cmyk
f
47.837 298.068 mo
669.587 298.068 li
669.587 186.318 li
47.837 186.318 li
cp
gsave
/1 /CSA get_res setcolorspace
clp
[1 0 0 -1 9 342 ]ct
[621.75 0 0 111.75 38.837 43.932 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 829 
/H 149 
/M[829 0 0 -149 0 149 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 829 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Jc^N*a9(c0c2rS!n,i=aSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0G'pAh!5Jg.ZJbQ*4p
JcLB&JcLB&JcPBBJc^N*a9(c0c2rS!n,i=aSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0G'
pAh!5Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!n,i=aSH=BE^&l7RJcLB&JcLB&JcLB&q>c?r
Jg/#TmJtc]Jg0G'pAh!5Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&
JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/Ca
SH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*
a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&
JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4
Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#T
mJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&
JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE
^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0
c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJbQ*4pJcLB&JcLB&
JcPBBJc^N*a9(c0c2rS!nH/CaSH=BE^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(p&Lm4Jg.ZJ
bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/CaSH?h5qZ+J7^&l7RJcLB&JcLB&JcLB&q>c?rJg/#T
mJtc]Jg0J(p&Lm4^`rXUaWe2<bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!nH/FbS-$_4qZ+J7^&l7R
JcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg0J(pAgs4^`rXUaWe2<bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0
c2rS!Jc`soqZ+J7^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg,dj^`rXUaWe2<bQ*4pJcLB&JcLB&
JcPBBJc^N*a9(c0c2rS!Jc`soqZ+J7^&l7RJcLB&JcLB&JcLB&q>c?rJg/#TmJtc]Jg,dj^`rXUaWe2<
bQ*4pJcLB&JcLB&JcPBBJc^N*a9(c0c2rS!pAt[+$kaF",qLo96V<\=`_6HB^T,(Ca%QLs"Sr2=!.k3&
!.k3X!"&c1#n.F_*$Zjc2;1!A2ZTcWXdFi%!@e0I!/VnO,/GJk!7`9F,4Hc`-S7/74[MY5;HR4r@)$(N
XfJVF@)-.N;^V>bbQ*4pJcLB&JcLB&qZ$]?k)tW&o)O@DJca!pmJtN6M#mk`&LK_BCjcSKR\[$k[^j#^
MnakY`kMM>q?"V9JcLB&JcNai%flqQ/4!6HFb>jIUo:8nX3Ri!Xb3_UIej&$,(_#T,45H],(_!L,;MSc
ApK/rT;SipXfJJ%P,j28^T.@)qBF,`JcLB&JcN@^$NUGH/PL2V^rasUg=>>;k(;amjo@[C!.k9(!ltH2
!6tY/!XTQ'A:p#8VQ[GAqnI`tK"o=?!4M_*`;kJiJcLB&c2\.W-r"H%LQnF0XM:lhXb3_UW;6LN,(_#T
,45H],)[WN2,\IPQ_LL_X8o5PX+ICeWrT6t,0U%=!.k3&!6"pC!uj."J>g]L`o_m8K')sm!6k9>Jc^N*
a9(c0c2sC8"qNY#JXW[Nn\9[jK"o@@!P*+E!lY.k!.k3&!7_&R#:2rUK:8gJXb*[.XT>D&q>c?rJg/#T
mJtc]Os1&`:iD5`XS8cIX+ICeWrRMC,0U%=!.k3&!6bEG!?+Xrd_+^ok(;anjoNg8q>c*KJca!pmJtN6
TE5<*10]0oWO_B1!PGcRXJ;/AI<KRE@p;o+6p3CY,omg6$'tn<#65>4!5\u]#64o&!lY.k!.k3&!8IPY
"<^0GJXEG'XVRt6S</AFAR/D:9L_3)0e+Cf((gr\!nma1!s/`.!;unR!s&H'q>c?rJg/#TmJtc]R3Dee
95KHUXRN:gWtq_=XehVPLOjerEbo>q=Aqpa69@.]/=n?-.KD4#!6H_+.KCdj,0U%=!.k3&!7LoN!>\._
cKs[$fts1q8LkMc#m:>2ec::%JcPBBJc^N*a9(c0c2sgD":.8<TXOC*%D9!HTpCLZAPY6,$3C9\!m1T>
!5\fO!lY.k!.k3&!9!n\!\Ii?W:?ttX/)/CIrJdj3@,:>_Z58gJcPWIM'@Nq_'8:IeKUS/"=mK*UTO'e
#-+i.Un*U!"E\$J4Y;F5_]njUaWe2<bQ*4pJcLB&fDksb@E7p##McqPAO7[S"3(=m!.k4B!.k9(!ltH2
!6tYF!X'NJNN9_a^B_HXU5j4e,6[W?mK3+_T*!.:p&N#4^&l7RJcLB&JcOm4";"%GR]H(_#HXY\G?Qp>
!k85^!.k4I!/VnO,/GJk!7`9f+p9uDQ)q"XWs>W,Vj;a=5plIQk9BX#VBWo%p&N8[[j'#rJcLB&JcOU,
!s('@h"9_3gph2T$bQIk!.k4B!.k9(!ltH2!6tYK!X&ZdFIfl6^B_HXUQ9Ch,R!K9mK3+_T*!.:o`2r4
^&l7RJcLB&JcP'9"9KoTLSsjJ#HX\^G?R!A!jM`W!.k4I!/VnO,/GJk!7`9k+p95hJYK=@Ws>W,V3ZO:
5pl4Jk9BX#VBWo%o`32[[j'#rJcLB&JcOa0!Y&5Lp>uM5\o'82[/bdYJcPBBJc^N*a9(c0c2t9Q";b$n
W4Vf="hCFZ:F-/+!q-3a!1s>8!qcQ4!kn`T!.k3&!.k4=!!EZoE0mX"XTb\eBK6h0WW7VNJcPWIM'@Nq
_'8:IeKV%<"?'nSWiGfo"g"VY?pZ4-,3U6E!2^sX,4tr[,.Ac?!.k3&!.k45!!<6KLY;Fa!n20-XoO%R
JcPBBJc^N*a9(c0c2tBT!]Gk?p:ga9QY\2Ui<&HLp&L]db6%;9`<*aT`;kJiJcLB&nGiV9E2*'."J^KH
*!)l9JcLB&q>c?rJg/#TmJtc]Xs*pCOKS;X"Kn8?7jI4AkT]^#VBWr&oDm)Z[j'#rJcLB&JcP$8!@>2J
joVkY#-%ZT!.k4B!.k9(!ltH2!6tYV!WrNbMR3)m"MCXe;A@mfmfN1_T*!1;oDli3^&l7RJcLB&JcPHD
!s'ciV"h%pXHm]d$(q9M!.k4I!/VnO,/GJk!7`:!+p0&eP-4S\"KJG^@l<9jkT]^#VBWr&oDm)Z[j'#r
JcLB&JcP-;!@YbYjoX7f,,G9k!.k4B!.k9(!ltH2!6tYY!WrNfN4/Ps"LFV<2$DP5mfN1_T*!1;oDli3
^&l7RJcLB&JcPQG!s'loVYR=sV2&5!!h97B!.k4I!/VnO,/GJk!7`:$+p0&gPHFY]"KnDG9d\aAkT]^#
VBWr&oDm)Z[j'#rJcLB&JcP6>!A)+`joW=q$_[QP!.k4B!.k9(!ltH2!6tY\!WrQjNjef!"1t(-)UecV
!qlVd!m:Z;!6##R!lY.k!.k3&!;c`u!A/MnqQ0k#LIM`>!.k3&!;Z\P,(_#T,45H],.Jg!,?:&4qPs^u
TPQXB,3U6E!2^sY,4klZ,.Ac?!.k3&!.k4A!!+dmqW7k3;$!3fJcLB&o)O@DJca!pmJtN6_?'fB6]ebQ
^B;'9<!UbOmfN1_T*!1;oDli3^&l7RJcLB&JcPcM!s(*#W;<UuWe3J;PQ6:8JcPWIM'@Nq_'8:IeKVUL
"!^p8Xnf"!T4TS),3U6E!2^sY,4klZ,.Ac?!.k3&!.k4D!!+t!qW7h.9UPm4!.k4B!.k9(!ltH2!6tYa
!WkEG[ed`@\X64ubl[>8p&L]dbQ@A9`<*aT`;kJiJcLB&!rscsW;<UuWe*>8OT9t5JcPWIM'@Nq_'8:I
eKV[N!`GDeq5XRg@OT_MkT]^#VBWu'o)QuY[j'#rJcLB&JcPQG!BA="joNn$Q2lL:JcPBBJc^N*a9(c0
c2u#f!X<)6qS*-CQV@Y+!q-3a!1s>:!qQE2!n[RT!.k3&!/(=Q!_WN^qQ0k!JN3dl!.k3&!;Z\P,(_#T
,45H],/>B(-ZH0_Wreeu-IF%$,5)#6,/kbt!6cY7,-h3#!.k3&!;c`s!g`]F!RO5u!.k3&!:p2B!eLKp
!q$'6!m(KF)2#Bp^B;$39*E9:mfN4`Sc[1=nGqJKk5YJ`nH+jRJcLB&L&_;aC8e94XTPPN2Zem;JcLB&
q>c?rJg/#TmJtc]_BK%@MlccU!h<UEc6DHrpAh$6a!1$Ri$.OgqZ-+0R/hg=JcLB&r;Zj<bkpN'c9IBj
JcLB&o)O@DJca!pmJtN6b5q`+R_8R5"1aUc"N1B1!qu\d!mUl8!:9jD!!!)n!fd84!.k3,!!4U'X8]4)
Xf\RM1]iI5JcLB&q>c?rJg/#TmJtc]`$,7\TrS!j!h!:>b9H-opAh$6a!0pOm3:QjqZ-74PlQC9JcLB&
!rr<rh#-:8cT7$cJcLB&o)O@DJca!pmJtN6blRo2W;F=2X_7sU!q-3b!1j8;!q$'U!o3hV!eLE(!.k3.
!!+[;qlKpj;$2LPJcLB&q>c?rJg/#TmJtc]`ZbF`Wr&guYB;>9,3U6F!2Um[,45Hu,3&\#!!"4"!.k3&
!.k1NL&:!5UBHJTJcLB&o)O@DJca!pmJtN6cN4,)V#7t/]q.R)!q-3b!1j8>!pTdR!o3hV!eLE(!.k30
!!+=,r2g%%MD'P]JcLB&q>c?rJg/#TmJtc]a<CXZVu3RsWM<V8,3U6F!2Um^,3f0r,3&\#!!"4"!.k3&
!/(=QE9@,]!T..<!.k3&!:p2B!eLKp!q$'6!mq&M.A$IP!kF+.]E7O'pAgcdd/r;-p&a%M!!7`PJcLB&
NW9(uMYsRZWGiFL!.k3&!.k4I!/VnO,/GJk!7`:9+ot--ql9aZ4i8K-,52)6,0D+h!;7Vs!;c`r,)H;O
!.k3*!!$:'joac.cmFJIJcLB&o)O@DJca!pmJtN6dfKRpR(iO6!kEgi\cV=%pAgcddK82(r;t[QJcLB&
JcLl4!Y^3frN-.#BE\86JcLB&JcPWIM'@Nq_'8:IeKW3]!^<3UrMp"$M(QOfkT]a$V'=),g]79si;eH0
JcLB&L]@HIiVhm>di!f=JcLB&o)O@DJca!pmJtN6eH,dXLV3T#!ka7!\,u+#pAgcddfS8(r;t[QJcLB&
JcLr6!Wm;@rN-.%D$^"=JcLB&JcPWIM'@Nq_'8:IeKW9_!\9>3rMp""O"nBnkT]a$V'=,-gAq0ri;eH0
JcLB&M?!Z%h#6@9g*2+KJcLB&o)O@DJca!pmJtN6ecGkGZi.W?]8RN6!q-3b!1j8@!jDZV!.k3&!0[B`
2l-DS!ipGNq#H!HJcLB&q>c?rJg/#TmJtc]cQWBtXo5:%Wfo<R,3U6F!2Um`,.@Q(!.k3&!/ggW^A[0r
fdm+'JcLB&JcPBBJc^N*a9(c0c2uW"!>q@*^B2$0)RKS7!qu\d!n7:T!.k3&!.k39!!*L_rN-.%Gn'KJ
JcLB&JcPWIM'@Nq_'8:IeKWBb!B?eOWrf;f3P-L!,52)6,0_=?!.k3&!.k31!!#srjoO0or;_ELJcLB&
o)SakaT0!UJca!pmJtN6g&_<YDRo_\!N.<N!q-3b!1j8B!j2NT!.k3&!1*Ze!EZ9!XT=_)o`0RDJcLB&
q>gL=aT07'Jg/#TmJtc]dini<H`[1H!NJPu,3U6F!2Umb,..E&!.k3&!07*\$.Jk8!.t(JJcLB&JcPBB
rW:%=_#f2ia9(c0c2u`%!@"QB^B1u\"0hpr!qu\d!n@@T!.k3&!.k3<!!*b$rN-.#;$$:hJcLB&JcPWI
rZ];]a<H3[_'8:IeKWKe!C!XaWrfAG,Ier],52)6,0hC?!.k3&!.k34!!&)YjoNg3q>c*IJcLB&o)Sak
_#OKX"Q]^X!:Ku@!ltH2!6tZ$!WcB5rP&B%(9[f.!qu\d!n@@T!.k4I!!*]5MZA>/R/d7RWVrq"KaRAN
JcLB&JcPWIrZ]/Y!Bh[h,4ts0,(_#T,45H],1Rk<B<;'4!MMBZ,3U6F!2Umb,..E&!.k3&!0R<_!Rq#0
!)E:hJcLB&JcPBBrW8DdmfJ(Ba9(c0c2ui(!<nJ]^B(W4XTIqmpAgcdeH2lRJcLB&JcM8?!<RHCXT>4T
n,S%?JcLB&q>gL=QN6_'Jg/#TmJtc]f-15BQ2R`aY$JCYkT]a$V'=2/[/bdYJcLB&P5kS9rT4*lp&K[E
JcLB&o)SakNWAhUJca!pmJtN6hZ<g"X8Td6PR+>ln,i:`Sc[FDXoO%RJcLB&S,`R%RJj5gI0/j;JcLB&
JcPWIrZ[@&s!!%=_'8:IeKWWi!BmO_Wr\Y>ZQeWXp&Lp5c6BXrJcLB&JcM#8!0R6B!'TuTJcLB&JcPBB
rW7cRjoCqRa9(c0c2uo*!E$E,^B(uUWWMYkp&LZceH5%:rW:+?JcLB&JcM>A!Bd@\XT>Iqm/V_<JcLB&
q>gL=Mu_`8Ua!W!mJtc]fcgE*rMot!E3UVO,5)#5,0hCu!<+1f!.k3&!.k39!!(CFjoO0;oDjICJcLB&
o)SakK`L37ScZt7mJtN6i;s"0rP&B:.&d:;!qlVc!n@A<!;Q]?!.k3&!.k3B!!$^2XT>%4li;V;JcLB&
q>gL=Mu_]7V'<`"mJtc]g*-NRrMot%7'Im",5)#5,0hCu!;Rhf!.k3&!.k3;!!*ttroO3\nc47AJcLB&
o)SakK`L37ScZt7mJtN6irT5`O8ZfoQjK\mn,i:`Sc[FDlN$_^bQ*4pJcLB&TE"unGQ"WEJcb6<JcLB&
JcPWIrZ[:$h>jAr_'8:IeKWcm!@*p/Wr\eCY9N3Tp&Lp5c6DQSq'+8fJcLB&JcM/<!&FN8!(cV[JcLB&
JcPBB!!7cQjT(kRa9(c0c3!&.!<eeh^B(u\V?65gp&LZceH5%:mK1u?JcLB&JcMJE!<RoQXT>J"kl?;8
JcLB&q>^L>M?)K5V'<`"mJtc]h')kHT)PbkWcbEfkp#g$V'=2/lN$>sh>i--JcLB&R/d4YroO77"RlDC
!.k3&!:p0j!eUL7!1j85!q$'6!p'Ia#GM.3!P1=g!q69b!1j8B!p]jS!nRF(!.k3&!29Go"-*;^!N@O3
!.k3&!.k4I!!"4#!8[^P,/GJk!7`:M+os0hri6($;QM),,5)#5,0hCu!:D&f!.k3&!.k3>!!$U0joEcr
!.k3&!.k4B!!!(Q!9F3P!ltH2!6tZ.!W`_-rkAKB/u/R<!qlVc!n@A<!:Bp?!.k3&!.k3G!!*4griH4"
*TmES!.k3&!;ZZq,)QBW!2UmU,45H],2XRF/ZJ`M!Nenn,3^<F!2Umb,3o6s,2N<O!.k3&!1NrgJc=d3
amB([!.k3&!:p0j!eUL7!1j85!q$'6!p9Uc'!2)I!OF#G!q69b!1j8B!pTdb!lt@n!.k3&!2KSq$(V!s
!MgFl!.k3&!.k4I!!"4#!8[^P,/GJk!7`:O+osO&ri6(%6)l-n,5)#5,0hCt!<+1g!.k3&!.k3@!!&Je
joE-^!.k3&!.k4B!!!(Q!9F3P!ltH2!6tZ0!W`M)rkAK;)PR<&!qlVc!n@A:!<3,A!.k3&!.k3I!!*1h
riH3n%HRSA!.k3&!;ZZq,)QBW!2UmU,45H],2j^H.'3EK!NnG^,3^<F!2Umb,3]+-,0p7@!.k3&!1a)i
MuMi=Wp9Y:!.k3&!:p0j!eUL7!1j85!q$'6!pB[cRf:&&X:_--n,i:`Sc[FDkPtSaa8gelJcLB&V#ULJ
riH3i#iku;!.k3&!;ZZq,)QBW!2UmU,45H],2j^GTDkklX>6^ukp#g$V'=2/kPtT,cN&OsJcLB&ScAaa
roO3Fl2ZD9JcLB&o)JalK)k!5ScZt7mJtN6klLj8rkAK8$_RRj!qu\c!n7:T!.k3&!.k3J!!$^3XT=pp
irFZ2JcLB&q>^L>M?)K5V'<`"mJtc]iZ\AZri6(%/uKoX,52)5,0_=?!.k3&!.k3C!!!o9joCt:!.k3&
!.k4B!!!(Q!9F3P!lkB2!6tZ2!WZO*^B(b]T*"K`pAg`ce,lfRJcLB&JcM\K!(d*k!N-Fe!.k3&!.k4I
!!"4#!8[^P,/>Dk!7`:R+olN[Wr]@aVBY7KpAh!5bp'RrJcLB&JcMGD!!3)]!6+.%JcLB&JcPBB!!7cQ
fDqrR`rb]0c3!;5"['E3^Uu@o!q69c!1a2@!j;TU!.k3&!2ol$.''JPX<QU'JcLB&JcPWI!$[:#d/^Hr
^`r4IeKX&u"]DA$X/\ji,3^<G!2Lg`,.7K'!.k3&!2';og#hGNk5^)6JcLB&o)JalK)jO(Wrg<Cmf:W7
liI>4\%f\l<1O*[!qu\c!n7:T!.k3&!.k3M!!O"7Xf\ZhhuJ?/JcLB&q>^L>M?)$(Z6I(.mf:l^jWXjk
XK/D%B;?a9,52)5,0_=?!.k3&!.k3E!!LR/k2?@(!.k3&!.k4B!!!(Q!8%:P!lkB2!6tZ5!W`G*rkAGY
S-&0]pAg`ce,lfRJcLB&JcMeN!<SbiXT2ee!.k3&!.k4I!!"4#!7:eP,/>Dk!7`:U+os$mri6$PUE\qH
pAh!5bp'RrJcLB&JcMMF!1<cJ!"n>nJcLB&JcPBBo`C-RfDqrR`rb]0c3!A7!.k-a!1')Un,i=aSH@7A
YQ07TJcLB&WW3$5riH0Mh>i--JcLB&q>g14PlT23Z6I(.mf:l^jrse_ri6$iU*AhGpAh!5bTaLrJcLB&
JcMPG!#kk!!(,cIJcLB&JcPBBiW>eRfDqrR`rb]0c3!D8"ZF'/^T@^0!q69c!1a2?!jDZV!.k3&!36)'
,cn,MSH@XJJcLB&JcPWIiZb<$d/^Hr^`r4IeKX0#"])+uX0*hE,3^<G!2Lg_,.@Q(!.k3&!2BMrgudal
j8ac3JcLB&o)RbOT`E^FWrg<Cmf:W7mfEXuZ+n&c/=HY0!qu\c!n.58!;uuC!.k3&!.k3P!!NFsXf\WD
h#N$,JcLB&q>fM!VuY3FZ6I(.mf:l^kTU0\YH+_(8"h-k,52)5,0V7q!<"+j!.k3&!.k3H!!BIfk1\hq
JcLB&JcPBBaTB$RfDqrR`rb]0c3!G9!07&n!-jn5n,i=aSH@4@l2^Y^cN&OsJcLB&X8i6EriH0.g]2p+
JcLB&q>eV]_#Vj_Z6I(.mf:l^kTU"mri6$OTH`VEpAh!5b9H3OqBFJjJcLB&JcMVI!&4E7!"n5kJcLB&
JcPBBaTB$RfDqrR`rb]0c3!J:!(Hn%!N6-h!q69c!1a2=!p]jE!pK]:!.k3&!3H5$1B+BVQ3#b@JcLB&
JcPWIaWeP$d/^Hr^`r4IeKX6%!*T<%!NIB;,3^<G!2Lg],3o6e,4GSa!.k3&!2TYtj6#KXiW+Q1JcLB&
o)Qi5])^I`Wrg<Cmf:W7nH&k)[_KSh+d`?#!qu\c!mq)8!8@SC!.k3&!.k3R!!NS(Xf\W:gAlg*JcLB&
q>eS\_>qs`Z6I(.mf:l^l66BcXfJM&5+a%`,52)5,0D+q!8A^j!.k3&!.k3J!!C+#k1JVmJcLB&JcPBB
ao]*RfDqrR`rb]0c3!M;!1<c#!,@i%n,i=aSH@.>li>W=nc47AJcLB&XoJHSriH0!g&Q^)JcLB&q>eY^
^];a^Z6I(.mf:l^l665"ri6$CSg*DCpAh!5aWg'Of-:"jJcLB&JcM\K!(m1P!!M6\JcLB&JcPBBbQ>6R
li<@R`rb]0c3!P<!*B07!25\[n,i=aSH@.>li>K9p&K[EJcLB&Y5ePgriH0\f`6U(JcLB&q>e_`^&[6p
Sg(romf:l^lQQ=Ari6$rSKd;BpAh!5aWg'Odj"_jJcLB&JcM_L!!3)]!,:?kJcLB&JcPBBc2tBRkQ%(R
`rb]0c3!S="W+_a^UY2I!q69c!1a2;!pp!6!r;nK!.k3&!3cG,$`U81W=7G[JcLB&JcPWIc6Bn$i;fSr
^`r4IeKX?(!&jeV!'$Mnkp#j%Ua!l(m/YHVJcLB&JcM_L"4$&kcee_S!.k3&!:p3;!j_mi!1X,2!q--7
!qQHnU&Me,=d9'X!qu\c!m^r8!6PBC!.k3&!.k3T!!&#XXT1]?!.k3&!.k4I!72q$!8mjP,/>Dk!7`:[
+onG<WrQn),3^<G!2Lg[,4,BV,5`X?!.k3&!3#quAcCfl!T*m/!.k3&!:p3=!jMaf!1a23!q--7!qZNo
C&YjIRZmmC!qu\c!mUl8!6G9B!.k3&!.k3U!!#mqXT4"*!.k3&!.k4I!7E($!8ddP,/>Dk!7`:\+olfc
WrSc],3^<G!2LgZ,45HW,5WR?!.k3&!3-#!"TIN`9ATZ#!.k3&!:p3?!j;UY!2ot>!q--7!qcTu+hGG'
[L\T(n,i=aSH@%;mf:H2!!%TNJcLB&Z2b%@WNE;##M/s-!.k3&!;Z]F,.7L$!3[T^,4>N^,46WT55qS`
XtZ=hkp#j%Ua!f&mf:ZXq]^grJcLB&WW3.Qk2sV<!.k3&!.k4B!7h4R!8@LP!lkB2!6tZ=!W]+s^Apcf
!q??c!1a28!q633!WW4P!.k3&!3uS)PQ%Za1tDYY!.k3&!;Z]H,.%@"!3[T^,4>N^,46WTWrB%!>acl%
,5)#4,/kbq!7)kd,)?5N!.k3O!!@Q0k2Y4sJcLB&JcPBBf`J/RgAn/R`rb]0c3!\@!+Z#C!0E?FnH/Ca
SH@":n,UQ3!!%TNJcLB&ZN'u!riH0FeGt1$JcLB&q>f1mYlN8RY9Lb+mf:l^mihaPri6$cR3Lo?p&Lm4
`?OdOcQ`61L]E#,JcMkP!!E5_!&WI2JcLB&JcPBBg]FARgAn/R`rb]0c3!_A"VJ8Z^U+?2!q??c!1a28
!q632!eLE(!.k3X!!NY-Xf\E$eGt1$JcLB&q>f:pXoQrOY9Lb+mf:l^n0.ifri6('/X[gJ,5)#4,/kbq
!7)kc,)H;O!.k3P!!CO/k/,jQJcLB&JcPBBi<#_RgAn/R`rb]0c3!_A!1!Pu!)ep\nH/CaSH@":n,UN2
rrRiRJcLB&ZiC)SriH/`e,Y(#JcLB&q>fIuW;tEJY9Lb+mf:l^n0.k&ri6$/Qm1f>p&Lm4`?OdOcQ`-.
MZA>/JcMnQ!'gJFg&Q^)JcLB&o)RnSSH.CEVuk!@mf:W7p]:F[rkAH*O94tSo`1Nab6%26a9);AL&cf*
JcN1Y!%e,O!/o;+JcLB&JcPWIjs$T$e,ZZr^`r4IeKXN-!*0$!!2Pr*lQZ!%Ua!`$nGplZp*,IrJcLB&
XT/I`k2p"(!.k3&!.k4B!9sWR!8@LP!lkB2!6tZA!X/b3^V@?!O94tSo`1Nab6%26a9)5?L]E#,JcN4Z
"Tk@!Xf2i[!.k3&!.k4I!9tc$!7V"P,/>Dk!7`:a+os$nri6#\QQk`>o`1d3`$4^OcQ`!*NrXb3JcMqR
"0CYIf@^.U!.k3&!:p3Z!gE].!4W*N!q--7!r2ltI/^k\F,pCn!qcPa!m:Z8!6>6<!f6o/!.k3Z!!$R/
XT2VS!.k3&!.k4I!:M,$!5nlP,/>Dk!7`:a+omAsWrRX8,3pHG!2LgW,4PZZ,4d"?!.k3&!3ZA&(&m=q
%+tW4!.k3&!:p3]!g*K+!4W*N!q--7!r;s%,.t\*X9=RcncJIaSH?t9nGpW3pB$9RJcLB&[f?RFX0&Lo
!n%(#!.k3&!;Z]d,+&AK!5B_n,4>N^,4cu^5,tZaXX08WlQZ!%Ua!`$nGplZn04%rJcLB&Y5e[Xk2r5e
!.k3&!.k4B!;6JR!6YAP!lkB2!6tZB!X,=6^V2Ud!qQKc!1a27!q?93!qHDT!.k3&!4Mq2Ofbae,gcUD
!.k3&!;Z]h,*W)G!5B_n,4>N^,4cu]VlQku:R*-j,4kl2,/b\q!7)kT,+&@^!.k3T!!@3&k2FnlJcLB&
JcPBBq#ZERb5f$R`rb]0c3!kE!+#T=!0<*@o)eOaSH?t9nGpW3mfJ^RJcLB&\,ZM"riH0EciAXtJcLB&
q>g=8OT<<"^EUH;mf:l^oHF9Qri6$bPToH<oDk[2`$4^OcQ_QsRfJ$?JcN%U!!3)]!&E.+JcLB&JcPBB
q#ZERb5f$R`rb]0c3!nF"V8&V^U=T2!qQKd!1X,6!q?93!pp&T!.k3&!4`(5#,nZ+W!1NJJcLB&JcPWI
q'(q$_uROr^`r4IeKXZ1"Yd'ZX0""=,4$NH!2CaV,4PZZ,3C)?!.k3&!3lM+b3%j,ec::%JcLB&o)SXh
eGoRN[/eAM\,s\Pmf:W7quQk]rkAG9MurSPo`1K`b6%26a9(N+S,e-@JcN=]!.+XH!(,!3JcLB&JcPWI
q]aPj!$]&U_uROr^`r4IeKXZ1!13\c!,@]Allu*&UE[W#nGplZi$+orJcLB&Z2ak`roO1]ec::%JcLB&
o)SakeH#OL[/eAM\,s\Pmf:W7r;m*_^;%FVMZWJOo`1K`b6%26a9'Qe[fD![JcN@^"=^FSXcC[,JcLB&
JcPWIrZ]kmr?AlS_uROr^`r4IeKX]2"B)8#X/;%(llu*&UE[W#nGplZ`?N"rJcLB&Z2b!ck2pC.!.k3&
!.k4B!!!)Q!;HW'!6YAP!lkB2!6tZF!X/_1^V@E'MZWJOo`1K`b6%26a9'Nd\,_*\JcNC_"Tk9tXfN/\
!.k3&!.k4I!!"4q!;IbN!5nlP,/>Dk!7`:f+pB<qX/i6`Os96:o`1a2`$4^OcQ^:O^AricJcN+W"/P)A
g=-+S!.k3&!:p3G!:p9"!6YAP!lkB2!6tZF!W[KE^ArP:!qQKe!1O&5!q?93!m(MT!.k3&!4r42@/d8.
@Eee(!.k3&!7_)@,.moo!5B_n,4>N^,538]K)VeNKTRJF,5)#2,/b\q!7)k+,/F82!.k3X!!!T0jo?"C
!.k3&!.k4B!8mkG!jr$O!4W*N!q--7!XAc.*k]8&Y69^ao)eUcRf^b7nGpW3`WEgRJcLB&]Dr*IX0&Lr
!mL^s!.k3&!8.A@,.moo!5B_n,4>N^,5<>c4fYQ`XX9/Sllu-'U*@N"nGplZ^EUSrJcLB&ZiC3^k2rPi
!.k3&!.k4B!9F4L!kn[+!eLKo!q--7!WiE)UAhn-4c'73!qlV`!m:Z8!6>5X!l=qh!.k3`!!&&YXT0ip
!.k3&!.k4-!:M,G!;[mk,/>Dk!7`:g+onM>WrQ([,4$NI!2:[U,4PZZ,.\u?!.k3&!4;e/BBJ@:dK"k!
JcLB&o)RtSrW:IIc2rS!`rb]0c2n"J=8or7PDB;3!qlV`!m:Z8!6>5V!lP(j!.k3a!!#=aXT3al!.k3&
!.k40!<+1i!7`9F,/>Dk!7`:h+ol9TWrSQK,4$NI!2:[U,4PZZ,.Ji?!.k3&!4Dk-!WM3]3mn"[!.k3&
!:p2B!8%:P!lkB2!6tWL%(<pc[L\/qo)eXdRKCY6nGpW3^&l7RJcLB&^&S<>Vld)"#Km+!!.k3&!.k3u
!4!fa,4>N^,5NJe/Zu.TX>#\Zllu0(Td%E!nGplZ[j'#rJcLB&[K$EKk2sn8!.k3&!.k4B!.k3]!6PA`
!q--7!W\5Z^AqYs!qQKe!1O&5!q?93!kn`T!.k3&!58F5G5eTD8]h$b!.k3&!.k3V!7<"+,4>N^,5NJ`
Q2[faDiQ%.,5)#2,/b\q!7)ju,0U%=!.k3[!!"\Ojo>G0!.k3&!.k4B!.k3N!8.Fo!q--`!oO(T!WY"Y
]t_=YL'$rJp&LQ`b6%26a9''W`;kJiJcNOc"<sqLXcgd+JcLB&JcLB&UB'3r^`r4IpEJMq!$_:a"AGeq
X/M"%llu-'U*@N"nGplZ[j'#rJcLB&[f?Nfk2pg5!.k3&!.k4B!.k35!:g33!q--c!o3kR!W`G*"2DU_
,_cBl!qlV`!m:Z8!6>5U!lY.k!.k3d!!NCmXf\W=aT-nmJcLB&JcLZ.q'*Tumf<2.h#IF!r#u:hXfJM&
6&d)T,5)#2,/b\q!7)ju,0U%=!.k3\!!AVNk1S&\JcLB&JcPBBJcLB&M?*MT!HGjU^V>8P!qQKd!1X,6
!q?93!kn`T!.k3&!5JR7>5kW(B?1()!.k3&!.k3&!.t7O,5`VbIK$8ILl<PE,4tr2,/b\q!7)ju,0U%=
!.k3]!!!E+jo?1C!.k3&!.k4B!.k3&!/^dS!Wj:O^B20S#2oW[!<)ul!qcP`!m:Z8!6>5U!lY.k!.k3e
!!Nh2Xf\5ta8gelJcLB&JcLB&K)blqr?;5%ri6('-fH8N!;?Ke,4tr2,/b\q!7)ju,0U%=!.k3]!!Cj8
k,uu0JcLB&JcPBBJcLB&M?*PU!hR0A!P^qs!fI&V!8IY!!q?93!kn`T!.k3&!5SX8M>jUW0#msD!.k3&
!.k3&!.t7O,5i\cU].:o=8F,(!2'>P,/b\q!7)ju,0U%=!.k3^!!?Hfk2X\dJcLB&JcPBBJcLB&M?*SV
!)W[0!13K_MZA>/JcLB&JcLB&_>jQtriH0O`W1SjJcLB&JcLB&K)blqrZV>Ori6$hq'(t%JcLB&JcLB&
JcN@^roO2KblE=qJcLB&o)O@BJcLT,"Tf":^V@;Z');Te!.k3&!.k3&!.k3g!!NG"Xf\Q/`W1SjJcLB&
JcLB&JcGlQ+tTnrWrP!P,*DqX!.k3&!.k3&!4r45^uje)bQ*4pJcLB&o)O@BJcLT,!<S)V^Aqj?!fI&1
!.k3&!.k3&!5ed:E;ls>:;m3b!.k3&!.k3&!.k1P!$[O(WrR8:,*DqX!.k3&!.k3&!5&:3-N<--"3^as
!.k3&!:p2B!.k3,!!'Y1^B)%KJcLB&JcLB&JcLB&_uKe<riH1%_uPAhJcLB&JcLB&JcGfOWrB%!We^Y,
!.k3&!.k3&!5/@4gA^47iQD4Q!.k3&!:p2B!.k3,!;sS3!.k3&!.k3&!.k3&!5nm8Xi(3k!.k3&!.k3&
!.k1N!;rmR!.k3&!.k3&!.k3a!;u!&!.k3&!.k4B!.k3&!/U^R^]+:c!.k3&!.k3&!.k3i!;rt:!.k3&
!.k3&!.k3&!;rmQ!.k3&!.k3&!.k3b!;u!%!.k3&!.k4B!.k3&!/U^T^B:cL!!%TNJcLB&JcLB&JcNai
riH3q8](O[!.k3&!.k3&!.k4MWr]ABLB)o+JcLB&JcLB&^&S;rk2s)QaoI"nJcLB&o)O@BR/lLR`rbH)
rW;-\rW3?6ZbO8f,Q[rGr;c`sMZA>/JcLB&JcLB&`rH8GUogc"'uBs&!.k3&!.k36!:_8K,3T%+,3/b'
+os9u"KST'5pH1+r$%:(JcLB&JcLB&JcNOc"2O']g;j8G!.k3&!:p2b!;-E\!;?K?!n758!lkB,!;uu\
!;us!QN"W%D?9k>!<)uq!o3jb!r;nK!.k3&!.k3&!65'>If?GL=2=lg!.k3&!1Nu],4km)!72q>!:_8K
,3]++,38h'+p"47"KSSM+sQpbq]ahr[N^;'JcLB&JcLB&^]4@"roO1ea8gelJcLB&o)PKbi<$CgjT+QI
`rbQ,g]@IQrkAH/rW<*"rW%WRn,i:`blZ;nJcLB&JcLB&a8c3&riH0_^]8rdJcLB&RfMXrXs2s-nKPam
lN#]a!b/42!NW-t,5_G",3^<F!6l_@!.k3&!.k3&!5JU6joBA@!.k3&!.k4B!29JP!jDak!9sX+!pfpB
!X0:H^V@>urW<*"rW%WRmfN4`Sc[(:nGpW3^&l7RJcLB&aT)JNW3*2$%DVsq!.k3&!1NuP,,ldO!:_8K
,4#<b+p0^(X/c9&3W:6#!/r,c,52)6,/b\q!7)ju,0U%=!.k3e!!CI-k0V*JJcLB&JcPBBU&a-RJc`so
li>fB!1s2)!+#I'JcbBBpAgcdb6%26a9''W`;kJiJcNmm!/^]W!(aj)JcLB&JcM8?kTYU&^`r+Fg`c`n
ri6$:K-KM'pAh$6`$4^OcQ]hBbQ*4pJcNXf!*fHb!!1(>JcLB&JcPBBiW@7&fE-X+`rbT-h#[RbrkAH'
q>u6MmfN4`Sc[(:nGpW3^&l7RJcLB&aoDE7riH0U^&W`bJcLB&q>fM!aoL<CJg.uSli>ic!-%q<!2+of
kT]a$V'<i%nGplZ[j'#rJcLB&_Z0Z<roO2X`;kJiJcLB&o)O@DJc`soli>lD"WP"e^U=aN!eLLB!qu\d
!mC`8!6>5U!lY.k!.k3o!!Nn5Xf\N-^&W`bJcLB&q>c?rJg.uSli>ld!'C1\!Ne,/,3U6F!2UmY,4GTY
,.Ac?!.k3&!5ed=dcT]4_uPAhJcLB&o)O@DJc`pnm/Z#F!<]1t^Apt'!eLLB!qu\d!mC`8!6>5U!lY.k
!.k3p!!*+`riH/Z]`<WaJcLB&q>c?rJg.rRm/Z#f!@+QBWrZTPJg0D&pAh$6`?OdOcQ]hBbQ*4pJcN^h
!-\A(_Z58gJcLB&o)O@DJc`pnm/Z#F!-/"Q!0[*YJcbBBpAgcdbQ@86a9''W`;kJiJcO!p!*T<'!.)9X
JcLB&JcPWIM'@Nq^EW%Fh]`&Jri6*e+sMU_kT]a$V'<l&n,UcY[j'#rJcLB&`;flEroO2>_Z58gJcLB&
o)O@DJc`mmmJu/H"YRI&^Tn4A!eLLB!qu\d!mC`8!6>5U!lY.k!.k3q!!OCEXf\<!]E!N`JcLB&q>c?r
Jg.oQmJu/h#=tkqX0+#u,(_$&,52)6,/kbq!7)ju,0U%=!.k3i!!Cs;k.&8.JcLB&JcPBBJc^N*`<,E,
iW98pZG4/f4SJo/!q-3b!1j89!q632!kn`T!.k3&!6tQJ#c+T)X=1[\JcLB&JcPWIM'@Nq^*;qEiZ\O\
Y,eV&;Z7kl,3U6F!2UmY,4GTY,.Ac?!.k3&!6,!@]B885_#T&eJcLB&o)O@DJc`mmm/Z/J!<f4t^ArfX
!eLLB!qu\d!mC`8!6>5U!lY.k!.k3s!!*+_riH06\c@<^JcLB&q>c?rJg.oQm/Z/j!@+NAWrS"T,(_$&
,52)6,/kbq!7)ju,0U%=!.k3k!!%!;jo?:8!.k3&!.k4B!.k9(!lY6.!94+\LAnpgT`auiJcbBBpAgcd
bQ@86a9''W`;kJiJcO*s!,__;!K@,k!.k3&!.k4I!/VnO,/,8g!957'O8c0\Ua,g^Jg0D&pAh$6`?OdO
cQ]hBbQ*4pJcNjl!$_F)!+iqGJcLB&JcPBBJc^N*_uf<+jT5EarkAK>&+p!U!q-3b!1j89!q632!kn`T
!.k3&!71]G6iO1gUB\7/JcLB&JcPWIM'@Nq]cuhDjWX\=ri6(&0`3,H,3U6F!2UmY,4GTY,.Ac?!.k3&
!6G3@!WM3]ZbHKl!.k3&!:p2B!eLKl!pp!M!X1*d^V@B0oE'UGmfN4`Sc[+;n,UN2^&l7RJcLB&d/X=i
X0&M))Rod!!.k3&!;Z\P,(_#P,4,Bm+pCH9X/i6hq]^V9kT]a$V'<l&n,UcY[j'#rJcLB&aT)Fqk2t=1
!.k3&!.k4B!.k9(!lP0-!9XCa)70=W!*JgoJcbBBpAieHa8kc2gB-jEa9''W`;kJiJcO4!!=Ye'XT1_t
!.k3&!.k4I!/VnO,/#2f!9YO,33E1\!,;9RJg0D&pAiehcN*82gEQ+ecQ]hBbQ*4pJcNpn!5AHp!!0e6
JcLB&JcPBBJc^N*_ZK6+kQ1boXo?'8M"1V!!q-3b!8%@n!9X@F!WX&+!6>5U!lY.k!.k4"!!*7oriH0>
[K(mZM?!Vaq>c*Iq>c?rJg.iOmJuGp!A:STWrS7W,(_$&,52)i,0g2H!9YO+2Xg^m,.Ac?!.k3&!6Y?B
U]0BU-+s;1!.k3&!:p2B!eLKl!pp!P!W`M&rkAK/"S)VG!q-3b!8IXn!9!qF!q--1!kn`T!.k3&!7UuL
"-iee!KR8i!.k3&!.k4I!/VnO,/#2f!9k[..'!9I!N%+;,(_$&,52)m,0Bo>!:;!!!7)ju,0U%=!.k3p
!!%HHjoB20!.k3&!.k4B!.k9(!lY6-!9sUd"J,P,!NHIr!eLLB!qu]M!lG#n!:p9[!6>5U!lY.k!.k4$
!!*+UriH3h!jr#[!.k3&!;Z\P,(_#Q,4#<p+orp_ri6(%/GLE@,3U6F!8Jd@!7_)@,45HW,.Ac?!.k3&
!6kKD=8q=^O1PCD!.k3&!:p2B!eLKm!pfpP!W\;\^B(POn,e1CmfN4`hZCRnfDtXImJt<0^&l7RJcLB&
eGoSnriH3o$+'\a!.k3&!;Z\P,(_#Q,4#<p+omr.Wr]C\pEG25kT]a$h]g)@d/`nbmJtQW[j'#rJcLB&
c2[i"roO3`\c@<^JcLB&o)O@DJc`pnlN$5P!.Y!_!Oa$;!eLLB!qu]Q!l"`b!;cid!65/T!lY.k!.k4%
!!$[2XT>=2ZN,RWJcLB&q>c?rJg.rRlN$5p!/^]U!NnNX,(_$&,52)q,/sW-!;du/!6udt,0U%=!.k3s
!!!o9joE?1!.k3&!.k4B!.k9(!lb<-!:0aeM#P-i\LHqJJcbBBpAj4T]E$:YrrVWh`r`sV`;kJiJcOC&
!-%q>!N@!C!.k3&!.k4I!/VnO,/5>f!:1m0OSu3[7J.jV,3U6F!959@!6G6@,4>NW,.Ac?!.k3&!71]G
-3!$,d's(-!.k3&!:p2B!eLKn!p]jS!W`FgrkAKH4RE3%!q-3b!9O?n!5&<P!kn`T!.k3&!8.>Q!IasL
!N[]S!.k3&!.k4I!/VnO,/5>f!:D$3,F\V4!NK&i,(_$&,52*",/=2d!6udt,0U%=!.k3u!!#1]joF,E
!.k3&!.k4B!.k9(!lb<-!:Ksi#+kh/!P(J^!eLLB!qlW\!jhs@!6,)S!lY.k!.k4)!!*.WriH4#/[,5,
!.k3&!;Z\P,(_#R,3o6t+os'cri6($<V%Dd,3U6E!:1oA!4DmP,.Ac?!.k3&!7CiI=oRO`e$]7.!.k3&
!:p2B!eLKn!p]jU!W`Y)rkAKC1@#!n!q-3a!;lno!5/BP!kn`T!.k3&!8@JS!g<Pb!N@3F!.k3&!.k4I
!/VnO,/5>f!:V05/ZAZL!N\rb,(_$&,5)$7,-(^P!6l^s,0U%=!.k4"!!%0@joEZ6!.k3&!.k4B!.k9(
!lb<-!:^*k)Q`qQ!OO0<!eLLB!lG#d!rN,:!6,)S!lY.k!.k4+!!*RuriH3t(Tmai!.k3&!;Z\P,(_#R
,3o7!+osa+ri6('6Lc7O,3U5g!8/Rh,/O?),.Ac?!.k3&!7UuKPlBeF_R';p!.k3&!:p2B!eLKn!p]jW
!Wbs)rkAK=)sIEU!q-3/!7:l<!mL_b!kn`T!.k3&!8RVU2lZeY!MBt*!.k3&!.k4I!/VnO,/5>f!:h<6
?i@#+Y<24tJg0D&_uSF6l6=IQbp'V@bQ*4pJcO=$!7(T+!3id0JcLB&JcPBBJc^N*`WGH+oE#$rL&Jae
X;'k"JcbBBa8jHdlN5N8`WEjU`;kJiJcO[.!<R-:XT=puX8mhPJcLB&q>c?rJg.rRlN$Q$!@<^'Wr]=[
mim?-kT\(Je0<rtdf@W:[j'#rJcLB&f)Pgoj8S0@R^)pF!.k3&!:p2B!eLKn!p]jZ!Wa.8rP&B'$g.SC
!q-33!6kT-!n[Lm!kn`T!.k3&!8mhX%$^^m!JLZW!.k3&!.k4I!/VnO,/5>f!;.N:33)qX!M;"4,(_$&
,00c6,2XTs!6l^s,0U%=!.k4'!!%QJjoA2^!.k3&!.k4B!.k9(!lb<-!;6Hp;7?J=!P<41!eLLB!m:Sd
!oa::!6,)S!lY.k!.k40!!,3\riH4%<N,tM!.k3&!;Z\P,(_#R,3o7&+ou/Sri6("H0c`,,3U5o!7<"F
,2<1C,.Ac?!.k3&!8.>Pbl6`*f`nY\JcLB&JcPBBJc^N*`WGH+p]:IEU]%q.Z8(DAJcbBBbQ,`dh?)U8
`WEjU`;kJiJcOg2!?.'uXT>.=VuVDLJcLB&q>c?rJg.rRlN$](!CWd_Wr]@qlQUp)kT\4Ncm%'chuM"G
[j'#rJcLB&gAh4krT4*gXoO%RJcLB&o)O@DJc_nQ!YCC*rP&B(%-%D@!q-3:!6,)o!os@$!kn`T!.k3&
!9F1^#^<BKXT=1[VZ;;KJcLB&q>c?rJg-p5!\p"?rMosn/a=O3,3U5s!6l_:,3/aK,.Ac?!.k3&!8RVU
0\lWh!*63%JcLB&JcPBBJc^N*Wr`>*E4Pq^!P3++!eLLB!n%(d!nRM:!6,)S!lY.k!.k46!!34(WVrq"
WDo\oJcLB&JcPWIM'@NqU`ogcHi0oFXEj"RJg0D&dK%E6cm%WQbp'V@bQ*4pJcO[.!=@*NjoNg5X8mhP
JcLB&o)O@DJc`%U!YfmbrP&EIOqQ[S_ZIURJcN"TdfR5b`;kJiJcP$8!XW8/rN-.&H3pAIJcLB&JcPWI
M'@NqVBQ(!K<G0R!i_MCk9@P_`rL\kW;tWr[j'#rJcLB&i;`lj\GbOjh`%P8JcLB&JcPBBJc^N*Y6"bk
S@e^6!N%L+!o=!T!.k3=!9sX"!lY.k!.k4:!!4d,X8K(#P9$@tJcLB&JcPWIM'@NqW$2:ET;qgi!NJ]P
,1e$?!.k36!:_8B,0U%=!.k42!!,mLr8n!*VuVDLJcLB&o)O@DJc`7[!sUu<Yku09Z;oZ]JcLB&R/lLR
^&l7RJcLB&mf3Fl/7kLOXT>4`TE'QDJcLB&q>c?rJg.9?""70)YPY@$Y%H]<qBCarJcLr6nKPFdbQ*4p
JcOp5!>Vd7joN'pVZ;;KJcLB&o)O@DJc`C_":n=aW4Vo@!2]8emK34bJcLB&R/lLR^&l7RJcLB&o)Jmu
4)^IdqQ0a\SH+6AJcLB&q>c?rJg.EC">F;GWiGor!3#JhmNR5_JcLr6nKPFdbQ*4pJcP'9![EKSqrRq>
G,,+i!.k3&!:p3P!WX:6<.\)a<!RB(R%C+RYI4/?"1X15!ndR*!.k3=!9sX"!p'C^&`Q$,5Cu,s56k;8
JVoSXT;MCc!i^/SS,e-@JcLB&q>fV$!'R2lJnMT+#CDf.UT1H!YkP1"O[12L!.k3&!0R?P,.AcW!9jN9
!J1@E!=/ug7U1(sWlF)pjoNaUU&]cFJcLB&o)RnS!F<C2^Oj5*^B;*C>mC90f`6U(JcM2=l2n[$jo>EQ
XQ$@6Xb*\BXTPVc8-54[JcLB&JcPWIjrshDWMZ_JX/`3&WhjS\rZ^8#JcLB&OoY"r[j'r7!<M!?k(;`I
k2te-fPU__!.k3&!.k4B!9O=_QCbjC^TtTTZip7-f`6U(JcM2=l2n[$jo>C2iN7^6K!"IC!N#pb!.k3&
!.k4I!9PI*SY`B=X/i9%X<m`fhuJ?/JcLr6nKPFdjo>BJkiRKZK')7Y!5P-*JcLB&JcPBBjoPQ0[\(<d
^U1cQ!;uuP!.k3&!1<iP!kn`u!!*n6iiRg7K!"OEP5p17JcLB&q>fY%!CErdX+ICSX8;nq,2`HQ!.k36
!:_8B,38e)`9HE9k(;afjoFH9k*c:%!.k3&!:p2B!eLK]!r;oq!ndR*!.k3=!9sX"!lY.k!.k3&!.k3&
!.k4I!/VnO,-E-d!<","!.k3&!0R?P,.Ac?!.k3&!.k3&!.k3&!:p2B!eLK]!r;oq!ndR*!.k3=!9sX"
!lY.k!.k3&!.k3&!.k4I!/VnO,-E-d!<","!.k3&!0R?P,.Ac?!.k3&!.k3&!.k3&!:p2B!eLK]!r;oq
!ndRa!6P@p!lkB:!<*&X!9sX"!lY.k!.k3&!.k3&!.k4I!/VnO,-E-d!<","!3uUP,(_#S,52*:,2`Ik
,.Ac?!.k3&!.k3&!.k3&!:p2B!eLK]!rN&q!ndS'!3ZHU!lkB:!6,)S!lY.k!.k3&!.k3&!.k4I!/VnO
,-E-f!;dtu!6kMP,(_#S,52)^,.Ac?!.k3&!.k3&!.k3&!:p2@~>

%%EndBinary
grestore
np
107.98 285.99 mo
107.98 284.01 109.59 282.39 111.58 282.39 cv
113.57 282.39 115.18 284.01 115.18 285.99 cv
115.18 287.982 113.57 289.594 111.58 289.594 cv
109.59 289.594 107.98 287.982 107.98 285.99 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
.75 lw
107.98 285.99 mo
107.98 284.01 109.59 282.39 111.58 282.39 cv
113.57 282.39 115.18 284.01 115.18 285.99 cv
115.18 287.982 113.57 289.594 111.58 289.594 cv
109.59 289.594 107.98 287.982 107.98 285.99 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
161.69 286.48 mo
161.69 284.49 163.3 282.88 165.29 282.88 cv
167.27 282.88 168.89 284.49 168.89 286.48 cv
168.89 288.469 167.27 290.08 165.29 290.08 cv
163.3 290.08 161.69 288.469 161.69 286.48 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
161.69 286.48 mo
161.69 284.49 163.3 282.88 165.29 282.88 cv
167.27 282.88 168.89 284.49 168.89 286.48 cv
168.89 288.469 167.27 290.08 165.29 290.08 cv
163.3 290.08 161.69 288.469 161.69 286.48 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
212.84 286.48 mo
212.84 284.49 214.45 282.88 216.44 282.88 cv
218.43 282.88 220.04 284.49 220.04 286.48 cv
220.04 288.469 218.43 290.08 216.44 290.08 cv
214.45 290.08 212.84 288.469 212.84 286.48 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
212.84 286.48 mo
212.84 284.49 214.45 282.88 216.44 282.88 cv
218.43 282.88 220.04 284.49 220.04 286.48 cv
220.04 288.469 218.43 290.08 216.44 290.08 cv
214.45 290.08 212.84 288.469 212.84 286.48 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
266.54 286.97 mo
266.54 284.98 268.15 283.37 270.14 283.37 cv
272.13 283.37 273.74 284.98 273.74 286.97 cv
273.74 288.955 272.13 290.567 270.14 290.567 cv
268.15 290.567 266.54 288.955 266.54 286.97 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
266.54 286.97 mo
266.54 284.98 268.15 283.37 270.14 283.37 cv
272.13 283.37 273.74 284.98 273.74 286.97 cv
273.74 288.955 272.13 290.567 270.14 290.567 cv
268.15 290.567 266.54 288.955 266.54 286.97 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
431.69 191.88 mo
431.69 189.89 433.3 188.28 435.29 188.28 cv
437.27 188.28 438.89 189.89 438.89 191.88 cv
438.89 193.86 437.27 195.48 435.29 195.48 cv
433.3 195.48 431.69 193.86 431.69 191.88 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
431.69 191.88 mo
431.69 189.89 433.3 188.28 435.29 188.28 cv
437.27 188.28 438.89 189.89 438.89 191.88 cv
438.89 193.86 437.27 195.48 435.29 195.48 cv
433.3 195.48 431.69 193.86 431.69 191.88 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
443.69 191.88 mo
443.69 189.89 445.3 188.28 447.29 188.28 cv
449.27 188.28 450.89 189.89 450.89 191.88 cv
450.89 193.86 449.27 195.48 447.29 195.48 cv
445.3 195.48 443.69 193.86 443.69 191.88 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
443.69 191.88 mo
443.69 189.89 445.3 188.28 447.29 188.28 cv
449.27 188.28 450.89 189.89 450.89 191.88 cv
450.89 193.86 449.27 195.48 447.29 195.48 cv
445.3 195.48 443.69 193.86 443.69 191.88 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
456.25 191.88 mo
456.25 189.89 457.86 188.28 459.85 188.28 cv
461.84 188.28 463.45 189.89 463.45 191.88 cv
463.45 193.86 461.84 195.48 459.85 195.48 cv
457.86 195.48 456.25 193.86 456.25 191.88 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
456.25 191.88 mo
456.25 189.89 457.86 188.28 459.85 188.28 cv
461.84 188.28 463.45 189.89 463.45 191.88 cv
463.45 193.86 461.84 195.48 459.85 195.48 cv
457.86 195.48 456.25 193.86 456.25 191.88 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
468.96 191.88 mo
468.96 189.89 470.57 188.28 472.56 188.28 cv
474.54 188.28 476.16 189.89 476.16 191.88 cv
476.16 193.86 474.54 195.48 472.56 195.48 cv
470.57 195.48 468.96 193.86 468.96 191.88 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
468.96 191.88 mo
468.96 189.89 470.57 188.28 472.56 188.28 cv
474.54 188.28 476.16 189.89 476.16 191.88 cv
476.16 193.86 474.54 195.48 472.56 195.48 cv
470.57 195.48 468.96 193.86 468.96 191.88 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
482.28 191.88 mo
482.28 189.89 483.89 188.28 485.88 188.28 cv
487.87 188.28 489.48 189.89 489.48 191.88 cv
489.48 193.86 487.87 195.48 485.88 195.48 cv
483.89 195.48 482.28 193.86 482.28 191.88 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
482.28 191.88 mo
482.28 189.89 483.89 188.28 485.88 188.28 cv
487.87 188.28 489.48 189.89 489.48 191.88 cv
489.48 193.86 487.87 195.48 485.88 195.48 cv
483.89 195.48 482.28 193.86 482.28 191.88 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
510.33 192.36 mo
510.33 190.37 511.95 188.76 513.93 188.76 cv
515.92 188.76 517.53 190.37 517.53 192.36 cv
517.53 194.35 515.92 195.96 513.93 195.96 cv
511.95 195.96 510.33 194.35 510.33 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
510.33 192.36 mo
510.33 190.37 511.95 188.76 513.93 188.76 cv
515.92 188.76 517.53 190.37 517.53 192.36 cv
517.53 194.35 515.92 195.96 513.93 195.96 cv
511.95 195.96 510.33 194.35 510.33 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
522.66 192.36 mo
522.66 190.37 524.27 188.76 526.26 188.76 cv
528.25 188.76 529.86 190.37 529.86 192.36 cv
529.86 194.35 528.25 195.96 526.26 195.96 cv
524.27 195.96 522.66 194.35 522.66 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
522.66 192.36 mo
522.66 190.37 524.27 188.76 526.26 188.76 cv
528.25 188.76 529.86 190.37 529.86 192.36 cv
529.86 194.35 528.25 195.96 526.26 195.96 cv
524.27 195.96 522.66 194.35 522.66 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
496.49 192.31 mo
496.49 190.33 498.1 188.71 500.09 188.71 cv
502.07 188.71 503.69 190.33 503.69 192.31 cv
503.69 194.3 502.07 195.91 500.09 195.91 cv
498.1 195.91 496.49 194.3 496.49 192.31 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
496.49 192.31 mo
496.49 190.33 498.1 188.71 500.09 188.71 cv
502.07 188.71 503.69 190.33 503.69 192.31 cv
503.69 194.3 502.07 195.91 500.09 195.91 cv
498.1 195.91 496.49 194.3 496.49 192.31 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
536.54 192.36 mo
536.54 190.37 538.15 188.76 540.14 188.76 cv
542.13 188.76 543.74 190.37 543.74 192.36 cv
543.74 194.35 542.13 195.96 540.14 195.96 cv
538.15 195.96 536.54 194.35 536.54 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
536.54 192.36 mo
536.54 190.37 538.15 188.76 540.14 188.76 cv
542.13 188.76 543.74 190.37 543.74 192.36 cv
543.74 194.35 542.13 195.96 540.14 195.96 cv
538.15 195.96 536.54 194.35 536.54 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
548.54 192.36 mo
548.54 190.37 550.15 188.76 552.14 188.76 cv
554.13 188.76 555.74 190.37 555.74 192.36 cv
555.74 194.35 554.13 195.96 552.14 195.96 cv
550.15 195.96 548.54 194.35 548.54 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
548.54 192.36 mo
548.54 190.37 550.15 188.76 552.14 188.76 cv
554.13 188.76 555.74 190.37 555.74 192.36 cv
555.74 194.35 554.13 195.96 552.14 195.96 cv
550.15 195.96 548.54 194.35 548.54 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
561.1 192.36 mo
561.1 190.37 562.72 188.76 564.7 188.76 cv
566.69 188.76 568.3 190.37 568.3 192.36 cv
568.3 194.35 566.69 195.96 564.7 195.96 cv
562.72 195.96 561.1 194.35 561.1 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
561.1 192.36 mo
561.1 190.37 562.72 188.76 564.7 188.76 cv
566.69 188.76 568.3 190.37 568.3 192.36 cv
568.3 194.35 566.69 195.96 564.7 195.96 cv
562.72 195.96 561.1 194.35 561.1 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
573.81 192.36 mo
573.81 190.37 575.42 188.76 577.41 188.76 cv
579.4 188.76 581.01 190.37 581.01 192.36 cv
581.01 194.35 579.4 195.96 577.41 195.96 cv
575.42 195.96 573.81 194.35 573.81 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
573.81 192.36 mo
573.81 190.37 575.42 188.76 577.41 188.76 cv
579.4 188.76 581.01 190.37 581.01 192.36 cv
581.01 194.35 579.4 195.96 577.41 195.96 cv
575.42 195.96 573.81 194.35 573.81 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
587.13 192.36 mo
587.13 190.37 588.75 188.76 590.73 188.76 cv
592.72 188.76 594.33 190.37 594.33 192.36 cv
594.33 194.35 592.72 195.96 590.73 195.96 cv
588.75 195.96 587.13 194.35 587.13 192.36 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
587.13 192.36 mo
587.13 190.37 588.75 188.76 590.73 188.76 cv
592.72 188.76 594.33 190.37 594.33 192.36 cv
594.33 194.35 592.72 195.96 590.73 195.96 cv
588.75 195.96 587.13 194.35 587.13 192.36 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
615.19 192.85 mo
615.19 190.86 616.8 189.25 618.79 189.25 cv
620.78 189.25 622.39 190.86 622.39 192.85 cv
622.39 194.84 620.78 196.45 618.79 196.45 cv
616.8 196.45 615.19 194.84 615.19 192.85 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
615.19 192.85 mo
615.19 190.86 616.8 189.25 618.79 189.25 cv
620.78 189.25 622.39 190.86 622.39 192.85 cv
622.39 194.84 620.78 196.45 618.79 196.45 cv
616.8 196.45 615.19 194.84 615.19 192.85 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
627.51 192.85 mo
627.51 190.86 629.12 189.25 631.11 189.25 cv
633.1 189.25 634.71 190.86 634.71 192.85 cv
634.71 194.84 633.1 196.45 631.11 196.45 cv
629.12 196.45 627.51 194.84 627.51 192.85 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
627.51 192.85 mo
627.51 190.86 629.12 189.25 631.11 189.25 cv
633.1 189.25 634.71 190.86 634.71 192.85 cv
634.71 194.84 633.1 196.45 631.11 196.45 cv
629.12 196.45 627.51 194.84 627.51 192.85 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
601.34 192.8 mo
601.34 190.81 602.95 189.2 604.94 189.2 cv
606.93 189.2 608.54 190.81 608.54 192.8 cv
608.54 194.79 606.93 196.4 604.94 196.4 cv
602.95 196.4 601.34 194.79 601.34 192.8 cv
cp
1 /0 /CSD get_res sepcs
0 sep
ef
601.34 192.8 mo
601.34 190.81 602.95 189.2 604.94 189.2 cv
606.93 189.2 608.54 190.81 608.54 192.8 cv
608.54 194.79 606.93 196.4 604.94 196.4 cv
602.95 196.4 601.34 194.79 601.34 192.8 cv
cp
1 /0 /CSD get_res sepcs
1 sep
@
2.25 lw
312.56 262.7 mo
333.75 225.29 362.85 198.1 383.21 196.69 cv
.861112 .641474 .193973 .0337224 cmyk
@
397 194.33 mo
408.67 194.33 li
408.67 195.33 li
397 195.33 li
cp
402.92 190.9 mo
409.66 194.83 li
402.92 198.76 li
402.69 198.9 402.38 198.82 402.24 198.58 cv
402.1 198.34 402.18 198.04 402.42 197.9 cv
408.42 194.4 li
408.42 195.26 li
402.42 191.76 li
402.18 191.62 402.1 191.32 402.24 191.08 cv
402.38 190.84 402.69 190.76 402.92 190.9 cv
cp
.968536 .778958 .248753 .0961929 cmyk
f
382.55 195.78 mo
406.38 195 li
@
231.49 13.34 mo
518.06 13.34 li
518.06 17.84 li
231.49 17.84 li
cp
505.69 5.76999 mo
522.52 15.59 li
505.69 25.4 li
504.62 26.03 503.24 25.67 502.61 24.59 cv
501.99 23.52 502.35 22.14 503.42 21.52 cv
516.92 13.64 li
516.92 17.53 li
503.42 9.64999 li
502.35 9.03 501.99 7.64999 502.61 6.57999 cv
503.24 5.5 504.62 5.14001 505.69 5.76999 cv
cp
.740688 .455604 .0273442 0 cmyk
f
80.375 45 mo
218.375 45 li
218.375 4.125 li
80.375 4.125 li
cp
1 .866178 .330022 .22681 cmyk
ef
.0619821 0 .965148 0 cmyk
%ADOBeginSubsetFont: Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320e0b3397000000cc000000566376
7420ef1f94cc000001240000073a6670676d08e8ba2800000860000005d7
676c7966c7a23d32000070c80003a50e68656164cee221a800000e380000
003668686561127e12ff00000e7000000024686d7478a006329b00000e94
00001a286c6f63610cceaeba000028bc00001a2c6d6178700d8312030000
42e8000000206e616d65cc67f6d30000430800001d4f7072657041216403
000060580000106f67646972000000000000000000000000000103d402bc
00050000059a05330000011b059a0533000003d1006602120805020b0704
02020202020400007a878000000000000008000000004d6f6e6f00200020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001c05ba001c
05a7001c0426001c0000ffe40000ffe40000ffe4fe69ffe405ba001cfe69
ffe402ea0000011d0000011d000000000000000000b200ac00d701280120
00b301fa001700f8011901310049000400f7000300af00fd009500140054
00960112002400160055004901040119012b008c019bff76ffe9003d0092
00a2ffb70182ffaa0016008f00c600f8001c00de04010037004e00550055
006500e903e50059ff9a00080087000b003b00520116006100d600d600f5
00000093009400be017cfff80004001400820092003c00410041ffc1fffc
002a008c049005d809b5009100bb0106ff63ff69001e0022008a022bffd6
ffdf0026005900a300ac0104012b01c004480021006b00850098011903c6
006b009500a400fe010c025d034305bf000000490056006e0077008a00aa
00ca0112015005d805f0ff7bffe70006001300280061006900e90135014d
02a5040cff3effda005b00b900c801190119011901c0045b04a7055bfe3f
ff9dffc2001500b7010a01bc01c10532058efd81ffa1ffae000c00260031
003d004e00560062008300c100c900f100f2027fff7f00480053007700c5
011d01200126012801d60219027e027e03d3002e0041005d006b0075009f
00b000b200ba00bb00bd00d600db00e000e50114011b014a0162019101f2
020c026402cf039b03b403d4040104a9001600230025002a007400a500b6
00cc00cd00cf0105012001300150016a016f0197019d01e002b002ec02f7
0408048304fb04fd0526fee0fefbff4efff50018001a004c007a007f0091
00a300b300b400ce00d500f200f300f601100138016801a101b001e001ec
02090222024f0270029602a502ad034e039103c104350442046b04cd04da
0586058b076107fefca6fe93feadfed1ffb7ffd10003000e001800260046
00690081008f00a500bf00d300d500d900dd00e20119012b0138013b015a
015e016801730188019401ad01c501d101ea01f20200020002000222023b
0244024f026f0272027e02820293029402a502cf02cf02d002da02dd02eb
02f5030503220336037103a103b003b803d003e604100426042e0431044f
045a04ff053205320547055305a805ab05c205f0063c0664067006e80782
078408ccfd2afddefe00fe68feb0feb3ffaa00080059007a0091009e00a2
00af00b400bb00ca00cc00ce00d900e000f40114011a01210127012b0139
0146014b014d0157015c01650182018701920198019b01a201ae01c501c5
01d102070222022b024102530261026502840287028d02b402b402ba02c9
02d602d802ed02f503170323032b03310349035a035b036e03710374037e
03840391039103aa03cf03d303e703e803ed04080417041e0475047a0499
04a704b404d1054c056d056d05a205bf05c005d105fc05fc0602061a061c
062f066a06a806e2070607360750078907d407f30870011c012a011a0120
0000000000000000000000000219000b001e02aa0214047f01ed0000001d
0104000f0091002b01880153011201f3003f03fe0168010e047f01ed036e
03150219041300000000064004b00000027401bb003501c5007f06020301
000004e000b201dc02e004c3023d00d50160011904a7036e05ca022100ab
0426009002bc02bb014200b4023c0256029c030001e501a800e5006b0078
0094016b017300ab01ed013a017d0137017f00d4021603530184003cffa2
02040109014901f0006e031500810464005e000000000000000000000000
000000000000000000000000000000000000013900dc00e9fe9e040d047c
012b00b80096005900ac00df01a900fa0105ffec00170003005500610004
008c00a3008500280120005d00d6007f012601190104016c06cf00b40106
00000737063e047a00f000f900e905ba042604420000ffe7fe69049e04e3
ff37ff2d01200105012000a800740068004700f200e500d900bd00a80068
0047005c0048000a0028003200410050005a0064007d00870091ffb0ff9c
ff83ff79ff6f00cb012000fa012c01fa01a000d500b8005c003c00c800c8
008f00d9018b00b300470000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000fe6400c000ea01180125013203b003ed0576059005aa05b405be
05cd063100780084009b00cc00e200f4010a0120016300d100ea00f70108
01420019002c00340041003800480058006c025903bd0043011a007000d3
0028003700420050005a0064007300780082008c009c00a500bd00ce00f0
0110015c00be00d801020117012c016300ea01080041004b0055005f0073
00a60109018301b300410064001e002a00eb00fa010e01380274002c0040
0082009600b600c000cc00dc00e600f000ff010a0120012c013b01440156
016300f70057006401100136005001b10000ffb60039004e004403cc00e5
002401100042012201a400f0006000e0000e001d003905e30102002cfe4e
ff38026903bd011600ff000e00a00054001b003d01710041000f005000fd
0015014f0035fe52002c00d30000404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0c05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c
20b0032545b019234445b01a23444565234520b00325606a20b009234223
688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321
b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b23
5961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b
2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b
2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b00052
5823b002253823b002256538008a63381b212121212159012d2c4bb06451
584569b00943608a103a1b212121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b
2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8023623
701020b802364520b0005058b00161593a2f182d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c
21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c642364
8bb84000626023212d2cb4000100000015b00826b00826b00826b008260f
10161345683ab001162d2cb4000100000015b00826b00826b00826b00826
0f1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d
2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b
5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b
54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c6423
646164b0035158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab902a702a78a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b202020243604259b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
02436042595959592d00000100000002e6675c9a4cf75f0f3cf508190800
00000000a2e33c1d00000000b9d5b513fafafcfd10000815000100090001
00010000000000010000073efe4e00431000fafafe261000000100000000
00000000000000000000068a0600010000000000023900000239000002aa
00b803cb00700473001204730046071d005905c7005a01e7005c02aa006b
02aa0043031d001c04ac00550239007502aa0073023900930239fffd0473
0056047300a2047300330473004d047300260473005b0473005704730057
047300530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3
006a07cd003d05c7000005c7009605c7006105c700940556009504e30097
0639006205c700960239008c0473002305c7009904e3009d06aa009105c7
009806390059055600950639005905c700960556004a04e3002c05c70093
0556ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa
002604ac00730473ffed02aa002a0473004904e300870473005504e30054
0473004102aa001804e3005404e30092023900930239ffa2047300890239
0093071d007e04e3009104e3005204e3008b04e3005b031d008704730030
02aa001f04e3008d0473000b063900090473000c0473000e04000022031d
003c023d00b0031d002d04ac004305c7000005c7000005c7006105560095
05c700980639005905c70093047300490473004904730049047300490473
004904730049047300570473004104730041047300410473004102390092
0239ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e3
005204e3005204e3008d04e3008d04e3008d04e3008d0473004403330056
047300540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5
fff7080000d802aa00bb02aa0005046400310800ffaa0639003f05b40098
046400320464003c0464003c04730001049c006f03f4002c05b4007a0696
00a1046400000231000002f6002502ec001a06250037071d005804e30057
04e3006502aa00c304ac0055046400540473ffec0464001f04e5001a0473
00600473006a080000c905c7000005c700000639005908000048078d0058
0473fffc08000000040000840400006902390098023900720464003103f4
002f0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f
04e3001f047300440239009302390075040000710800000105c700000556
009505c7000005560095055600950239006a0239ffae0239ffbf0239ffc1
06390059063900590639005905c7009305c7009305c700930239009302aa
000302aafff302aa001302aa001a02aa00cd02aa009102aa002602aa0060
02aa00a002aa000304e3000a0239000a0556004a0473003004e300160400
0022023d00b005c7fffd04e300530556fff70473000e0556009504e3008b
04ac005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac
0028047300000639006204e300540239008c0556004a0473003005c70061
0473005505c700610473005504e30054046bffed02aa01ea05c700000473
004905c700000473004905c7009405c0005105c7fffd0556009504730041
055600950473004104e3009d0239007904e3009d0315009504e3009a03d5
009005c7009804e3009105c7009804e300910639005904e3005205c70096
031d008705c70096031d00500556004a0473003004e3002c02aa001f04e3
002c03d5001e05c7009304e3008d05c7009304e3008d04e3001604000022
04e300160400002204cf009a063900560691005604eb004e04da004e03cc
004e0579004e0392003005b9004e046bffed04d500b8032b004f08c00029
0800004f040000990800004f040000990800004f040000980400009807d5
016a05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe9
050001c905ab027e05abffe905ab027e05abffe905ab027e05abffe905ab
ffe905abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c0
05abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905ab
ffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905ab02d605ab0066
05abffea05d5ffff04d500920800000007eb013007eb012007eb013007eb
012004d500b204d5008004d5002a082b0198086b01b807550010060000f4
0600006f0440003a0540003704c0003f0415004004000025060000550647
008c0473009005abffc701eb008d03d500860715002303e9001804d50092
02d6005c02d6005c04d500b202d6004d05c700000473004905c700610473
005505c70061047300550556009504730041055600950473004105560095
047300410639006204e300540639006204e300540639006204e3005405c7
009604e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda
0239ffe10239ffe20239006e02390075047300230239ffa205c700990473
00890473008d04e3009d0239ffed05c7009804e3009105c9009c04e3008e
0639005904e300520639005904e3005205c70096031d002a0556004a0473
003004e3002c02aa000705c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d078d0007063900090556fffd0473000e0239
008d05c70000047300490800ffaa071d00580639003f04e3005702aa00c9
078d000706390009078d000706390009078d0007063900090556fffd0473
000e0239009502aaffd70473000d04cd005a06ac005c06ac002906ac0030
06ac002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073f
ffbb03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c70096
05c000000556009504e3001605c700960239008c05c700990556000006aa
009105c70098052600660639005905c7009a0556009504cd005a04e3002c
0556fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c
004e04e3008e0239008204a8006c04e200900473000f03af004e04e3008e
0453004e023900930476008e0473000f04e500900473000b0390004e04e3
005204f300760429004e04a80076049b00110607007606c2004e0239ffcd
04a8007604e3004e04a8007606c2004e055a00970715002f048900a405b1
00580556004a0239008c0235ffca0473002308c0001a0880009d07000037
04e2009a04fa000005c0009905c7000005c0009b05c70096048900a405b3
fffa05560095073b00170503002c05c0009905c0009904e2009a059d0020
06aa009105c700960639005905c000990556009505c7006104e3002c04fa
000006d400590556000005d8009a059f007d080a009a0827009a06f5001a
07d5009d05c0009b05b100570840009605c000040473004904f1005c04eb
0096035500880514fff90473004105acffff03fa001804eb008c04eb008c
040100880515001905eb009b04d5008804e3005204d5008804e3008b0473
005503eb00150473000e070000540473000c04eb008904a5007206ab008c
06c0008d05d5002806d5009504eb0099046b003806d5009104abfffb0473
004504e3000003550088046b005104730030023900930240ffd00239ffa2
07c000180740008c04e30000040100880473001204d5008803e500960393
00880800004108eb00a30620003002aa010102aa001e02aa003102aa0031
02aa010102aa007f02aa007e02aa008c02aa008c02aa010102aa001002aa
010102aa01210393007d02aa008c026500c802aa030202aaff0102aa00c9
04a90059049b004103a7000a0466003204ea0082022f0087034e005a04ed
00870503007d022f0087042c002803ed004b03f8004104e30087050a0037
022f00870316004b04e800500459000a04c0006404b2006403ff000a0418
000a04950082042c002805b8005a0563002d045e0087045e0087045e0087
0236005004090050068b0087022fffac042c0028042c002803f8ff1603f8
ff160479003205b8005a05b8005a05b8005a05b8005a04a9005904a90059
04a90059049b004103a2000a0466003204ea008202950000038100000503
007d02950000042c002803ed004b03f80041050a00370316004b04e80050
04c0006404b200640418000a04950082042c002805b8005a0563002d022f
0087049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc
0000fe51028d00ab028d00a002da004303c0007e0196ffba019c004601e5
0046019c0046019c004601ad0048019c004601b1004601510046047e0188
047e0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e
00bc047e00ee04350085028d00c1043500b3060001000600010002be0058
06000100047e00a5047e00bd047e00de0600010006000100060001000600
01000600010001b100460600010006000100060001000600010006000100
06000100060001000600010004e6ffba0600010006000100060001000532
003905320039022cffba022cffba06000100060001000600010006000100
049e0034047800300430ffba0430ffba0376000a0376000a060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097
046f000a0600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010001cf003001b1004601b1004601b1004001b100460600
0100060001000000ffdc0000fe510000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000
ffdc0000ff200000ffdc0473002d08000000060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100028d007f028d00670600010005a0002e03c0007e
01e800000207ffc301bc005e01e0fffa039c0006039c000601bc005e01e0
001a05280097049e0011022cffba022cffba01bc008801e0001a05320039
05320039022cffba022cffba02be0036035200030532003905320039022c
ffba022cffba0532003c0532003c022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba02be006902be006902be006902be00690376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba0880004008800040062cffba062cffba
0880004008800040062cffba062cffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba
02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270
ffba0298ffba04e6002704e600270270ffba0298ffba0454002904540029
02e2ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e2
00210352ffba0352ffba0454003e0454003e022cffba022cffba02be0058
0352000303c0ffba039cffba039c0006039c000605280097046f000a0528
0097049e0011022cffba022cffba0454000004c4000003e400220454001a
03e400220454001a03e400220454001a0600010006000100019c0046019c
00460600010006000100060001000151004601b100460600010006000100
01ad004801e5004606000100060001000600010001b1004601b1004601b1
004601b1004601b1004001cf003006000100019c0046019c004606000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d00ca028d00c7028d00c606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010002be00690100ffba0800ffba1000
ffbb06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f
0000fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000
fd950000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c
06ac00190000fe450000fd550000fda60000fc5f0000fe250000fd180000
fbe00000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc54
0000fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000
fd340000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce9
0000fc260000fc070000fc2f0000fb9e0000fb760239009305c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
055600950473004105560095047300410556009504730041055600950473
004105560095047300410556009504730041055600950473004105560095
047300410239006a0239005d0239008c023900930639005904e300520639
005904e300520639005904e300520639005904e300520639005904e30052
0639005904e300520639005904e3005206d3005905b0005206d3005905b0
005206d3005905b0005206d3005905b0005206d3005905b0005205c70093
04e3008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a3
009305cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e
0556fffd0473000e0556fffd0473000e05c70000047300490239ffca0239
ffca0639005904e3005205c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000
fef40000feef0489fffd03550007073b001705acffff04e2009a04010088
04e2009a0401008805c7009604d500880473000104730012047300010473
0012055600000473000c059f007d04a50072059f009c04e3009205cf0059
0473004c0639005604e3005205320039022cffba0270ffba0298ffba04e6
0027022c0065022c0016022c0016022c0011022c0043022cffd20000fef0
01a8000f01a8fff502aa009002aa009001e8000001bc005e01bc005e0000
ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc0088
01e0001a039c0006039c0006039c0006039c000605280097046f000a0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba049e0034047800300430ffba0430ffba02be004f
02be004f02be006902be006902be006902be006902be004f02be004f02be
006602be006602be006902be006902be006902be006902be002f02be002f
02be002202be00220376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba073200400732004004deffba04deffba
0880004008800040062cffba062cffba0880004008800040062cffba062c
ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba
0298ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e6
002704e60027060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba045400290454002902e2ffba02e2ffba045400290454
002902e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
060e00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba
01e0ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022c
ffba022cffba0454003e0454003e0454003e0454003e0454003e0454003e
022cffba022cffba0454003e0454003e049e0034047800300430ffba0430
ffba02be005803520003031a001a031a001a031a001a039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c000605280042
046fffd905280097046f000a022cffba022cffba039c0006039c00060528
0097046f000a022cffba022cffba05280097046f000a067f0044067f0045
067f0044067f004501a800280000fe290000fe8c0000ff250000ff230000
fefa0000ff7a0000fe5908fc003208ad00320000ffb50000ffb60000fef0
0000ff590000fe590000ff8c01b4000002f700000000fe850000ff0704cd
00320000ff580000ff580000ff59073200400732004004deffba04deffba
0880004008800040062cffba062cffba0454003403c000460454ffba02e2
ffba03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b
01f4001201f400b101f4006d060e002907080029022f00870000fec80350
0000045e008703e4fff50454fff503e400220454001a03e400220454001a
03e400220454001a03e400220454001a03e400220454001a03e400220454
001a047e0072047e00bd03e4000f0454000f000000000000006c0000006c
0000006c0000006c0000011a000001ba0000038800000630000007960000
0948000009a800000a3200000abc00000bf000000c6c00000cdc00000d2a
00000d6800000dbe00000ec200000f44000010ea000012420000135c0000
14ce00001602000016be0000185c000019a2000019fc00001a8800001b12
00001b9400001c2200001d1000001ea40000201e00002186000022c00000
23aa00002468000025040000264a0000271e000027a60000284400002a0e
00002a6a00002cbe00002ebc00002fc4000030940000322e000033920000
35f20000368800003768000038a200003ae400003c6000003d5600003ee8
00003f5c00003fb000004018000040ca000040fe00004162000043700000
446c000045a800004698000048a4000049a400004b8000004c8000004d22
00004dfa00004f2600004f920000514600005230000053200000541c0000
551e000056020000594800005a6800005b5000005ca400005f0a000060e0
0000625e000063ec000065140000657a000066b20000677a000067bc0000
67fc000068380000687e000068c6000069160000695a00006994000069c4
000069f400006a3600006a7800006aaa00006aee00006b3a00006b840000
6bb400006bfa00006c3600006c7600006cb200006cea00006d3a00006d76
00006db200006de200006e2400006e7400006ebe00006ef600006f380000
6f6c00006fe40000706a000072160000738200007578000075c20000765c
000077aa0000799a00007b4e00007c6800007cca00007d2200007e020000
7f34000080ac000081d40000829a0000837000008430000085d400008690
0000877200008850000088b60000894a00008a0e00008b4a00008be20000
8d2200008fc40000914a00009250000092f00000934a0000942a000095d8
00009744000097ee000098e2000099c800009a3c00009a7400009aba0000
9af800009c7400009e8a00009ec400009efa00009fc20000a0960000a106
0000a1240000a1c60000a2a00000a2dc0000a3160000a37c0000a5140000
a5b20000a6440000a7a00000a8ca0000a9b40000a9f20000aa020000aa20
0000ac2a0000ac6c0000acba0000acf60000ad360000ad840000adc20000
ae000000ae3a0000ae7c0000aeb40000aee40000af1e0000af620000af92
0000afda0000b03c0000b0a80000b1560000b18a0000b1fa0000b2400000
b2f60000b3900000b4240000b49a0000b4f60000b5ca0000b6960000b6c6
0000b6f60000b75a0000b7b00000b8380000b9620000bada0000bb100000
bb400000bc480000bd1c0000bd580000beee0000bf6c0000c07a0000c1ae
0000c35a0000c4e80000c7300000c7e60000c82a0000c86a0000c89c0000
c8e00000c91c0000c9600000c99a0000c9cc0000c9fe0000cb2e0000cb64
0000cb9c0000cbe80000cc2a0000cc6c0000ccac0000cce20000ce200000
ce380000ce640000ce9c0000ceda0000cf0a0000cf3a0000cf780000d036
0000d0e80000d11c0000d1520000d18e0000d1cc0000d21a0000d24c0000
d27e0000d2ba0000d2f60000d3320000d36e0000d3a00000d3d00000d400
0000d5120000d6a00000d6de0000d8520000d8960000d8ce0000d9060000
d93c0000d98c0000d9ce0000da140000da660000dab20000dbc40000dcd0
0000ddb80000dea80000dfae0000e0980000e1080000e2320000e2820000
e2b20000e3ac0000e5e00000e6200000e6600000e6a00000e6de0000e73c
0000e79a0000e8080000e8280000e8c80000e9620000e9980000e9fc0000
ea460000ea900000eaac0000eac80000eae80000eb080000eb280000eb48
0000eb6e0000eb940000ebba0000ebe00000ec100000ec380000ec600000
ec8c0000ecb80000ecec0000ed160000ed420000ed780000eda20000edce
0000ee040000ee2e0000ee580000ee8c0000eebc0000eef00000ef340000
ef640000ef980000efda0000f00e0000f0400000f0820000f0b60000f0e6
0000f1280000f16c0000f1b20000f20e0000f22a0000f2460000f2620000
f27e0000f29a0000f4080000f6b20000f9220000f93e0000f9580000f974
0000f9900000f9ac0000f9c80000fa240000fa5e0000fac80000fb920000
fc320000fd080000fd880000fe100000fe800000ff160000ff740000ffba
000100180001007a000100ba000101160001017a000101ec0001022a0001
03bc000104cc000104f6000105120001053e00010576000105c2000105f2
000106220001065600010686000106b6000106e600010716000107460001
0776000107a6000107d600010806000108360001086600010896000108c6
00010a5000010bfe00010c2e00010c5e00010d4a00010e6200010e920001
0ec000010ef000010f1e00010f4e00010f7c000110580001113a00011174
00011254000112a40001130a0001145000011482000114a8000114d00001
150e000115e4000116dc0001170c0001173c0001176c0001179c000117cc
000117fa0001182a0001185a0001191c00011a3000011a6000011a900001
1ac000011af000011b2000011b5000011c5600011d6400011d9400011dc4
00011df400011e2400011ec400011f1600011fe400012014000120440001
2074000120a4000120d600012106000121360001216600012196000121ca
000121fe0001222e0001225e000122bc000122e60001246c000125540001
27080001295c00012b9400012d3200012d9200012e1800012e2800012eea
0001308e0001316200013238000132c4000133e8000134fc0001366e0001
36a4000136b4000136c40001379e000137ae000137be000137ce000137de
000137ee000138f40001390400013914000139be000139ce00013a200001
3a3000013b2400013b3400013b4400013b5400013c2600013d4000013d74
00013da800013dd800013e0800013e3800013e6600013e9a00013f840001
407a0001415a00014224000142e400014336000144680001457c00014640
000146500001475c0001476c0001483600014914000149dc00014afa0001
4bc600014cc400014cf600014d2a00014d5a00014d8a00014dba00014dee
00014ed000014f0000015024000150340001504400015078000150880001
518e0001527a0001534800015378000153a80001542800015438000154ee
000154fe00015556000155f400015604000157e60001590a00015a300001
5a6000015b8a00015c0200015c1200015c2200015c3200015c8600015c96
00015ca600015cb600015dae00015eac00015ebc00015f2800015fb60001
603e000160dc0001619a000162820001633c000164660001658c000166ca
000166da00016800000168ee0001694c00016a1c00016a2c00016c120001
6d5600016e3a00016e6a00016f800001700a000171c40001724a0001725a
000172c4000172d4000172e40001734e0001735e000174b2000174c20001
754c000175d80001766800017718000177d4000178d40001799200017a98
00017ba400017cd200017d0600017e4200017e7000017f8600017f960001
7fa600017fd800017fe8000180f4000181d8000182d60001831000018340
000183e00001843e000184ae000184ea0001868000018704000187960001
88e6000189a600018a9600018aec00018b7a00018c4800018c8c00018ce4
00018d4600018e4600018ea000018ee400018f1c00018f6000018fae0001
8ffa000190400001909c000191f200019294000193aa00019408000194a4
000194e20001959c00019612000197100001974a000197d4000198900001
9932000199b800019a8400019ac200019b4a00019c1800019cf600019dbe
00019ecc00019f820001a08e0001a1400001a1c80001a2c80001a3b00001
a4080001a4600001a4b40001a5020001a59a0001a6a60001a6ea0001a728
0001a7700001a7a60001a8100001a8f00001a9280001a9560001a98e0001
a9bc0001a9ee0001aa200001aa9a0001aaf00001ac4e0001acee0001ae0c
0001aebc0001af080001b05e0001b10e0001b1380001b1b40001b1fc0001
b3340001b4320001b4a00001b6220001b7e00001b9460001ba540001ba7e
0001bc0e0001bd4c0001bd780001bdac0001bdd80001be080001bf760001
bfa00001c0b00001c1620001c2120001c2a60001c3740001c4b00001c4c0
0001c4f40001c5b80001c7740001c8520001c8c00001c9ea0001ca4c0001
cb620001cc340001ccc00001cd3e0001ce1a0001cf5a0001d0540001d10a
0001d1f60001d2be0001d39c0001d46c0001d54a0001d5de0001d80a0001
d8340001d85e0001d86e0001d8980001d9d20001daf00001dc000001dc2a
0001dc540001dc7e0001dca80001dcd20001deba0001dee40001df0e0001
df380001df620001df8c0001dfb60001dfe00001e00a0001e03e0001e068
0001e0920001e0bc0001e2560001e2660001e39e0001e3ae0001e3d80001
e4020001e42c0001e4560001e5f00001e86a0001e9c80001e9d80001eb4a
0001eb5a0001ecb80001ee9c0001ef9e0001f1240001f2ee0001f5420001
f6b00001f8a40001f8b40001f8c40001f8ee0001f9180001f9420001f96c
0001f9960001f9c00001f9ea0001fa140001fa3e0001fa680001fa920001
fabc0001fae60001fb100001fb3a0001fb640001fe200002000800020196
000203da0002055600020580000205aa000205da0002060a0002065a0002
06aa000206ea0002075c000207b00002080e000208640002089a000208dc
000209220002096c0002099c000209d400020a0400020b6a00020eb00002
0eda00020f0400020f2e00020f5800020f8200020fac00020fd600021000
0002102a000210540002107e000210a8000210d2000210fc000211260002
11500002117a000211a4000211ce000211f8000212220002124c00021276
000212a0000212ca000212f40002131e00021348000213e0000214700002
149a000218220002192c00021aa400021c2a00021e0c00021fe0000221fe
0002220e000223b60002254e000227c000022a0000022b7800022b880002
2c3400022cde00022e1a00022e2a00022ef600022f06000230a800023290
000233fc0002340c00023514000235240002369e000236ae000237dc0002
37ec0002392800023adc00023bd400023be400023cd600023e3400023ee0
00023ef000024032000241e0000242d6000242e60002438a0002439a0002
4482000244920002455c0002456c00024682000246920002485800024868
000249d6000249e600024c5800024c6800024e7800024e88000250040002
5014000251460002515600025314000253240002549a000254aa00025618
000256280002563800025648000258080002581800025828000258380002
598800025ac000025bd800025cd200025e74000260060002616e000262bc
0002648200026492000265e4000267460002692c0002693c00026ac40002
6c6800026ea200026eb200026ec200026ed20002703c0002704c0002711e
0002712e00027266000272760002735c0002736c000274a6000274b60002
757000027580000276a60002780a0002797800027b2600027c5600027c66
00027de000027f2200028142000283140002842400028434000286b60002
88e200028bac00028e08000290c80002930a000294c8000296220002964c
000296760002968600029696000296c0000296ea00029714000297240002
97340002975e0002978800029798000297a8000297d2000297fc00029826
000298360002984600029856000298660002987600029886000298b00002
98c0000298d0000298fa000299240002994e00029978000299a2000299cc
000299f600029a2000029a4a00029a7400029a9e00029ac800029af20002
9b1c00029b4600029b7000029b9a00029bc400029bee00029c1800029c42
00029c6c00029c9600029cc000029cea00029d1400029d3e00029d680002
9d9200029dbc00029de600029e1000029e3a00029e6400029e8e00029eb8
00029ee200029f0c00029f3600029f6000029f8a00029fb400029fde0002
a0080002a0320002a05c0002a0860002a0b00002a0da0002a1040002a12e
0002a1580002a1820002a1ac0002a2540002a2980002a30e0002a3380002
a3620002a38c0002a3b60002a3e00002a40a0002a4340002a45e0002a488
0002a4b20002a4dc0002a5060002a5300002a55a0002a5840002a5ae0002
a5d80002a6020002a62c0002a6560002a6800002a6aa0002a6d40002a786
0002a7ba0002a7ee0002a8220002a9a60002ab260002ac920002ade00002
aea00002af620002afd40002b0a60002b1780002b1ea0002b2ae0002b3a0
0002b4640002b5560002b5fc0002b7080002b79a0002b8e20002ba200002
ba840002bbac0002bd7a0002bfc20002c02e0002c09a0002c1040002c170
0002c21e0002c2cc0002c3720002c4180002c4be0002c4ee0002c51e0002
c54e0002c5600002c5720002c5840002c5960002c5a80002c6180002c68a
0002c6ba0002c6cc0002c6de0002c6ee0002c6fe0002c7100002c7220002
c7340002c7460002c7580002c76a0002c8760002c91c0002ca280002cace
0002cb260002cb4c0002cb720002cb9c0002cbca0002cc140002cc700002
ccaa0002cd020002cd420002cd920002cdca0002ce200002ce620002cea2
0002cef40002cf660002cfb00002d01c0002d05c0002d0c80002d1080002
d1700002d1b20002d2060002d22c0002d2520002d27c0002d2ac0002d2dc
0002d30c0002d35a0002d3b60002d3f40002d44e0002d4960002d4ec0002
d5300002d5840002d5ca0002d60c0002d6320002d6680002d68e0002d6b4
0002d6da0002d7000002d72e0002d7580002d7a20002d7fe0002d8380002
d8900002d8d00002d9240002d95c0002d9ac0002d9ee0002da2e0002da68
0002daa40002dae00002db1c0002db4a0002db740002dbb20002dbe20002
dc080002dc2e0002dc540002dc7a0002dca40002dcce0002dd0e0002dd5a
0002dda00002ddd80002de020002de2c0002de5c0002de8c0002deb20002
ded80002df020002df2c0002df5e0002df900002dfc00002dff00002e020
0002e0500002e0800002e0ae0002e0de0002e10e0002e13e0002e16e0002
e1a20002e2020002e2360002e29a0002e2ce0002e32e0002e3620002e3c6
0002e46e0002e53e0002e6540002e7260002e7a00002e80e0002e9f00002
ebba0002ecda0002edec0002ef300002f0440002f0d40002f1540002f1e8
0002f26a0002f32a0002f3ca0002f4960002f57c0002f6340002f7000002
f77c0002f78c0002f85a0002f91a0002f9e40002fa980002fb8e0002fc04
0002fd2c0002fe460002ffce0003005000030140000302360003032e0003
03c0000305d200030762000307e80003096a000309d600030a4000030aae
00030c7000030e3800030ec800030f1400030f5200030f9400030fdc0003
10080003104e00031084000310c0000310fe0003113c000311c40003124c
0003128e000312c6000313000003133a000313620003138a000313ce0003
1412000314500003148e000314be000314ee000315140003153a0003157c
000315be000316040003164a000316a2000316fa00031756000317b20003
180e0003186a000318b8000319060003192e000319560003197c000319a2
000319e600031a2a00031a7600031ac200031b0c00031b5600031ba40003
1bf200031c3200031cd200031cf800031d1e00031d6800031dd800031e00
00031e2800031e6e00031eb400031f0a00031f6000031fae000320680003
2090000320b80003210c00032160000321a0000321e0000322060003222c
00032292000322f80003233a0003237c000323a2000323c80003241e0003
2474000324d00003252c00032580000325d40003262200032670000326ba
000327040003275e000327b80003280c00032860000328a2000328e40003
298200032a2000032a6a00032ab400032b0600032b5800032bbe00032c24
00032c7c00032cd400032d0000032d2c00032d5800032d8400032db00003
2ddc00032e0800032e3400032e5a00032e8000032eac00032ed800032f26
00032f7400032fc00003300c0003305c000330ac00033126000331880003
32000003324a000333dc00033410000334440003347a0003349e00033508
00033572000335f40003365c000336a4000336ec00033738000337a20003
37ca000337f2000338180003383e0003388e000338de00033972000339c4
00033a2200033a8000033ae600033b4c00033c5e00033da800033e8c0003
3fe400034050000340b60003411400034176000341fc00034282000342e6
0003434a000343b60003442200034478000344ce00034500000345320003
45580003457e000345ea00034650000346ae00034710000348220003492e
00034a3c00034b4000034b6600034b8e00034bb200034bd600034bfe0003
4c2600034c4c00034c7200034d9400034ed000034ffe0003512a000351e4
0003529e0003535e0003541e00035502000355e6000356e2000357de0003
58c2000359a600035a7c00035b5200035b9c00035be600035c0c00035c32
00035c8200035cd200035cf600035d1a00035df000035e0000035e540003
5ea800035f0600035f6400035fa400035fe40003602e00036078000360c8
000361180003616e000361c40003621600036254000362ce000363100003
6354000363e20003647000036622000366320003666c000366a6000366d6
000367060003673a0003676e000367a8000367e2000368360003688a0003
68ec0003694e00036afe00036c8600036cc200036cfa00036d4400036d8e
00036dd400036e1a00036e6a00037090000370b6000370dc000371300003
73da000374ac0003754800037596000375d400037606000377f400037ab0
00037b8200037ce600037e2000037ecc00038062000382b6000384f20003
854c000385920003866000038752000387700003881a0003894000038a1c
00038a2e00038b8e00038d1400038d3a00038df800038e1600038e3c0003
8e6200038e8800038eae00038ed400038efa00038f2000038f4600038f92
00038ff20003901a000390400003919e0003937a0003938a0003945a0003
956a000395c8000396e00003986e0003991400039a5a00039aac00039afe
00039b3600039b8200039bae00039bf400039c2000039c5c00039cb60003
9d0000039d4c00039dbc00039e8200039efe00039fbe0003a0360003a110
0003a1a00003a1da0003a2160003a38e0003a47e0003a4c80003a50e0001
0000068a00f2003c006f000600020010002f00550000064e106f00030002
0000005f047a000000030000000000fe00000000000300000001000a013e
0000000300000002000805de0000000300000003005805c0000000030000
0004001405d20000000300000005001805e8000000030000000600180618
000000030000000700c40630000000030000000800260780000000030000
0009008a0da8000000030000000a04c200fe000000030000000b00620e32
000000030000000c00660e94000000030000000d06b406f4000000030000
000e005c0efa0001000000000000007f0f56000100000000000100050ff5
0001000000000002000412450001000000000003002c1236000100000000
0004000a123f0001000000000005000c124a0001000000000006000c1262
00010000000000070062126e000100000000000800131316000100000000
00090045162a000100000000000a02610fd5000100000000000b0031166f
000100000000000c003316a0000100000000000d035a12d0000100000000
000e002e16d30003000104030002000e170d0003000104030004001a1701
0003000104050002000a172700030001040500040016171b000300010406
00020006173d00030001040600040012173100030001040700020008174f
0003000104070004001417430003000104080002000c1763000300010408
000400181757000300010409000000fe00000003000104090001000a013e
0003000104090002000805de0003000104090003005805c0000300010409
0004001405d20003000104090005001805e8000300010409000600180618
000300010409000700c40630000300010409000800260780000300010409
0009008a0da8000300010409000a04c200fe000300010409000b00620e32
000300010409000c00660e94000300010409000d06b406f4000300010409
000e005c0efa00030001040a0002000e177b00030001040a0004001a176f
00030001040b00020012179500030001040b0004001e178900030001040c
0002000817b300030001040c0004001417a700030001040e0002001017d1
00030001040e0004001c17c50003000104100002001217b3000300010410
0004001e17a70003000104130002000617ed0003000104130004001217e1
0003000104140002000e17ff0003000104140004001a17f3000300010415
00020014181900030001041500040020180d0003000104160002000e1839
0003000104160004001a182d000300010419000200141853000300010419
00040020184700030001041b0002000a187300030001041b000400161867
00030001041d00020006174f00030001041d00040012174300030001041f
0002000a188900030001041f00040016187d0003000104240002000c189f
00030001042400040018189300030001042a0002000818b700030001042a
0004001418ab00030001042d0002000a18cb00030001042d0004001618bf
00030001080a0002000e177b00030001080a0004001a176f000300010816
0002000e18390003000108160004001a182d000300010c0a0002000e177b
000300010c0a0004001a176f000300010c0c0002000817b3000300010c0c
0004001417a700540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
00730020005200650073006500720076006500640043006f006e00740065
006d0070006f0072006100720079002000730061006e0073002000730065
007200690066002000640065007300690067006e002c0020004100720069
0061006c00200063006f006e007400610069006e00730020006d006f0072
0065002000680075006d0061006e00690073007400200063006800610072
006100630074006500720069007300740069006300730020007400680061
006e0020006d0061006e00790020006f0066002000690074007300200070
00720065006400650063006500730073006f0072007300200061006e0064
002000610073002000730075006300680020006900730020006d006f0072
006500200069006e002000740075006e0065002000770069007400680020
0074006800650020006d006f006f00640020006f00660020007400680065
0020006c006100730074002000640065006300610064006500730020006f
006600200074006800650020007400770065006e00740069006500740068
002000630065006e0074007500720079002e002000200054006800650020
006f0076006500720061006c006c002000740072006500610074006d0065
006e00740020006f00660020006300750072007600650073002000690073
00200073006f006600740065007200200061006e0064002000660075006c
006c006500720020007400680061006e00200069006e0020006d006f0073
007400200069006e0064007500730074007200690061006c002000730074
0079006c0065002000730061006e00730020007300650072006900660020
00660061006300650073002e00200020005400650072006d0069006e0061
006c0020007300740072006f006b00650073002000610072006500200063
007500740020006f006e002000740068006500200064006900610067006f
006e0061006c002000770068006900630068002000680065006c00700073
00200074006f002000670069007600650020007400680065002000660061
00630065002000610020006c0065007300730020006d0065006300680061
006e006900630061006c00200061007000700065006100720061006e0063
0065002e002000200041007200690061006c00200069007300200061006e
002000650078007400720065006d0065006c007900200076006500720073
006100740069006c0065002000660061006d0069006c00790020006f0066
002000740079007000650066006100630065007300200077006800690063
0068002000630061006e0020006200650020007500730065006400200077
00690074006800200065007100750061006c002000730075006300630065
0073007300200066006f0072002000740065007800740020007300650074
00740069006e006700200069006e0020007200650070006f007200740073
002c002000700072006500730065006e0074006100740069006f006e0073
002c0020006d006100670061007a0069006e006500730020006500740063
002c00200061006e006400200066006f007200200064006900730070006c
00610079002000750073006500200069006e0020006e0065007700730070
00610070006500720073002c002000610064007600650072007400690073
0069006e006700200061006e0064002000700072006f006d006f00740069
006f006e0073002e004d006f006e006f0074007900700065003a00410072
00690061006c00200042006f006c0064003a00560065007200730069006f
006e00200033002e0030003000200028004d006900630072006f0073006f
0066007400290041007200690061006c002d0042006f006c0064004d0054
0041007200690061006c00ae002000540072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0070006c0063002000720065006700690073007400650072006500640020
0069006e0020007400680065002000550053002000500061007400200026
00200054004d0020004f00660066002e00200061006e006400200065006c
0073006500770068006500720065002e004e004f00540049004600490043
004100540049004f004e0020004f00460020004c004900430045004e0053
0045002000410047005200450045004d0045004e0054000d000a000d000a
005400680069007300200074007900700065006600610063006500200069
00730020007400680065002000700072006f007000650072007400790020
006f00660020004d006f006e006f00740079007000650020005400790070
006f00670072006100700068007900200061006e00640020006900740073
002000750073006500200062007900200079006f00750020006900730020
0063006f0076006500720065006400200075006e00640065007200200074
006800650020007400650072006d00730020006f0066002000610020006c
006900630065006e00730065002000610067007200650065006d0065006e
0074002e00200059006f0075002000680061007600650020006f00620074
00610069006e006500640020007400680069007300200074007900700065
006600610063006500200073006f00660074007700610072006500200065
006900740068006500720020006400690072006500630074006c00790020
00660072006f006d0020004d006f006e006f00740079007000650020006f
007200200074006f00670065007400680065007200200077006900740068
00200073006f006600740077006100720065002000640069007300740072
0069006200750074006500640020006200790020006f006e00650020006f
00660020004d006f006e006f0074007900700065002700730020006c0069
00630065006e0073006500650073002e000d000a000d000a005400680069
007300200073006f00660074007700610072006500200069007300200061
002000760061006c007500610062006c0065002000610073007300650074
0020006f00660020004d006f006e006f0074007900700065002e00200055
006e006c00650073007300200079006f0075002000680061007600650020
0065006e0074006500720065006400200069006e0074006f002000610020
007300700065006300690066006900630020006c006900630065006e0073
0065002000610067007200650065006d0065006e00740020006700720061
006e00740069006e006700200079006f0075002000610064006400690074
0069006f006e0061006c0020007200690067006800740073002c00200079
006f0075007200200075007300650020006f006600200074006800690073
00200073006f0066007400770061007200650020006900730020006c0069
006d006900740065006400200074006f00200079006f0075007200200077
006f0072006b00730074006100740069006f006e00200066006f00720020
0079006f007500720020006f0077006e0020007000750062006c00690073
00680069006e00670020007500730065002e00200059006f00750020006d
006100790020006e006f007400200063006f007000790020006f00720020
006400690073007400720069006200750074006500200074006800690073
00200073006f006600740077006100720065002e000d000a000d000a0049
006600200079006f00750020006800610076006500200061006e00790020
007100750065007300740069006f006e00200063006f006e006300650072
006e0069006e006700200079006f00750072002000720069006700680074
007300200079006f0075002000730068006f0075006c0064002000720065
007600690065007700200074006800650020006c006900630065006e0073
0065002000610067007200650065006d0065006e007400200079006f0075
002000720065006300650069007600650064002000770069007400680020
00740068006500200073006f0066007400770061007200650020006f0072
00200063006f006e00740061006300740020004d006f006e006f00740079
0070006500200066006f00720020006100200063006f007000790020006f
006600200074006800650020006c006900630065006e0073006500200061
0067007200650065006d0065006e0074002e000d000a000d000a004d006f
006e006f0074007900700065002000630061006e00200062006500200063
006f006e007400610063007400650064002000610074003a000d000a000d
000a0055005300410020002d002000280038003400370029002000370031
0038002d0030003400300030000900090055004b0020002d002000300031
003100340034002000300031003700330037002000370036003500390035
0039000d000a0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d004d006f006e006f
007400790070006500200054007900700065002000440072006100770069
006e00670020004f006600660069006300650020002d00200052006f0062
0069006e0020004e006900630068006f006c00610073002c002000500061
0074007200690063006900610020005300610075006e0064006500720073
002000310039003800320068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f006d0074006e0061006d0065002f006d0073005f0061
007200690061006c002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f006d0074006e0061006d0065002f
006d0073005f00770065006c0063006f006d0065002e00680074006d006c
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d002f00680074006d006c002f0074
007900700065002f006c006900630065006e00730065002e00680074006d
006c547970656661636520a920546865204d6f6e6f7479706520436f7270
6f726174696f6e20706c632e204461746120a920546865204d6f6e6f7479
706520436f72706f726174696f6e20706c632f5479706520536f6c757469
6f6e7320496e632e20313939302d313939322e20416c6c20526967687473
205265736572766564436f6e74656d706f726172792073616e7320736572
69662064657369676e2c20417269616c20636f6e7461696e73206d6f7265
2068756d616e69737420636861726163746572697374696373207468616e
206d616e79206f6620697473207072656465636573736f727320616e6420
61732073756368206973206d6f726520696e2074756e6520776974682074
6865206d6f6f64206f6620746865206c6173742064656361646573206f66
20746865207477656e74696574682063656e747572792e2020546865206f
766572616c6c2074726561746d656e74206f662063757276657320697320
736f6674657220616e642066756c6c6572207468616e20696e206d6f7374
20696e647573747269616c207374796c652073616e732073657269662066
616365732e20205465726d696e616c207374726f6b657320617265206375
74206f6e2074686520646961676f6e616c2077686963682068656c707320
746f20676976652074686520666163652061206c657373206d656368616e
6963616c20617070656172616e63652e2020417269616c20697320616e20
65787472656d656c7920766572736174696c652066616d696c79206f6620
7479706566616365732077686963682063616e2062652075736564207769
746820657175616c207375636365737320666f7220746578742073657474
696e6720696e207265706f7274732c2070726573656e746174696f6e732c
206d6167617a696e6573206574632c20616e6420666f7220646973706c61
792075736520696e206e6577737061706572732c20616476657274697369
6e6720616e642070726f6d6f74696f6e732e4d6f6e6f747970653a417269
616c20426f6c643a56657273696f6e20332e303020284d6963726f736f66
7429417269616c2d426f6c644d54417269616ca82054726164656d61726b
206f6620546865204d6f6e6f7479706520436f72706f726174696f6e2070
6c63207265676973746572656420696e2074686520555320506174202620
544d204f66662e20616e6420656c736577686572652e4e4f544946494341
54494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a54
686973207479706566616365206973207468652070726f7065727479206f
66204d6f6e6f74797065205479706f67726170687920616e642069747320
75736520627920796f7520697320636f766572656420756e646572207468
65207465726d73206f662061206c6963656e73652061677265656d656e74
2e20596f752068617665206f627461696e65642074686973207479706566
61636520736f66747761726520656974686572206469726563746c792066
726f6d204d6f6e6f74797065206f7220746f676574686572207769746820
736f667477617265206469737472696275746564206279206f6e65206f66
204d6f6e6f747970652773206c6963656e736565732e0d0a0d0a54686973
20736f66747761726520697320612076616c7561626c6520617373657420
6f66204d6f6e6f747970652e20556e6c65737320796f7520686176652065
6e746572656420696e746f2061207370656369666963206c6963656e7365
2061677265656d656e74206772616e74696e6720796f7520616464697469
6f6e616c207269676874732c20796f757220757365206f66207468697320
736f667477617265206973206c696d6974656420746f20796f757220776f
726b73746174696f6e20666f7220796f7572206f776e207075626c697368
696e67207573652e20596f75206d6179206e6f7420636f7079206f722064
697374726962757465207468697320736f6674776172652e0d0a0d0a4966
20796f75206861766520616e79207175657374696f6e20636f6e6365726e
696e6720796f75722072696768747320796f752073686f756c6420726576
69657720746865206c6963656e73652061677265656d656e7420796f7520
726563656976656420776974682074686520736f667477617265206f7220
636f6e74616374204d6f6e6f7479706520666f72206120636f7079206f66
20746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e
6f747970652063616e20626520636f6e7461637465642061743a0d0a0d0a
555341202d202838343729203731382d303430300909554b202d20303131
3434203031373337203736353935390d0a687474703a2f2f7777772e6d6f
6e6f747970652e636f6d4d6f6e6f7479706520547970652044726177696e
67204f6666696365202d20526f62696e204e6963686f6c61732c20506174
7269636961205361756e646572732031393832687474703a2f2f7777772e
6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f6172
69616c2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f
6d2f68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c68
7474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f7479
70652f6c6963656e73652e68746d6c0041007200690061006c0020004e00
65006700720065007400610041007200690061006c002000740075010d00
6e00e90041007200690061006c0020006600650064004100720069006100
6c002000460065007400740041007200690061006c0020038803bd03c403
bf03bd03b10041007200690061006c0020004e0065006700720069007400
610041007200690061006c0020004c0069006800610076006f0069007400
750041007200690061006c00200047007200610073007300650074007400
6f0041007200690061006c0020004600e9006c006b00f6007600e9007200
41007200690061006c00200056006500740041007200690061006c002000
480061006c00760066006500740041007200690061006c00200050006f00
670072007500620069006f006e00790041007200690061006c0020004e00
650067007200690074006f0041007200690061006c0020041f043e043b04
43043604380440043d044b04390041007200690061006c00200054007501
0d006e00e90041007200690061006c0020004b0061006c0131006e004100
7200690061006c0020004b007200650070006b006f004100720069006100
6c0020011100e20323006d0041007200690061006c0020004c006f006400
69006100be0054039a000f0101001fffc00398b310143240b80399b30f13
32404110039500500395000200b0034d00c0034d0002006f0391007f0391
0002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b0080
038b000300a0038b00010020038b0040038b0002ffc0038bb313163240b8
0383b20f1132b9ffc0037bb2303432b9ffc0037bb3101832504114037800
010365036e0023001f037e036e001e001f0363036e001d001f0362036400
0d001fffc00340b30f1032804110033f0001033f03150029001f03410316
0032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a3241
0a034303180032001f030f030d0034001f03080307b2321f20bb03400001
00400388b3090b3240b80388b2101532bd038503070014001f03800307b2
171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a0035400
02001f036e0001009f036e00010040036eb2090b32410a0345031c001600
1f036b031d0015001f0346031eb2151fc0bb0393000100400392b3090d32
40b8033eb2083340b8033eb30d0e32c04109033e000100b0038e00c0038e
0002ffc00390b326383200412603280030032800020020037f0030037f00
020010038a0030038a0050038a006f038a007f038a009f038a0006000003
89003003890002002f037a0070037700900377009f037a0004ffc00315b2
0f1032b9ffc00315b2242832b903190318b2321f10bb031a0001ffc0031a
b3090e3240b80318b2121332b9ffc00318b30c0e323fbd0373004f037300
0200400374b31718326fbb032a00010040032cb3181b3240b80370b2090c
32bd031703160032001fffc00316b20e1132bd031c031e0016001f031d03
1eb2151fb0411f031e0001000f031f000102ca02d00015001f02d302d500
0d001f02cf02d0000d001f02cb02d0000d001f02cd02d0000d001f02ce02
d0000d001fffc002d0b3090c3240b802d2b3090c32e0411c02e50001005f
02dd009f02e5000202bb02c30030001f02da02b80032001f02d902b9003f
001f02d802b80064001f02b902b80033001f02bab221c81fb802b8b321c8
1f40b8039bb20d1632b9ffc002c3b22b2f32b9ffc002c3b21f2532b9ffc0
02c3b2171b32b9ffc002c3b2121632412502c202c1001c001f02d702c100
24001f02c102c00022001f02bf02c00018001f02c0027400c8001f02b502
35003b001f02b40235003b001f02c402bc001e001f02b702b60038001f02
b3b20ec81fb802b0b207c81fb802afb206c81fb802aeb200c81fb802afb2
502f1fbc02ae02ab001a001f02adb2261a1fb802a8b326241f0fbb023500
0102a50274b21d1f12410a02a1015801f4001f02a000d801f4001f001202
a2b237c81fb80290b2bc201fb9029002904018374025402d40a603302530
2d30a6032025202d203720a6204110028e0005009f028b0001028b028b00
3700200289003002890040028900900289b20437b041fd027400c0027400
020080027400a00274000200600274007002740002000002740010027400
020080027400f002740002003f0285004f028500020090027e0090027f00
9002800090028100040090027a0090027b0090027c0090027d0004009002
74009002750090027700030070027e0070027f0070028000700281000400
70027a0070027b0070027c0070027d000400700274007002750070027700
030060027e0060027f006002800060028100040060027a0060027b006002
7c0060027d000400600274006002750060027700030050027e0050027f00
5002800050028100040050027a0050027b0050027c0050027d0004005002
74005002750050027700030040027e0040027f0040028000400281000400
40027a0040027b0040027c0040027d000400400274004002750040027700
030030027e0030027f003002800030028100040030027a0030027b003002
7c0030027d000400300274003002750030027700030020027e0020027f00
2002800020028100040020027a0020027b0020027c0020027d0004002002
74002002750020027700030010027e0010027f0010028000100281000400
10027a0010027b0010027c0010027d000400100274001002750010027700
0300e0027e00e0027f00e0028000e00281000400e0027a00e0027b00e002
7c00e0027d000400e0027400e0027500e00277b103d041c5027e00d0027f
00d0028000d00281000400d0027a00d0027b00d0027c00d0027d000400d0
027400d0027500d0027700030030027400400274000200c0027e00c0027f
00c0028000c00281000400c0027a00c0027b00c0027c00c0027d000400c0
027400c0027500c00277000300b0027e00b0027f00b0028000b002810004
00b0027a00b0027b00b0027c00b0027d000400b0027400b0027500b00277
000300a0027e00a0027f00a0028000a00281000400a0027a00a0027b00a0
027c00a0027d000400a0027400a0027500a0027700030090027e0090027f
009002800090028100040090027a0090027b0090027c0090027d00040090
0274009002750090027700030020027e0020027f00200280002002810004
0020027a0020027b0020027c0020027d0004002002740020027500200277
0003028101580801001f028001290801001f027f00ec0801001f027e00d8
0801001f027d00b10801001f027c00a60801001f027b00820801001f027a
00370801001f027700260801001f027500200801001f0274001f0801b21f
370f41160235004f0235005f0235006f0235009f023500af023500bf0235
000700af023500cf023500df023500ff02354022040f074f079f07af07bf
0705af07e007020f064f069f06af06bf0605af06e0060220411b020d0001
005f02350001008f02350001007f023500ef02350002002f0235003f0235
0002003f0234004f0234000202350235023402344011ed20ef2a01cf2a01
bf2a01af2a018f2a01410902470104001e001f022000370201001f015840
0c263e1fd8263e1f3726273e1fb8028eb6ec171fb226361fb801bcb22636
1fb80129402b26361fec26361fb126361fa626361f8226361f3726361f32
26361f2d26361f2526361f1f26361f37262a1fb801584022263e1fd8263e
1fbc263e1f27263e1f21263e1f20263e1f3700161600000012110840b902
0d01a6b3c50d0009b801bcb227281fb801bbb227301fb801b8b2274f1fb8
01b7b227621f410901b600270101001f01b5002002ab001f01afb21fe41f
b801adb21fe41fb801acb21fbb1fb801a8b21f341fb8015db2272e1fb801
5bb227cd1f410d0155001f0401001f0154001f0401001f0153001f020100
1f0152b21f561fb80151b21f291fb8012bb227261f410d012a0027012500
1f0129015800e4001f0125001f0401001f0124b21fe41fb80123b21f3b1f
b80122b21f391f410d010800270801001f0106002d0101001f0105001f01
01001f0103b31fbb1fefb901580401400b1fed1f931fec1fe41feb1fb802
01b21fd920b80401b21fcf25b80156400a1fbc2d9e1fbb1f411fb2410a01
580401001f00b101580401001f00b001580401b51fa625891f9bb9015801
25b61f991f2e1f8e2db80801b51f8d1f291f89b901580401b21f8220b802
ab40131f801f301f742de41f731f4a1f611f521f5d25b802abb21f5c1fbc
0801001f0059015802abb61f5025891f491fb80125b21f4725b80401400b
1f461f791f401f271f3920bc02ab001f003801580401b21f372dbc012500
1f003201580125b61f2c1f341f2a25b80801b21f5537b80111402a07f007
90075b0742073b07230722071e071d071408120810080e080c080a080808
060804080208000814b8ffe0402b00000100140610000001000604000001
000410000001001002000001000200000001000002010802004a00b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b5442b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382b
b00288b801005458b801ffb101018e851bb0124358b10100858d1bb90001
0119858d5959001816763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594b
b08153205c58b9020f020d4544b9020e020d45445958b90470020f455258
b9020f04704459594bb0e453205c58b90020020e4544b90027020e454459
58b908420020455258b9002008424459594bb8012553205c58b90026020f
4544b90021020f45445958b90a0d0026455258b900260a0d4459594bb804
0153205c58b1d8204544b1202045445958b9250000d8455258b900d82500
4459594bb8040153205c58b9015800264544b1262645445958b923200158
455258b9015823204459594bb02953205c58b11f1f4544b12d1f45445958
b9010d001f455258b9001f010d4459594bb02f53205c58b11f1f4544b125
1f45445958b90135001f455258b9001f01354459594bb8030153205c58b1
1f1f4544b11f1f45445958b91428001f455258b9001f14284459592b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b65422b01b331757ec3456523456023456560234560b08b766818b08062
2020b17e754565234520b003266062636820b003266165b075236544b07e
234420b131c34565234520b003266062636820b003266165b0c3236544b0
312344b100c3455458b1c3406544b23140314523614459b33f3c58414565
23456023456560234560b089766818b080622020b1583c4565234520b003
266062636820b003266165b03c236544b058234420b13f414565234520b0
03266062636820b003266165b041236544b03f2344b10041455458b14140
6544b23f403f452361445945695342014b5058b108004259435c58b10800
4259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba04
0001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400
000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b
59b0102342b0112342002b2b2b2b2b2b2b2b00b01243584bb035514bb021
535a58b1262645b040614459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b737373737345b0406144180045694445694473737374737373747374
73742b2b2b2b2b2b2b2b2b2b2b2b00737373737373737373737373737373
737373737373737474747474747474747474747474747474747474747575
757374757575752b7300004bb02a534bb036515a58b1070745b040604459
004bb02e534bb036515a58b1030345b0406044b1090945b8ffc06044592b
4569440174007373732b4569442b012b435c58400a0006000702a006a007
02b9ffc00274b31a1d326fbd0277007f02770002ffc00277b22f3132b9ff
c00277b322253240b80274b32f353240b80274b3282a3240b80274b21a21
32b8ffc0b3371a1d32b8ffc0b3251a1d32b8ffc040112d1a1d329025902d
9037a025a02da03706b8ffc0b6a61a1d321fa61fb8028eb22fa60300742b
732b2b2b2b2b2b2b2b742b737459002b2b435c58b9ffc002a1b21c1d32b9
ffc002a0b21c1d322b2b592b73012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b012b2b2b2b2b2b2b73742b2b2b2b2b2b2b2b73732b2b2b
2b2b2b732b732b2b2b742b2b2b73737373732b73732b2b2b73002b2b2b2b
7374732b732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b73
74752b2b7373732b2b2b2b0000>
[16305 16261 15909 16305 15949 16197 16317 16321 16149 15449 16101 15749 16289
16297 13279 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> Arial-BoldMT AddT42Char 
1 3292 16 <000100410187026902a00003003240213001400102013700000310032003
30030403440510002000300003001904a56c182b4e10e45d4d10e65d002f
ed5d31301311211141022801870119fee700>Arial-BoldMT AddT42Char 
2 1768 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>Arial-BoldMT AddT42Char 
2 4502 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>Arial-BoldMT AddT42Char 
2 4976 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>Arial-BoldMT AddT42Char 
2 6552 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>Arial-BoldMT AddT42Char 
2 8496 92 <0001000efe510452042600130134b41228050113b8ffe040180c0f340816
0d0f3407160d0f3406160d0f3405160c0f3402b8ffc0401f1a3a34050606
040d0b0e061002001306041302040303010100061360100110b801af4012
0b0f0d2f0e280020153015601503f0150115b8ffc0b322263415b8ffc040
121c1e341517171a043903401819347f030103b80127400902401819347f
020102b801274012013900401c36342000300002001914c4a0182b4e10f4
5d2b4dfd19f45d2bf45d2b18fd4e456544e62b2b71724d10f4e4003fed5d
2f3f3c103c103c0112391139001112391239391139070e103c3130002b01
2b2b2b2b2b5d4bb010534bb03a515a58b2041000bafff00001fff0b10310
013838383859435c58b90005ffe8400e0d113f131013193f131012183f05
b8fff0b313193f05b8fff0b212183f012b2b2b2b2b59132113132101070e
032322272716333236370e012bfef80123fe89432543577f50514e194235
625e190426fd0e02f2fc02b95d623d2211dc0d735900>Arial-BoldMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/space 3 def
/hyphen 16 def
/e 72 def
/n 81 def
/p 83 def
/t 87 def
/y 92 def
end
Arial-BoldMT /Encoding get
dup 32 /space put
dup 45 /hyphen put
dup 101 /e put
dup 110 /n put
dup 112 /p put
dup 116 /t put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/DIAWEJ+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/DIAWEJ+Arial-BoldMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 55{/.notdef}rp /e 8{/.notdef}rp /n 
/.notdef /p 3{/.notdef}rp /t 4{/.notdef}rp /y 134{/.notdef}rp]
DIAWEJ+Arial-BoldMT nf
DIAWEJ+Arial-BoldMT*1 [27.984 0 0 -27.984 0 0 ]msf
107.57 35.02 mo
(n)sh
124.61 35.02 mo
(-)sh
133.97 35.02 mo
(type)
[9.31847 15.2793 17.098 0 ]xsh
191.21 35.02 mo
( )sh
531.35 44.95 mo
669.35 44.95 li
669.35 4.07501 li
531.35 4.07501 li
cp
1 .866178 .330022 .22681 cmyk
ef
.0619821 0 .965148 0 cmyk
DIAWEJ+Arial-BoldMT*1 [27.984 0 0 -27.984 0 0 ]msf
558.6 34.97 mo
(p)sh
575.64 34.97 mo
(-)sh
585 34.97 mo
(type)
[9.31848 15.2792 17.098 0 ]xsh
642.26 34.97 mo
( )sh
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e4d8f5000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966631894da0000871c00002af268656164e625fe3d00000f640000
0036686865610dad078400000f9c00000024686d74789579112500000fc0
000026ca6c6f63610bf902d10000368c00001e466d617870212d24a10000
54d4000000206e616d65267651f4000054f400000e16707265706baf02fe
0000630c00002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
201d0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb80335747e5f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000443040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac044400610000
000000000000000000000000000000000000000000000000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000045800ac00000000000000000000000003ad
004700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000048a002200000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000000000002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000039d002200000000000000000000000000000000000000000000
0000039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000022400bb0000000000000000000000000000
00000000000000000000000000000359002b000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
027300450000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000040e00ae040e0072040e0067040e0030040e
006500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003fc004600000000000000000000000003fc005e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a1015701d401d401d401d4
01d401d401d401d401d401d4025002500250025002500250025002500250
025002b902b902b902b902b902b902b902b902b902b902b902b902b902b9
02b902b902b902b902b902b902b902b902b902b902b902b902b902b902b9
02b903660366036603660366036603660366036603660366036603660366
0366036603660366036603df03df03df048a048a048a048a055c055c055c
055c055c055c055c055c055c055c055c055c055c055c055c055c055c055c
055c055c055c05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce067d067d067d067d
067d067d067d067d067d067d067d067d067d067d07090709070907090709
0709070907090709070907a007a007a007a0084108410841084108410841
084108410841084108410841084108410841084108410841084108410841
084108410841084108410841084108410841084108410841084108410841
08410841084108410841084108410841084108410841084108410841092e
092e092e092e092e092e092e092e092e092e09b209b209b20a2b0a2b0a2b
0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b
0a6e0a6e0a6e0a6e0a6e0a6e0b4f0be00be00be00be00be00be00be00c6e
0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0d050d050d050d7e
0d7e0d7e0d7e0e440e440e440e440e440e440e440e440e440e440ec00ec0
0ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec0
0ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec0
0ec00ec00ec00ec00ec00ec00f770f770f770f770f770f770f770fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc10211021102110211021
102110211021102110211021102110211069106910691069106910691069
106910c110c110c110c110c110c110c110c110c110c110c110c110c110c1
10c110c110c110c110c110e410e410e410e410e410e410e410e410e410e4
10e410e410e410e410e410e410e410e410e410e410e410e410e410e410e4
10e410e410e410e410e410e410e410e410e410e410e410e4112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a11e112811375143a14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef153e153e
153e153e1579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579000000010000
0f22006000050000000000020010002f0065000011902410000000000000
002d02220000000300000000006400000000000300000001000e00640000
000300000002000e03040000000300000003003003120000000300000004
000e00640000000300000005001803420000000300000006000e00640000
00030000000700fa035a0000000300000008002a03d00000000300000009
00200454000000030000000a02a00064000000030000000b005604740000
00030000000c002a04ca000000030000000d029804f4000000030000000e
006c078c0001000000000000003207f800010000000000010007082a0001
0000000000020007097a0001000000000003001809810001000000000004
0007082a0001000000000005000c099900010000000000060007082a0001
000000000007007d09a50001000000000008001509e00001000000000009
00100a22000100000000000a0150082a000100000000000b002b0a320001
00000000000c00150a5d000100000000000d014c0a72000100000000000e
00360bbe0003000104090000006400000003000104090001000e00640003
000104090002000e03040003000104090003003003120003000104090004
000e00640003000104090005001803420003000104090006000e00640003
00010409000700fa035a0003000104090008002a03d00003000104090009
00200454000300010409000a02a00064000300010409000b005604740003
00010409000c002a04ca000300010409000d029804f4000300010409000e
006c078c00a9002000320030003000380020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e00430061006c00690062007200690020
00690073002000610020006d006f006400650072006e002000730061006e
0073002000730065007200690066002000660061006d0069006c00790020
007700690074006800200073007500620074006c006500200072006f0075
006e00640069006e006700730020006f006e0020007300740065006d0073
00200061006e006400200063006f0072006e006500720073002e00200049
00740020006600650061007400750072006500730020007200650061006c
0020006900740061006c006900630073002c00200073006d0061006c006c
00200063006100700073002c00200061006e00640020006d0075006c0074
00690070006c00650020006e0075006d006500720061006c002000730065
00740073002e0020004900740073002000700072006f0070006f00720074
0069006f006e007300200061006c006c006f007700200068006900670068
00200069006d007000610063007400200069006e00200074006900670068
0074006c007900200073006500740020006c0069006e006500730020006f
0066002000620069006700200061006e006400200073006d0061006c006c
0020007400650078007400200061006c0069006b0065002e002000430061
006c0069006200720069002700730020006d0061006e0079002000630075
007200760065007300200061006e006400200074006800650020006e0065
007700200072006100730074006500720069007300650072002000740065
0061006d00200075007000200069006e0020006200690067006700650072
002000730069007a0065007300200074006f002000720065007600650061
006c002000610020007700610072006d00200061006e006400200073006f
006600740020006300680061007200610063007400650072002e00520065
00670075006c00610072004d006900630072006f0073006f00660074003a
002000430061006c0069006200720069003a002000320030003000350056
0065007200730069006f006e00200035002e0036003200430061006c0069
006200720069002000690073002000650069007400680065007200200061
002000720065006700690073007400650072006500640020007400720061
00640065006d00610072006b0020006f0072002000610020007400720061
00640065006d00610072006b0020006f00660020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e00200069006e002000740068006500200055006e0069007400650064
002000530074006100740065007300200061006e0064002f006f00720020
006f007400680065007200200063006f0075006e00740072006900650073
002e004c007500630028006100730029002000640065002000470072006f
006f00740068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f006300740066006f006e00740073
0068007400740070003a002f002f0066006f006e00740066006100620072
0069006b002e0063006f006d0059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
00680065002000450055004c004100200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c007500640065006400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e0074002e00200059006f00750020006d
006100790020006f006e006c0079002000280069002900200065006d0062
006500640020007400680069007300200066006f006e007400200069006e
00200063006f006e00740065006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200065
006d00620065006400640069006e00670020007200650073007400720069
006300740069006f006e007300200069006e0063006c0075006400650064
00200069006e0020007400680069007300200066006f006e0074003b0020
0061006e006400200028006900690029002000740065006d0070006f0072
006100720069006c007900200064006f0077006e006c006f006100640020
007400680069007300200066006f006e007400200074006f002000610020
007000720069006e0074006500720020006f00720020006f007400680065
00720020006f007500740070007500740020006400650076006900630065
00200074006f002000680065006c00700020007000720069006e00740020
0063006f006e00740065006e0074002e0068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0066
006f006e00740073002f00640065006600610075006c0074002e00610073
00700078a92032303038204d6963726f736f667420436f72706f72617469
6f6e2e20416c6c205269676874732052657365727665642e43616c696272
692069732061206d6f6465726e2073616e732073657269662066616d696c
79207769746820737562746c6520726f756e64696e6773206f6e20737465
6d7320616e6420636f726e6572732e204974206665617475726573207265
616c206974616c6963732c20736d616c6c20636170732c20616e64206d75
6c7469706c65206e756d6572616c20736574732e204974732070726f706f
7274696f6e7320616c6c6f77206869676820696d7061637420696e207469
6768746c7920736574206c696e6573206f662062696720616e6420736d61
6c6c207465787420616c696b652e2043616c696272692773206d616e7920
63757276657320616e6420746865206e6577207261737465726973657220
7465616d20757020696e206269676765722073697a657320746f20726576
65616c2061207761726d20616e6420736f6674206368617261637465722e
526567756c61724d6963726f736f66743a2043616c696272693a20323030
3556657273696f6e20352e363243616c6962726920697320656974686572
206120726567697374657265642074726164656d61726b206f7220612074
726164656d61726b206f66204d6963726f736f667420436f72706f726174
696f6e20696e2074686520556e697465642053746174657320616e642f6f
72206f7468657220636f756e74726965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[10995 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> PBAAAA+Calibri AddT42Char 
2 10718 1085 <00010046006c03b60416002f0014b22a241eb8010cb20c0612002f33cdfd
cd33313001140e02232111140e0223222e02351121222e0235343e023321
11343e0233321e02151121321e0203b6060a0e08feb808111c15141d1108
feb8090d0a06060a0d08014908111d14151c11080149080d0b050240131b
1208fe94080b080505080b08016c08121b13121b1208016c080d09050509
0d08fe9408121b00>PBAAAA+Calibri AddT42Char 
2 8578 882 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>PBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/space 3 def
/plus 1085 def
/hyphen 882 def
end
PBAAAA+Calibri /Encoding get
dup 32 /space put
dup 43 /plus put
dup 45 /hyphen put
pop
end
%ADOEndSubsetFont
/DIAWEK+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/DIAWEK+Calibri*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 210{/.notdef}rp]
DIAWEK+Calibri nf
DIAWEK+Calibri*1 [32.04 0 0 -32.04 0 0 ]msf
234.94 48.65 mo
(+)sh
250.9 48.65 mo
( )sh
504.74 49.15 mo
(-)sh
514.58 49.15 mo
( )sh
72.001 180.85 mo
669.41 181.3 li
669.41 182.8 li
71.999 182.35 li
cp
663.77 177.89 mo
670.88 182.05 li
663.76 186.19 li
663.41 186.4 662.95 186.28 662.74 185.92 cv
662.53 185.56 662.65 185.1 663.01 184.89 cv
669.01 181.4 li
669.01 182.69 li
663.01 179.19 li
662.66 178.98 662.54 178.52 662.74 178.16 cv
662.95 177.81 663.41 177.69 663.77 177.89 cv
cp
0 .490333 .803677 0 cmyk
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 936 28 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>PBAAAA+Calibri AddT42Char 
2 1184 38 <000100acfffa0354050e0027005cb10713b8ffe8b310014d13b8fff0b30f
014d13b8fff0b30d014d13b8fff6b30c014d13b8ffe8b30b014d13b80211
b50d1d001e1d07b8010cb313131906b80128b322511955003f3fed12392f
ed012f2fc41139e12b2b2b2b2b32313001140e0223211121321e0215140e
02232111140e0223222e02351134363321321e020354040a0d07fe2601c0
070d0a04040a0d07fe400814201a1822140829170246070d0a0404c4131c
1108fe4807101b15131b1109fde5070d070505070d0704ae271f08121d00
>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/E 28 def
/F 38 def
end
PBAAAA+Calibri /Encoding get
dup 69 /E put
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DIAWEK+Calibri*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 23{/.notdef}rp /E 
/F 185{/.notdef}rp]
DIAWEK+Calibri nf
DIAWEK+Calibri*1 [18 0 0 -18 0 0 ]msf
636.6 174.86 mo
(E)sh
DIAWEK+Calibri*1 [12 0 0 -12 0 0 ]msf
645.36 179.3 mo
(F)sh
650.88 179.3 mo
( )sh
.75 lw
60 291.414 mo
55.029 291.414 51 290.742 51 289.914 cv
51 232.17 li
51 231.34 46.971 230.67 42 230.67 cv
46.971 230.67 51 229.99 51 229.17 cv
51 171.42 li
51 170.59 55.029 169.92 60 169.92 cv
.740688 .455604 .0273442 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 322 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>PBAAAA+Calibri AddT42Char 
2 686 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>PBAAAA+Calibri AddT42Char 
2 2744 115 <00010022fffa046805140024006e401d24080b014d2824011a080b014d26
1a01281701260d012c19012c180119b8ffe8b40f10014c19b8ffe8b40c0d
014c18b8ffe8b40f10014c18b8ffe840120c0d014c1918191826251f5218
0512520555003f3f12393f11120139392f2f2b2b2b2b3130005d5d015d5d
5d2b5d2b250e0323222e0427012626363633321e02170133013e03333216
16060702b7040e19271d162118110c0703fe5908011228221c2112090401
73010169030814241e1f240d03081e0b0e0803010405080b0804b2161b0e
0403080d0afbbf043f0b0e0803050e1b1600>PBAAAA+Calibri AddT42Char 
2 3322 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+Calibri AddT42Char 
2 3904 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+Calibri AddT42Char 
2 4226 336 <00030035fe93038903c8003e004e005f00d04015122d47100f014d47080c
014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d3fb8ffe0
b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707b8ffe0b3
10014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040340b014d
0058100f014d58201012014c582a25400b12014c250f300703384ada0c53
e81515603803e93c482a2042d9384a5bd9204f003fed3fed12393fed1112
392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b1112173910
cd2b10cd2b2b2b10cd2b2b2b10cd31300114062323161615140e02232226
27060615141617171e0315140e0223222e0235343e023726263534363726
2635343e023332161721321601342623220e0215141633323e0213342627
270e0315141633323e020389130f81231c325d804e37631b12174136eb43
70522e346ba6716d99622c10213120312f32251f24345c814c29471f0110
1111fefe655d30472f17655b31482f17535f51e92029180984764b653e1b
0374231f24572f4e78532c1d16122e1e232e020a02213d593b3e70553125
405934213e383319194c2c3d6026255d424d7a542d090821fef15c672038
492859661f3748fd5e3a3f0208192d29281541431d303e00>PBAAAA+Calibri AddT42Char 
2 5206 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>PBAAAA+Calibri AddT42Char 
2 5790 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+Calibri AddT42Char 
2 6080 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PBAAAA+Calibri AddT42Char 
2 6666 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+Calibri AddT42Char 
2 6908 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PBAAAA+Calibri AddT42Char 
2 7304 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/B 17 def
/C 18 def
/V 115 def
/c 272 def
/e 286 def
/g 336 def
/l 367 def
/n 374 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
end
PBAAAA+Calibri /Encoding get
dup 66 /B put
dup 67 /C put
dup 86 /V put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DIAWEK+Calibri*1 
[32{/.notdef}rp /space 10{/.notdef}rp /plus /.notdef /hyphen 20{/.notdef}rp /B 
/C /.notdef /E /F 15{/.notdef}rp /V 12{/.notdef}rp /c 
/.notdef /e /.notdef /g 4{/.notdef}rp /l /.notdef /n 
/o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
DIAWEK+Calibri nf
DIAWEK+Calibri*1 [18 0 0 -18 0 0 ]msf
19.2 233.5 mo
(E)sh
DIAWEK+Calibri*1 [12 0 0 -12 0 0 ]msf
27.96 237.94 mo
(g)sh
33.6 237.94 mo
( )sh
%ADOBeginSubsetFont: WGJAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /WGJAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e4d8f5000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966631894da0000871c00002af268656164e625fe3d00000f640000
0036686865610dad078400000f9c00000024686d74789579112500000fc0
000026ca6c6f63610bf902d10000368c00001e466d617870212d24a10000
54d4000000206e616d65267651f4000054f400000e16707265706baf02fe
0000630c00002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
201d0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb80335747e5f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000443040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac044400610000
000000000000000000000000000000000000000000000000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000045800ac00000000000000000000000003ad
004700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000048a002200000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000000000002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000039d002200000000000000000000000000000000000000000000
0000039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000022400bb0000000000000000000000000000
00000000000000000000000000000359002b000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
027300450000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000040e00ae040e0072040e0067040e0030040e
006500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003fc004600000000000000000000000003fc005e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a1015701d401d401d401d4
01d401d401d401d401d401d4025002500250025002500250025002500250
025002b902b902b902b902b902b902b902b902b902b902b902b902b902b9
02b902b902b902b902b902b902b902b902b902b902b902b902b902b902b9
02b903660366036603660366036603660366036603660366036603660366
0366036603660366036603df03df03df048a048a048a048a055c055c055c
055c055c055c055c055c055c055c055c055c055c055c055c055c055c055c
055c055c055c05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce067d067d067d067d
067d067d067d067d067d067d067d067d067d067d07090709070907090709
0709070907090709070907a007a007a007a0084108410841084108410841
084108410841084108410841084108410841084108410841084108410841
084108410841084108410841084108410841084108410841084108410841
08410841084108410841084108410841084108410841084108410841092e
092e092e092e092e092e092e092e092e092e09b209b209b20a2b0a2b0a2b
0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b
0a6e0a6e0a6e0a6e0a6e0a6e0b4f0be00be00be00be00be00be00be00c6e
0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0d050d050d050d7e
0d7e0d7e0d7e0e440e440e440e440e440e440e440e440e440e440ec00ec0
0ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec0
0ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec0
0ec00ec00ec00ec00ec00ec00f770f770f770f770f770f770f770fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc10211021102110211021
102110211021102110211021102110211069106910691069106910691069
106910c110c110c110c110c110c110c110c110c110c110c110c110c110c1
10c110c110c110c110c110e410e410e410e410e410e410e410e410e410e4
10e410e410e410e410e410e410e410e410e410e410e410e410e410e410e4
10e410e410e410e410e410e410e410e410e410e410e410e4112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a11e112811375143a14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef153e153e
153e153e1579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579000000010000
0f22006000050000000000020010002f0065000011902410000000000000
002d02220000000300000000006400000000000300000001000e00640000
000300000002000e03040000000300000003003003120000000300000004
000e00640000000300000005001803420000000300000006000e00640000
00030000000700fa035a0000000300000008002a03d00000000300000009
00200454000000030000000a02a00064000000030000000b005604740000
00030000000c002a04ca000000030000000d029804f4000000030000000e
006c078c0001000000000000003207f800010000000000010007082a0001
0000000000020007097a0001000000000003001809810001000000000004
0007082a0001000000000005000c099900010000000000060007082a0001
000000000007007d09a50001000000000008001509e00001000000000009
00100a22000100000000000a0150082a000100000000000b002b0a320001
00000000000c00150a5d000100000000000d014c0a72000100000000000e
00360bbe0003000104090000006400000003000104090001000e00640003
000104090002000e03040003000104090003003003120003000104090004
000e00640003000104090005001803420003000104090006000e00640003
00010409000700fa035a0003000104090008002a03d00003000104090009
00200454000300010409000a02a00064000300010409000b005604740003
00010409000c002a04ca000300010409000d029804f4000300010409000e
006c078c00a9002000320030003000380020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e00430061006c00690062007200690020
00690073002000610020006d006f006400650072006e002000730061006e
0073002000730065007200690066002000660061006d0069006c00790020
007700690074006800200073007500620074006c006500200072006f0075
006e00640069006e006700730020006f006e0020007300740065006d0073
00200061006e006400200063006f0072006e006500720073002e00200049
00740020006600650061007400750072006500730020007200650061006c
0020006900740061006c006900630073002c00200073006d0061006c006c
00200063006100700073002c00200061006e00640020006d0075006c0074
00690070006c00650020006e0075006d006500720061006c002000730065
00740073002e0020004900740073002000700072006f0070006f00720074
0069006f006e007300200061006c006c006f007700200068006900670068
00200069006d007000610063007400200069006e00200074006900670068
0074006c007900200073006500740020006c0069006e006500730020006f
0066002000620069006700200061006e006400200073006d0061006c006c
0020007400650078007400200061006c0069006b0065002e002000430061
006c0069006200720069002700730020006d0061006e0079002000630075
007200760065007300200061006e006400200074006800650020006e0065
007700200072006100730074006500720069007300650072002000740065
0061006d00200075007000200069006e0020006200690067006700650072
002000730069007a0065007300200074006f002000720065007600650061
006c002000610020007700610072006d00200061006e006400200073006f
006600740020006300680061007200610063007400650072002e00520065
00670075006c00610072004d006900630072006f0073006f00660074003a
002000430061006c0069006200720069003a002000320030003000350056
0065007200730069006f006e00200035002e0036003200430061006c0069
006200720069002000690073002000650069007400680065007200200061
002000720065006700690073007400650072006500640020007400720061
00640065006d00610072006b0020006f0072002000610020007400720061
00640065006d00610072006b0020006f00660020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e00200069006e002000740068006500200055006e0069007400650064
002000530074006100740065007300200061006e0064002f006f00720020
006f007400680065007200200063006f0075006e00740072006900650073
002e004c007500630028006100730029002000640065002000470072006f
006f00740068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f006300740066006f006e00740073
0068007400740070003a002f002f0066006f006e00740066006100620072
0069006b002e0063006f006d0059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
00680065002000450055004c004100200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c007500640065006400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e0074002e00200059006f00750020006d
006100790020006f006e006c0079002000280069002900200065006d0062
006500640020007400680069007300200066006f006e007400200069006e
00200063006f006e00740065006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200065
006d00620065006400640069006e00670020007200650073007400720069
006300740069006f006e007300200069006e0063006c0075006400650064
00200069006e0020007400680069007300200066006f006e0074003b0020
0061006e006400200028006900690029002000740065006d0070006f0072
006100720069006c007900200064006f0077006e006c006f006100640020
007400680069007300200066006f006e007400200074006f002000610020
007000720069006e0074006500720020006f00720020006f007400680065
00720020006f007500740070007500740020006400650076006900630065
00200074006f002000680065006c00700020007000720069006e00740020
0063006f006e00740065006e0074002e0068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0066
006f006e00740073002f00640065006600610075006c0074002e00610073
00700078a92032303038204d6963726f736f667420436f72706f72617469
6f6e2e20416c6c205269676874732052657365727665642e43616c696272
692069732061206d6f6465726e2073616e732073657269662066616d696c
79207769746820737562746c6520726f756e64696e6773206f6e20737465
6d7320616e6420636f726e6572732e204974206665617475726573207265
616c206974616c6963732c20736d616c6c20636170732c20616e64206d75
6c7469706c65206e756d6572616c20736574732e204974732070726f706f
7274696f6e7320616c6c6f77206869676820696d7061637420696e207469
6768746c7920736574206c696e6573206f662062696720616e6420736d61
6c6c207465787420616c696b652e2043616c696272692773206d616e7920
63757276657320616e6420746865206e6577207261737465726973657220
7465616d20757020696e206269676765722073697a657320746f20726576
65616c2061207761726d20616e6420736f6674206368617261637465722e
526567756c61724d6963726f736f66743a2043616c696272693a20323030
3556657273696f6e20352e363243616c6962726920697320656974686572
206120726567697374657265642074726164656d61726b206f7220612074
726164656d61726b206f66204d6963726f736f667420436f72706f726174
696f6e20696e2074686520556e697465642053746174657320616e642f6f
72206f7468657220636f756e74726965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[10995 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3904 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>WGJAAA+Calibri AddT42Char 
2 4700 346 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>WGJAAA+Calibri AddT42Char 
2 5206 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>WGJAAA+Calibri AddT42Char 
2 6080 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>WGJAAA+Calibri AddT42Char 
2 6908 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>WGJAAA+Calibri AddT42Char 
2 8402 863 <0002002b037702d10578001b0037000db40b27173347003f33cd32313001
140e0207070e032322262634371335343e0233321e0205140e0207070e03
23222e02371335343e0233321e0202d1060d171088040d12181210150b03
840a1723191723160bfe9a060d171088040d12181210160a0104840a1723
191822160b05271f332e2d18cd080b070403080c0901117f1a2011060611
201a1f332e2d18cd080b070403080c0901117f1a201106061120>WGJAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>WGJAAA+Calibri AddT42Char 
WGJAAA+Calibri /CharStrings get begin
/e 286 def
/h 346 def
/l 367 def
/o 381 def
/s 400 def
/quotedblright 863 def
end
WGJAAA+Calibri /Encoding get
dup 101 /e put
dup 104 /h put
dup 108 /l put
dup 111 /o put
dup 115 /s put
dup 148 /quotedblright put
pop
end
%ADOEndSubsetFont
/DIAWEL+Calibri /WGJAAA+Calibri findfont ct_VMDictPut
/DIAWEL+Calibri*1 
[101{/.notdef}rp /e 2{/.notdef}rp /h 3{/.notdef}rp /l 2{/.notdef}rp /o 
3{/.notdef}rp /s 32{/.notdef}rp /quotedblright 107{/.notdef}rp]
DIAWEL+Calibri nf
DIAWEL+Calibri*1 [18 0 0 -18 0 0 ]msf
454.56 233.5 mo
(\224holes\224)
[7.52399 9.504 9.48587 4.06796 8.96402 7.09222 0 ]xsh
/DIAWEL+Calibri*1 uf
/DIAWEL+Calibri uf
/WGJAAA+Calibri uf
/DIAWEJ+Arial-BoldMT*1 uf
/DIAWEJ+Arial-BoldMT uf
/Arial-BoldMT uf
/DIAWEK+Calibri*1 uf
/DIAWEK+Calibri uf
/PBAAAA+Calibri uf
%ADOBeginSubsetFont: PBAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f32f9e4d8f5000000cc000000606376
7420b09bc4d20000012c0000051c6670676df6f64d0c000006480000091a
676c7966631894da0000871c00002af268656164e625fe3d00000f640000
0036686865610dad078400000f9c00000024686d74789579112500000fc0
000026ca6c6f63610bf902d10000368c00001e466d617870212d24a10000
54d4000000206e616d65267651f4000054f400000e16707265706baf02fe
0000630c00002410676469720000000000000000000000000003042b0190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204e10002ff4000acff00000009000000004d53202000400000
201d0600fe0001c4079e02262000019f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
05e4000e0041000005ba009c009c005e005e4047645f5e5d5c5b5a595855
54535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a393837
36352f2e2d2c2826252423221f181411100f0d0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b0042651582320b00d44235921212d2c202045
18684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c
00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228453ab1
0200080d2d2c2045b00325456164b050515845441b2121592d2c2045b000
4360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8c
b8100062602b0c642364615c58b00361592d2c8a03458a8a87b0112bb029
2344b0297ae4182d2c4565b02c234445b02b23442d2c4b525845441b2121
592d2c01b005251023208af500b0016023edec2d2c01b005251023208af5
00b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c003c
2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4523456023456023456023766818b08062
202d2cb00426b00426b00425b0042545234520b003266062636820b00326
61658a2344442d2c2045b0005458b040442045b04061441b2121592d2c45
b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b212159
2d2c4b515820b0032545695358441b2121591b2121592d2c45b01443b000
6063b0016069442d2cb02f45442d2c452320458a60442d2c45234560442d
2c4b235158b90033ffe0b134201bb3330034005944442d2cb0164358b003
26458a586466b01f601b64b020606620581b21b04059b001615923586559
b02923442310b029e01b2121212121592d2cb0164358b004254564b02060
6620581b21b04059b0016123586559b0292344b00425b00725082058021b
0359b0052510b004252046b0042523423cb0072510b006252046b00425b0
016023423c2058011b0059b0052510b00425b029e0b0072510b00625b029
e0b00425b00725082058021b0359b00425b003254348b00625b00325b001
6043481b2159212121212121212d2cb0164358b004254564b02060662058
1b21b04059b0016123581b6559b0292344b00525b00825082058021b0359
b0042510b005252046b0042523423cb00425b0072508b0072510b0062520
46b00425b0016023423c2058011b0059b0042510b00525b029e0b0292045
6544b0072510b00625b029e0b00525b00825082058021b0359b00525b003
254348b00425b0072508b00625b00325b0016043481b2159212121212121
212d2c02b00425202046b004252342b0052508b003254548212121212d2c
02b0032520b0042508b0022543482121212d2c452320451820b000502058
23652359236820b040505821b04059235865598a60442d2c4b53234b515a
5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b
515a58381b2121592d2cb000214b5458381b2121592d2cb002435458b046
2b1b21212121592d2cb002435458b0472b1b212121592d2cb002435458b0
482b1b21212121592d2cb002435458b0492b1b212121592d2c208a08234b
538a4b515a5823381b2121592d2c0020b200400325b0062649618b381234
2d2c014623466023466123201020468a61b8ff80628ab140408a70456068
3a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2cb01200
4b014b54422d2cb1020042b123018851b1400188535a58b9100000208854
58b202010243604259b12401885158b920000040885458b2020202436042
b12401885458b2022002436042004b014b5258b2020802436042591bb940
000080885458b202040243604259b94000008063b80100885458b2020802
43604259b94000010063b80200885458b202100243604259b94000020063
b80400885458b202400243604259595959592d2c451868234b5158232045
2064b04050587c59688a6059442d2cb00016b00225b0022501b001233e00
b002233eb10102060cb00a236542b00b234201b001233f00b002233fb101
02060cb006236542b0072342b00116012d2c20b82000628a6023622d2cb0
072558001b0159b0042510b00325b0022520b8ffff545821cd1bed5921b0
06255cb006255a58b0092b5920b005254ab0042547b004254760b0062547
b0806361b00225b0005558b00325b00725496359b0082558001b0159b004
25b0062549b009255cb009255a58b0092b59b0072546b0806361b0032520
b0005558631b2159612320b0005558b080631b21b08059b0592bb006255c
586959b00425202010b00048233ab0062658001b0159b0052658b003252f
598a12233221212d2cb00625b00a2587b00625b009254ab0005358b00625
b00a251bb00925b0072559b00225b00225070cb005256323b00625636020
b94000040063535821b00426b00426b00a1bb94000040063655158b00426
65b0042665b00a1bb00426b00426b000b00325b003250b0d0ab0092eb007
25b007250b0d0ab00b2eb00525b0052507595920b0005558b00525b00525
87b00725b007250bb0092510b00b25b0092620b8ffff545821cd1bed59b0
0525b0052507b00825b00b254923b00625b0062587b00a2510b00b25c159
20b00051b800522378b00161b00225b00725b0072507b00a25b00d254961
b08062b00525b005250bb00a252338b00625b0062587b00825b008250bb0
0a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ffa72379
2121212121212121212121212d2c23b0005458b9400000001bb900004000
598ab0005458b9400000001bb90000400059b05b2b2d2c08b0005458b940
0000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940000000
1bb90000400059b05b2b2d2cb00426b00426080db00426b00426080db05b
2b2d2c204569442d00000001000000059eb80335747e5f0f3cf500190800
00000000bbeb7ccc00000000c522987afbfafd8b09ec07b6000000090002
000000000000000100000600fe0001c40aa0fbfafaa009ec000100000000
000000000000000000000443040e0000000000000000000001cf00000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000045a00ac044400610000
000000000000000000000000000000000000000000000000000000000000
0000000003e800ac00000000000000000000000000000000000000000000
000000000000000000000000000003ad00ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000006d700ac000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
042200ac0000000000000000045800ac00000000000000000000000003ad
004700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000048a002200000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000003d5005c0000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000362005a000000000000
000000000000000000000000000000000000000000000000000000000000
0434006000000000000000000000000003fb005d00000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000003c400350000000000000000000000000000000000000000
0000000000000000000000000000000004340099000000000000000001d6
008500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000001d6009900000000000000000000000000000000
000000000664009904340099000000000000000000000000000000000000
0000000000000438005a0000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000043400990000
00000000000002ca00990000000000000000000000000321005100000000
000000000000000000000000000000000000000000000000000000000000
000002ae0021000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000039d002200000000000000000000000000000000000000000000
0000039f0022000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000029b010a000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000022400bb0000000000000000000000000000
00000000000000000000000000000359002b000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
027300450000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000335
008b00000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000040e00ae040e0072040e0067040e0030040e
006500000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000003fc004600000000000000000000000003fc005e0000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000a100a100a100a100a100a100a1
00a100a100a100a100a100a100a100a100a100a1015701d401d401d401d4
01d401d401d401d401d401d4025002500250025002500250025002500250
025002b902b902b902b902b902b902b902b902b902b902b902b902b902b9
02b902b902b902b902b902b902b902b902b902b902b902b902b902b902b9
02b903660366036603660366036603660366036603660366036603660366
0366036603660366036603df03df03df048a048a048a048a055c055c055c
055c055c055c055c055c055c055c055c055c055c055c055c055c055c055c
055c055c055c05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce
05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce05ce067d067d067d067d
067d067d067d067d067d067d067d067d067d067d07090709070907090709
0709070907090709070907a007a007a007a0084108410841084108410841
084108410841084108410841084108410841084108410841084108410841
084108410841084108410841084108410841084108410841084108410841
08410841084108410841084108410841084108410841084108410841092e
092e092e092e092e092e092e092e092e092e09b209b209b20a2b0a2b0a2b
0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b0a2b
0a6e0a6e0a6e0a6e0a6e0a6e0b4f0be00be00be00be00be00be00be00c6e
0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0c6e0d050d050d050d7e
0d7e0d7e0d7e0e440e440e440e440e440e440e440e440e440e440ec00ec0
0ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec0
0ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec00ec0
0ec00ec00ec00ec00ec00ec00f770f770f770f770f770f770f770fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc
0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc0fdc10211021102110211021
102110211021102110211021102110211069106910691069106910691069
106910c110c110c110c110c110c110c110c110c110c110c110c110c110c1
10c110c110c110c110c110e410e410e410e410e410e410e410e410e410e4
10e410e410e410e410e410e410e410e410e410e410e410e410e410e410e4
10e410e410e410e410e410e410e410e410e410e410e410e4112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a112a112a112a112a112a112a112a
112a112a112a112a112a112a112a112a11e112811375143a14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef
14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef14ef153e153e
153e153e1579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579157915791579
157915791579157915791579157915791579157915791579000000010000
0f22006000050000000000020010002f0065000011902410000000000000
002d02220000000300000000006400000000000300000001000e00640000
000300000002000e03040000000300000003003003120000000300000004
000e00640000000300000005001803420000000300000006000e00640000
00030000000700fa035a0000000300000008002a03d00000000300000009
00200454000000030000000a02a00064000000030000000b005604740000
00030000000c002a04ca000000030000000d029804f4000000030000000e
006c078c0001000000000000003207f800010000000000010007082a0001
0000000000020007097a0001000000000003001809810001000000000004
0007082a0001000000000005000c099900010000000000060007082a0001
000000000007007d09a50001000000000008001509e00001000000000009
00100a22000100000000000a0150082a000100000000000b002b0a320001
00000000000c00150a5d000100000000000d014c0a72000100000000000e
00360bbe0003000104090000006400000003000104090001000e00640003
000104090002000e03040003000104090003003003120003000104090004
000e00640003000104090005001803420003000104090006000e00640003
00010409000700fa035a0003000104090008002a03d00003000104090009
00200454000300010409000a02a00064000300010409000b005604740003
00010409000c002a04ca000300010409000d029804f4000300010409000e
006c078c00a9002000320030003000380020004d006900630072006f0073
006f0066007400200043006f00720070006f0072006100740069006f006e
002e00200041006c006c0020005200690067006800740073002000520065
007300650072007600650064002e00430061006c00690062007200690020
00690073002000610020006d006f006400650072006e002000730061006e
0073002000730065007200690066002000660061006d0069006c00790020
007700690074006800200073007500620074006c006500200072006f0075
006e00640069006e006700730020006f006e0020007300740065006d0073
00200061006e006400200063006f0072006e006500720073002e00200049
00740020006600650061007400750072006500730020007200650061006c
0020006900740061006c006900630073002c00200073006d0061006c006c
00200063006100700073002c00200061006e00640020006d0075006c0074
00690070006c00650020006e0075006d006500720061006c002000730065
00740073002e0020004900740073002000700072006f0070006f00720074
0069006f006e007300200061006c006c006f007700200068006900670068
00200069006d007000610063007400200069006e00200074006900670068
0074006c007900200073006500740020006c0069006e006500730020006f
0066002000620069006700200061006e006400200073006d0061006c006c
0020007400650078007400200061006c0069006b0065002e002000430061
006c0069006200720069002700730020006d0061006e0079002000630075
007200760065007300200061006e006400200074006800650020006e0065
007700200072006100730074006500720069007300650072002000740065
0061006d00200075007000200069006e0020006200690067006700650072
002000730069007a0065007300200074006f002000720065007600650061
006c002000610020007700610072006d00200061006e006400200073006f
006600740020006300680061007200610063007400650072002e00520065
00670075006c00610072004d006900630072006f0073006f00660074003a
002000430061006c0069006200720069003a002000320030003000350056
0065007200730069006f006e00200035002e0036003200430061006c0069
006200720069002000690073002000650069007400680065007200200061
002000720065006700690073007400650072006500640020007400720061
00640065006d00610072006b0020006f0072002000610020007400720061
00640065006d00610072006b0020006f00660020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e00200069006e002000740068006500200055006e0069007400650064
002000530074006100740065007300200061006e0064002f006f00720020
006f007400680065007200200063006f0075006e00740072006900650073
002e004c007500630028006100730029002000640065002000470072006f
006f00740068007400740070003a002f002f007700770077002e006d0069
00630072006f0073006f00660074002e0063006f006d002f007400790070
006f006700720061007000680079002f006300740066006f006e00740073
0068007400740070003a002f002f0066006f006e00740066006100620072
0069006b002e0063006f006d0059006f00750020006d0061007900200075
007300650020007400680069007300200066006f006e0074002000610073
0020007000650072006d0069007400740065006400200062007900200074
00680065002000450055004c004100200066006f00720020007400680065
002000700072006f006400750063007400200069006e0020007700680069
006300680020007400680069007300200066006f006e0074002000690073
00200069006e0063006c007500640065006400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e0074002e00200059006f00750020006d
006100790020006f006e006c0079002000280069002900200065006d0062
006500640020007400680069007300200066006f006e007400200069006e
00200063006f006e00740065006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200065
006d00620065006400640069006e00670020007200650073007400720069
006300740069006f006e007300200069006e0063006c0075006400650064
00200069006e0020007400680069007300200066006f006e0074003b0020
0061006e006400200028006900690029002000740065006d0070006f0072
006100720069006c007900200064006f0077006e006c006f006100640020
007400680069007300200066006f006e007400200074006f002000610020
007000720069006e0074006500720020006f00720020006f007400680065
00720020006f007500740070007500740020006400650076006900630065
00200074006f002000680065006c00700020007000720069006e00740020
0063006f006e00740065006e0074002e0068007400740070003a002f002f
007700770077002e006d006900630072006f0073006f00660074002e0063
006f006d002f007400790070006f006700720061007000680079002f0066
006f006e00740073002f00640065006600610075006c0074002e00610073
00700078a92032303038204d6963726f736f667420436f72706f72617469
6f6e2e20416c6c205269676874732052657365727665642e43616c696272
692069732061206d6f6465726e2073616e732073657269662066616d696c
79207769746820737562746c6520726f756e64696e6773206f6e20737465
6d7320616e6420636f726e6572732e204974206665617475726573207265
616c206974616c6963732c20736d616c6c20636170732c20616e64206d75
6c7469706c65206e756d6572616c20736574732e204974732070726f706f
7274696f6e7320616c6c6f77206869676820696d7061637420696e207469
6768746c7920736574206c696e6573206f662062696720616e6420736d61
6c6c207465787420616c696b652e2043616c696272692773206d616e7920
63757276657320616e6420746865206e6577207261737465726973657220
7465616d20757020696e206269676765722073697a657320746f20726576
65616c2061207761726d20616e6420736f6674206368617261637465722e
526567756c61724d6963726f736f66743a2043616c696272693a20323030
3556657273696f6e20352e363243616c6962726920697320656974686572
206120726567697374657265642074726164656d61726b206f7220612074
726164656d61726b206f66204d6963726f736f667420436f72706f726174
696f6e20696e2074686520556e697465642053746174657320616e642f6f
72206f7468657220636f756e74726965732e4c7563286173292064652047
726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d2f74
79706f6772617068792f6374666f6e7473687474703a2f2f666f6e746661
6272696b2e636f6d596f75206d617920757365207468697320666f6e7420
6173207065726d6974746564206279207468652045554c4120666f722074
68652070726f6475637420696e207768696368207468697320666f6e7420
697320696e636c7564656420746f20646973706c617920616e6420707269
6e7420636f6e74656e742e20596f75206d6179206f6e6c79202869292065
6d626564207468697320666f6e7420696e20636f6e74656e742061732070
65726d69747465642062792074686520656d62656464696e672072657374
72696374696f6e7320696e636c7564656420696e207468697320666f6e74
3b20616e6420286969292074656d706f726172696c7920646f776e6c6f61
64207468697320666f6e7420746f2061207072696e746572206f72206f74
686572206f75747075742064657669636520746f2068656c70207072696e
7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f6674
2e636f6d2f7479706f6772617068792f666f6e74732f64656661756c742e
61737078000000>
<b2090320b80284b40918014a20b80283b40918014a20b80282b40918014a
20b80281b40918014a20b80280b40918014a20b8027fb40918014a20b802
7eb40918014a20b8027db40918014a20b8027cb40918014a20b8027bb409
18014a20b8027ab40918014a20b80279b40918014a20b80278b40918014a
20b80277b40918014a20b80276b40918014a20b80275b40918014a20b802
74b40918014a20b80273b40918014a20b80271b40918014a20b80270b409
18014a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a
20b8026cb40918014a20b8026bb40918014a20b8026ab40918014a20b802
69b40918014a20b80268b40918014a20b80267b40918014a20b80266b409
18014a20b80265b40918014a20b80264b40918014a20b80263b40918014a
20b80262b40918014a20b80261b40918014a20b80260b40918014a20b802
5fb40918014a20b8025eb40918014a20b8025db40918014a20b8025cb409
18014a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a
20b80258b40918014a20b80257b40918014a20b80256b40918014a20b802
55b40918014a20b80254b40918014a20b80253b40918014a20b80252b409
18014a20b80251b40918014a20b80250b40918014a20b8024fb40918014a
20b8024eb40918014a20b8024db40918014a20b8024cb40918014a20b802
4bb40918014a20b8024ab40918014a20b80249b40918014a20b80248b409
18014a20b80247b40918014a20b80246b40918014a20b80245b40918014a
20b80244b40918014a20b80243b40918014a20b80242b40918014a20b802
41b40918014a20b80240b40918014a20b8023fb40918014a20b8023eb409
18014a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a
20b8023ab40918014a20b80239b40918014a20b80238b40918014a20b802
37b40918014a20b80236b40918014a20b80235b40918014a20b80234b409
18014a20b80233b40918014a20b80232b40918014a20b80231b40918014a
20b80230b40918014a20b8022fb40918014a20b8022eb40918014a20b802
2db40918014a20b8022cb40918014a20b8022bb40918014a20b8022ab409
18014a20b80229b40918014a20b80228b40918014a20b80227b40918014a
20b80226b40918014a20b80225b40918014a20b80224b40918014a20b802
23b40918014a20b80222b40918014a20b80221b40918014a20b80220b409
18014a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a
20b8021cb40918014a20b8021bb40918014a20b8021ab40918014a20b802
19b40918014a20b80218b40918014a20b80217b40918014a20b80216b409
18014a20b80215b40918014a20b80214b40918014a20b80213b40918014a
20b80212b40918014a20b80211b40918014a20b80210b40918014a20b802
0fb40918014a20b8020eb40918014a20b8020db40918014a20b8020cb409
18014a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a
20b80208b40918014a20b80207b40918014a20b80206b40918014a20b802
05b40918014a20b80204b40918014a20b80203b40918014a20b80202b409
18014a20b80201b40918014a20b80200b40918014a20b801ffb40918014a
20b801feb40918014a20b801fdb40918014a20b801fcb40918014a20b801
fbb40918014a20b801fab40918014a20b801f9b40918014a20b801f8b409
18014a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a
20b801f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801
f1b40918014a20b801f0b40918014a20b801efb40918014a20b801eeb409
18014a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a
20b801eab40918014a20b801e9b40918014a20b801e8b40918014a20b801
e7b40918014a20b801e6b40918014a20b801e5b40918014a20b801e4b409
18014a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a
20b801e0b40918014a20b801dfb40918014a20b801deb40918014a20b801
ddb40918014a20b801dcb40918014a20b801dbb40918014a20b801dab409
18014a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a
20b801d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801
d3b40918014a20b801d2b40918014a20b801d1b40918014a20b801d0b409
18014a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a
20b801ccb40918014a20b801cbb40918014a20b801cab40918014a20b801
c9b40918014a20b801c8b40918014a20b801c7b40918014a20b801c6b409
18014a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a
20b801c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801
bfb40918014a20b801beb40918014a20b801bdb40918014a20b801bcb409
18014a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a
20b801b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801
b5b40918014a20b801b4b40918014a20b801b3b40918014a20b801b2b409
18014a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a
20b801aeb40918014a20b801adb40918014a20b801acb40918014a20b801
abb40918014a20b801aab40918014a20b801a9b40918014a20b801a8b409
18014a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a
20b801a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801
a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8019eb409
18014a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a
20b8019ab40918014a20b80199b40918014a20b80198b40918014a20b801
97b40918014a20b80196b40918014a20b80195b40918014a20b80194b409
18014a20b80193b40918014a20b80192b40918014a20b80191b40918014a
20b80190b40918014a20b8018fb40918014a20b8018eb40918014a20b801
8db40918014a20b8018cb40918014a20b8018bb40918014a20b8018ab409
18014a20b80189b40918014a20b80188b40918014a20b80187b40918014a
20b80186b40918014a20b80185b40918014a20b80184b40918014a20b801
83b40918014a20b80182b40918014a20b80181b40918014a20b80180b409
18014a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a
20b8017cb40918014a20b8017bb40918014a20b8017ab40918014a20b801
79b40918014a20b80178b40918014a20b80177b40918014a20b80176b409
18014a20b80175b40918014a20b80174b40918014a20b80173b40918014a
20b80172b40918014a20b80171b40918014a20b80170b40918014a20b801
6fb40918014a20b8016eb40918014a20b8016db40918014a20b8016cb409
18014a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a
20b80168b40918014a20b80167b40918014a20b80166b40918014a20b801
65b40918014a20b80164b40918014a20b80163b40918014a20b80162b409
18014a20b80161b40918014a20b80160b40918014a20b8015fb40918014a
20b8015eb40918014a20b8015db40918014a20b8015cb40918014a20b801
5bb40918014a20b8015ab40918014a20b80159b40918014a20b80158b409
18014a20b80157b40918014a20b80156b40918014a20b80155b40918014a
20b80154b40918014a20b80153b40918014a20b80152b40918014a20b801
50b40918014a20b8014fb40918014a20b8014eb40918014a20b8014cb409
18014a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a
20b80148b40918014a20b80147b40918014a20b80146b40918014a20b801
45b40918014a20b80144b40918014a20b80143b30918014ab80284b21e3e
1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8
027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027b
b21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d
431fb80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431f
b80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb802
6eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab2
1c451fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c44
1fb80265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb8
0261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025d
b21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c
451fb80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451f
b80254b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb802
50b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb2
1c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a
1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb8
0243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023f
b21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b
4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1f
b80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb802
32b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb2
1b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c
1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb8
0225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221
b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b
4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1f
b80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb802
14b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b2
1a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e
1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb8
0207b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203
b219501fb80202b219511fb80201b219511fb80200b219511fb801ffb219
511fb801feb219501fb801fdb219511fb801fcb219511fb801fbb219511f
b801fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801
f6b219511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b2
18541fb801f1b218541fb801f0b218531fb801efb218541fb801eeb21854
1fb801edb218541fb801ecb218531fb801ebb218531fb801eab218541fb8
01e9b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5
b218541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218
541fb801e0b218531fb801dfb218531fb801deb218541fb801ddb218541f
b801dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801
d8b218541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b2
17571fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b21756
1fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb8
01cbb217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7
b217571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217
561fb801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561f
b801beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801
bab217571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b2
17571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b
1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb8
01adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9
b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b216
5b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1f
b801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb801
9cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2
163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e
1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8
018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018b
b2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b216
5b1fb80186b215611fb80185b215621fb80184b215621fb80183b215661f
b80182b215661fb80181b215551fb80180b215451fb8017fb215361fb801
7eb215361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab2
15641fb80179b215661fb80178b215661fb80177b215661fb80176b21566
1fb80175b215661fb80174b215661fb80173b215451fb80172b215621fb8
0171b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016d
b215661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215
621fb80168b215621fb80167b215611fb80166b215641fb80165b215641f
b80164b215661fb80163b215661fb80162b215661fb80161b215661fb801
60b215661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb2
15451fb8015bb215361fb8015ab215611fb80159b215621fb80158b21562
1fb80157b215631fb80156b215641fb80155b215661fb80154b215661fb8
0153b215661fb80152b215661fb80151b214401fb80150b214551fb8014f
b214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214
401fb8014ab214411fb80149b214401fb80148b214401fb80147b214411f
b80146b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb801
42b212461fb80141b212461fb80140b212461fb8013fb212461fb8013eb2
12441fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b
1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb8
0135b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131
b211551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211
591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1f
b80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb801
24b211561fb80123b211571fb80122b211581fb80121b211591fb80120b2
115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b
1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb8
0117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113
b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb210
5f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1f
b8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb801
06b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2
105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641f
fc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f
641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641f
ed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e
671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681f
de0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d
311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1f
cf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d
6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f
40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741f
b90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c
741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1f
aa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b
7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f
9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b
7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f
8c0aa71f8503251f8403381f8301381f8255805581ab80557f557d557eab
7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a5579
55775578ab7755ba028600660285403c5576ab755504751475747503f475
01ab750144750130750102007510752075030c7455725573ab7255007250
728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c72
0d104671556f5570ab6f556e666d556a03251f6938675568ab6755663864
5565ab645563386255613860555f385d555eab5d555c385a555bab5a5559
3858555703251f5638545555ab54555338515552ab51554f384e554e0325
1f4d384b554cab4b554a38485549ab4855473846554503381f001c101c20
1c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc0
1b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018
292c460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3
164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f
15010f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff
0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f
0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f
0b02400b3f4346400b2d30460003012001010001100120010308b8ffc0b3
01151f46b80100b316010501b80190b154532b2b4bb80800524bb008505b
b00188b02553b00188b040515ab00688b000555a5b58b101018e59b10102
4354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a01d594bb0
805358b0401d594bb0ff5358b0001db1160042592b5e7375732b2b745e73
2b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b5e732b73
74755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f7373737374
2b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300640282
00640281006402800064027f0064027e0064027d0064027c0064027b0064
027a00640279006402780064027700640276006402750064027400640273
00640271006402700064026f0064026e0064026d0064026c0064026b0064
026a00640269006402680064026700640266006402650064026400640263
0064026200640261006402600064025f0064025e0064025d0064025c0064
025b0064025a006402590064025800640257006402560064025500640254
006402530064025200640251006402500064024f0064024e0064024d0064
024c0064024b0064024a0064024900640248006402470064024600640245
00640244006402430064024200640241006402400064023f0064023e0064
023d0064023c0064023b0064023a00640239006402380064023700640236
0064023500640234006402330064023200640231006402300064022f0064
022e0064022d0064022c0064022b0064022a006402290064022800640227
006402260064022500640224006402230064022200640221006402200064
021f0064021e0064021d0064021c0064021b0064021a0064021900640218
006402170064021600640215006402140064021300640212006402110064
02100064020f0064020e0064020d0064020c0064020b0064020a00640209
006402080064020700640206006402050064020441ff0064020300640202
0064020100640200006401ff006401fe006401fd006401fc006401fb0064
01fa006401f9006401f8006401f7006401f6006401f5006401f4006401f3
006401f2006401f1006401f0006401ef006401ee006401ed006401ec0064
01eb006401ea006401e9006401e8006401e7006401e6006401e5006401e4
006401e3006401e2006401e1006401e0006401df006401de006401dd0064
01dc006401db006401da006401d9006401d8006401d7006401d6006401d5
006401d4006401d3006401d2006401d1006401d0006401cf006401ce0064
01cd006401cc006401cb006401ca006401c9006401c8006401c7006401c6
006401c5006401c4006401c3006401c2006401c1006401c0006401bf0064
01be006401bd006401bc006401bb006401ba006401b9006401b8006401b7
006401b6006401b5006401b4006401b3006401b2006401b1006401b00064
01af006401ae006401ad006401ac006401ab006401aa006401a9006401a8
006401a7006401a6006401a5006401a4006401a3006401a2006401a10064
01a00064019f0064019e0064019d0064019c0064019b0064019a00640199
006401980064019700640196006401950064019400640193006401920064
0191006401900064018f0064018e0064018d0064018c0064018b0064018a
006401890064018800640187006401860064018500644180018400640183
0064018200640181006401800064017f0064017e0064017d0064017c0064
017b0064017a006401790064017800640177006401760064017500640174
006401730064017200640171006401700064016f0064016e0064016d0064
016c0064016b0064016a0064016900640168006401670064016600640165
00640164006401630064016200640161006401600064015f0064015e0064
015d0064015c0064015b0064015a00640159006401580064015700640156
00640155006401540064015300640152006401500064014f0064014e0064
014c0064014b0064014a0064014900640148006401470064014600640145
006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b59
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[10995 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> PBAAAA+Calibri AddT42Char 
2 322 17 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>PBAAAA+Calibri AddT42Char 
2 686 18 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>PBAAAA+Calibri AddT42Char 
2 2744 115 <00010022fffa046805140024006e401d24080b014d2824011a080b014d26
1a01281701260d012c19012c180119b8ffe8b40f10014c19b8ffe8b40c0d
014c18b8ffe8b40f10014c18b8ffe840120c0d014c1918191826251f5218
0512520555003f3f12393f11120139392f2f2b2b2b2b3130005d5d015d5d
5d2b5d2b250e0323222e0427012626363633321e02170133013e03333216
16060702b7040e19271d162118110c0703fe5908011228221c2112090401
73010169030814241e1f240d03081e0b0e0803010405080b0804b2161b0e
0403080d0afbbf043f0b0e0803050e1b1600>PBAAAA+Calibri AddT42Char 
2 3322 272 <0001005affed032003c900350089b11c00b8ffc0b310014d00b8ffe0b30d
014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f014d27b8ff
eeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b400d2f0e01
0e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48312cb801
06b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b2b2b3231
3025140e0623222e0235343e0233321e0615140623222e0223220615141e
0233323e0233321e020320020507193c4b582f61966535417199592b5144
3518090602120d0f273c553a777f21405d3c39563f2b0c070a0703a21119
110d19251d12407bb37585bf7a3b101a22180e131812271f212821b7ae57
83582b242b2308131d00>PBAAAA+Calibri AddT42Char 
2 3904 286 <0002005dffed039903ca002b003400ae402a2f363f366f360313200d014d
13200f014d1313212c100c014d2c180b014d2c100d014d2c100f10014c2c
b801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d014d04b8ff
eeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a4021212c
c78004900402c00401d0040104041c2fdc264a18ea600e700e020e09ea1c
4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b5de12b2b
2b2b12392f2b2b31305d0114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>PBAAAA+Calibri AddT42Char 
2 5206 367 <00010099fffa013e057100150040b73f174f176f170300b8fff0b30d014d
00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00b801f8b4
0a1046054c003f3f012fe12b2b2b2b31305d25140e0223222e023511343e
0233321e0215013e0812201918201307071320181920120819080b080404
080b080538080c080404080c0800>PBAAAA+Calibri AddT42Char 
2 5790 374 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PBAAAA+Calibri AddT42Char 
2 6080 381 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PBAAAA+Calibri AddT42Char 
2 6666 396 <00010099fffa02a703ca00330063b4703501260fb8fff6b30c014d0fb8ff
e8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f840120040
13014d004011014d00200d014d001a0ab8012540092b4a260f152049154c
003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d01140e0223222e
0223220e020711140e0223222e023511343e0233321e0215153e0333321e
0602a70206090808171d24151930353a23081220191820130706121c1716
1d100725413a391d0d21241d0c0403010362161e1109090908142e4c37fd
b0080b080404080b080384080b090303090b08833644270f03080a0a090e
1b00>PBAAAA+Calibri AddT42Char 
2 6908 400 <00010051ffed02ce03ca004900ce400c2f4b3f4b4f4b7f4baf4b0541b8ff
f0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b313014d41
b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c1b100d01
4d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f60000ffc040
0a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2edd370aeb
115011601170110337113711163cdb411b05294a16e8054d003fed3f1239
39ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b1239392f2f
e12b2b2b2b2b2b31305d01140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e0602ce
335e824e30574530160a04060b070b2b3f56382a44321b27405055514027
29527b5224483a291507030303070a06092236492f2a4029152840525553
4027010e456c4a260f171914241f131a10071b201b122336252634281f22
2b3e563c3561492c0c1215100c0f1610111910071619161323301c273528
20222a3c5400>PBAAAA+Calibri AddT42Char 
2 7304 410 <00010021ffef026d04ad003a005cb4290011232db8fff0b30f014d2db8ff
f0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b30b014d2d
b801f8400c170d2ded23481d0ded174831b80104b1074d003fed3fedcd3f
ed012f33e12b2b2b2b2b32cdc432313025140e0423222e02351123222635
343e02333335343e0233321e02151533321e02151406232311141633323e
0233321e02026d081020292e174664401d7e0f1205080d087d0713201819
201208e7080c0904120fe7374717241c1408050905045b1d22100e090625
4b734e020e2024131a1107d6070c090404090c07d607111a132420fe0a5d
5f090a09050e1800>PBAAAA+Calibri AddT42Char 
2 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/space 3 def
/B 17 def
/C 18 def
/V 115 def
/c 272 def
/e 286 def
/l 367 def
/n 374 def
/o 381 def
/r 396 def
/s 400 def
/t 410 def
end
PBAAAA+Calibri /Encoding get
dup 32 /space put
dup 66 /B put
dup 67 /C put
dup 86 /V put
dup 99 /c put
dup 101 /e put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
pop
end
%ADOEndSubsetFont
/DIAWEM+Calibri /PBAAAA+Calibri findfont ct_VMDictPut
/DIAWEM+Calibri*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B /C 18{/.notdef}rp /V 12{/.notdef}rp 
/c /.notdef /e 6{/.notdef}rp /l /.notdef /n /o 
2{/.notdef}rp /r /s /t 139{/.notdef}rp]
DIAWEM+Calibri nf
DIAWEM+Calibri*1 [18 0 0 -18 0 0 ]msf
508.8 233.5 mo
( )sh
103.78 137.47 mo
(electrons)
[8.96402 4.13992 8.96402 7.61407 5.95813 5.99397 9.48587 9.44989 0 ]xsh
171.48 137.47 mo
( )sh
DIAWEM+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
633.98 94.06 mo
(CB)
[9.6001 0 ]xsh
653.42 94.06 mo
( )sh
DIAWEM+Calibri*1 [18 0 0 -18 0 0 ]msf
635.69 222.41 mo
(V)sh
645.89 222.41 mo
(B)sh
655.73 222.41 mo
( )sh
[3 2.25 ] 0 dsh
296.48 66.57 mo
296.48 327 li
.690425 .932891 0 0 cmyk
@
420 66.57 mo
420 327 li
@
382.55 314.5 mo
419.01 314.5 li
419.01 315.5 li
382.55 315.5 li
cp
413.26 311.068 mo
420 315 li
413.26 318.932 li
413.02 319.071 412.72 318.99 412.58 318.752 cv
412.44 318.513 412.52 318.207 412.76 318.068 cv
418.76 314.568 li
418.76 315.432 li
412.76 311.932 li
412.52 311.793 412.44 311.487 412.58 311.248 cv
412.72 311.009 413.02 310.929 413.26 311.068 cv
cp
.740688 .455604 .0273442 0 cmyk
f
342 314.5 mo
297.47 314.5 li
297.47 315.5 li
342 315.5 li
cp
303.22 311.068 mo
296.47 315 li
303.22 318.932 li
303.45 319.071 303.76 318.99 303.9 318.752 cv
304.04 318.513 303.96 318.207 303.72 318.068 cv
297.72 314.568 li
297.72 315.432 li
303.72 311.932 li
303.96 311.793 304.04 311.487 303.9 311.248 cv
303.76 311.009 303.45 310.929 303.22 311.068 cv
cp
f
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: PBAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PBAAAA+Calibri gcheck setglobal} if
2 1982 90 <000200acfffa040b050e003600440091401e102e1137080b014d37100f01
4d37100c0d014c371810014d37180b014d37b80233b7294010014d293f11
b8fff0b310014d11b8fff0b30f014d11b8fff0b30d014d11b8fff6b30c01
4d11b8ffe8b30b014d11b80211b21c2e10b80108b67040014040173db801
0bb5215117550555003f3f3fed12392f5ded39012fe12b2b2b2b2b32d42b
e12b2b2b2b2b123939313025140e0223222e0227032e03232311140e0223
222e023511343633213216171e0315140e02071e03171316160134262726
2623231133323e02040b0614241e1a21140b0477152d3e543b7309132119
192114082917011331411a4b734e2723425c3920342d2814740e08fefd44
50193f3391a84463421f1a080c08040409100c013134573f23fdd9080c07
0505070c0804ae271f05030d38566f4341674f3a140e2b3c4e31fee3241d
03854c69170706fe4c213b50>PBAAAA+Calibri AddT42Char 
2 2324 94 <00010047ffed03630521004900e7b90041ffe8b40f10014c41b8fff0b30d
014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d41b8022c
402b32401314014c324011014d243224320c1b180f10014c1b100d014d1b
1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d00b8ffc0
b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb0127003700
0a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c3711371116
3cb8010cb5411b05295316b80129b10556003fed3f123939ed1139392f2f
2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b2be12b2b
2b2b2b313001140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0603634377a15d41
6f573b170b04080c080e3350714a385d43243252696e6852333b6991542b
574d3c1306040203060b070b2f445d3a3650341a32536a6e6a5333016b5b
8e633216202218251f161d12072228231e375033374e3b31333e54714f51
7f562d0f191f130b111813121c13091c231d1d304225364e3c32333d5371
>PBAAAA+Calibri AddT42Char 
PBAAAA+Calibri /CharStrings get begin
/R 90 def
/S 94 def
end
PBAAAA+Calibri /Encoding get
dup 82 /R put
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/DIAWEM+Calibri*1 
[32{/.notdef}rp /space 33{/.notdef}rp /B /C 14{/.notdef}rp /R /S 
2{/.notdef}rp /V 12{/.notdef}rp /c /.notdef /e 6{/.notdef}rp /l 
/.notdef /n /o 2{/.notdef}rp /r /s /t 139{/.notdef}rp]
DIAWEM+Calibri nf
DIAWEM+Calibri*1 [18.024 0 0 -18.024 0 0 ]msf
346.32 320.976 mo
(SCR)
[8.27301 9.60687 0 ]xsh
373.92 320.976 mo
( )sh
517.91 227.87 mo
544.75 197.04 li
544 196.38 li
517.16 227.21 li
cp
543.57 203.63 mo
545.03 195.96 li
537.64 198.46 li
537.38 198.55 537.24 198.83 537.32 199.1 cv
537.41 199.36 537.7 199.5 537.96 199.41 cv
544.54 197.18 li
543.89 196.61 li
542.59 203.44 li
542.53 203.71 542.71 203.97 542.98 204.02 cv
543.25 204.07 543.52 203.9 543.57 203.63 cv
cp
.868467 .537987 0 0 cmyk
f
170.45 132.15 mo
201.94 153.57 li
201.37 154.4 li
169.89 132.98 li
cp
199.11 147.5 mo
202.48 154.54 li
194.69 154 li
194.41 153.98 194.21 153.74 194.23 153.47 cv
194.25 153.19 194.48 152.99 194.76 153 cv
201.69 153.49 li
201.2 154.2 li
198.21 147.93 li
198.09 147.68 198.2 147.38 198.45 147.26 cv
198.7 147.15 198.99 147.25 199.11 147.5 cv
cp
.740688 .455604 .0273442 0 cmyk
f
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 ]]
] del_res
/DIAWEM+Calibri*1 uf
/DIAWEM+Calibri uf
/PBAAAA+Calibri uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
